import*as e from"chrome://global/content/ml/ort.webgpu.mjs";var t={497:()=>{},61:()=>{},836:()=>{},603:()=>{},247:()=>{},645:()=>{}},s={};function n(e){var a=s[e];if(void 0!==a)return a.exports;var r=s[e]={exports:{}};return t[e](r,r.exports,n),r.exports}n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};n.d(a,{Bup:()=>iw,O0k:()=>vl,MRG:()=>kl,o57:()=>bl,iKv:()=>zi,ELH:()=>Si,Hi6:()=>Pi,G2X:()=>Fi,crd:()=>Ti,UH6:()=>In,ptb:()=>Qw,EJs:()=>Fa,CMU:()=>ww,fZ7:()=>Bg,rKH:()=>Sm,m68:()=>Km,Plw:()=>Zm,$z$:()=>lf,_TZ:()=>Jm,W6E:()=>$m,QNG:()=>sf,nuw:()=>Ym,JP3:()=>Um,w0O:()=>rf,HMe:()=>ef,vTA:()=>Gm,mvA:()=>of,FJW:()=>tf,qCM:()=>Hm,wju:()=>Vm,S9w:()=>nf,Yd3:()=>Wm,UVV:()=>af,yGT:()=>Dm,wrZ:()=>Rm,BRf:()=>Lm,jQR:()=>zm,MOY:()=>Bm,ZIt:()=>Om,V9g:()=>Nm,TUv:()=>Im,xIA:()=>qm,db0:()=>jm,$TP:()=>Qm,gqD:()=>Xm,oye:()=>Lw,v6I:()=>Ea,TWC:()=>Yw,Xh$:()=>ny,F05:()=>Ri,MH$:()=>qi,vqx:()=>Gi,hbt:()=>Ui,hbT:()=>Xn,E9I:()=>ao,V11:()=>gy,foZ:()=>Pf,Dji:()=>fu,EKW:()=>mu,oaf:()=>pu,bmk:()=>io,VoY:()=>uo,MRX:()=>lo,o2t:()=>co,rSR:()=>oo,DIv:()=>ro,Ft_:()=>zn,bQt:()=>Sf,tDL:()=>Yi,JGb:()=>Zi,Hvf:()=>Qi,IrO:()=>sl,wZy:()=>tl,Sm3:()=>el,eUP:()=>ya,ZiE:()=>wa,P3b:()=>Ad,$P2:()=>Ed,dg9:()=>Md,jld:()=>Qn,fv3:()=>Lf,GEs:()=>If,yaC:()=>Wl,GEu:()=>ql,E_G:()=>cc,tUF:()=>lc,FIB:()=>ic,nD4:()=>Xl,CAk:()=>Hl,u2M:()=>pa,CCt:()=>Jl,N2L:()=>Kl,S7g:()=>Vo,wc1:()=>Uo,h0m:()=>Do,LdY:()=>jo,Aib:()=>$o,S9m:()=>No,kOS:()=>Un,qtL:()=>mf,mp$:()=>ff,SQp:()=>zf,XWm:()=>sc,lHM:()=>tc,PRX:()=>Vh,$r3:()=>cw,qWZ:()=>Nh,IVZ:()=>Oh,oZ3:()=>$h,ioA:()=>Ka,hFk:()=>Pc,riX:()=>Fc,bOZ:()=>Tc,F$M:()=>ha,gGu:()=>ea,uRS:()=>nd,q7U:()=>sd,wYL:()=>td,qt5:()=>va,z1x:()=>Co,Vx0:()=>Po,y5s:()=>To,y_I:()=>Fo,FSH:()=>Ao,jJ4:()=>Eo,fRb:()=>Vn,uku:()=>Of,aN4:()=>p_,Llt:()=>Bf,lf8:()=>h_,NJd:()=>__,OBR:()=>g_,nII:()=>f_,$o$:()=>m_,xCN:()=>Rf,YHO:()=>Ju,ALp:()=>Gf,c$o:()=>Hu,C2_:()=>Xu,ooI:()=>Rp,Ex8:()=>jp,A_V:()=>Gp,Efq:()=>Dp,b5h:()=>dw,EX5:()=>Up,Weu:()=>Vp,xUX:()=>Ne,XfN:()=>qo,xNh:()=>Ho,w4W:()=>Wo,_yz:()=>Xo,L3d:()=>Ro,Zip:()=>Go,pGQ:()=>On,Nmr:()=>Qo,lr8:()=>ei,Qs9:()=>Zo,Ilc:()=>Yo,pW7:()=>Ko,vTy:()=>Jo,$Vt:()=>Nn,$MY:()=>yp,jWB:()=>wp,twb:()=>$f,Bl1:()=>Iu,oB7:()=>Nf,EPI:()=>zu,cXP:()=>Su,Dki:()=>Qu,FoX:()=>Ku,bEM:()=>dy,IgO:()=>n_,A0R:()=>s_,w4p:()=>Df,Fbv:()=>yu,j9c:()=>xu,fen:()=>Vf,ZM0:()=>wu,JFO:()=>bu,DDe:()=>gu,HaQ:()=>ku,LlQ:()=>x_,IeB:()=>y_,s8j:()=>w_,jzC:()=>v_,gQI:()=>k_,SXK:()=>b_,YVy:()=>oi,uwI:()=>ri,NDb:()=>ni,xpG:()=>ai,yuQ:()=>si,cpF:()=>ti,i8h:()=>jn,Oaj:()=>iy,TNE:()=>Uf,KI$:()=>jf,pHg:()=>u_,fCQ:()=>d_,X6D:()=>Qh,KkK:()=>qf,muz:()=>Kh,SIh:()=>Jh,CF0:()=>Io,gEj:()=>Oo,Nyc:()=>Lo,vh2:()=>Bo,SzV:()=>zo,SPn:()=>So,_vb:()=>Rn,QSM:()=>lw,qjJ:()=>hr,nDC:()=>ci,QGw:()=>di,iGD:()=>ui,nD1:()=>li,pSU:()=>ii,fzV:()=>ra,q9s:()=>Uc,Uc1:()=>jc,cep:()=>Dc,rGP:()=>ce,Hff:()=>Bh,$ph:()=>Lh,$Ld:()=>Ih,nJ5:()=>na,mvc:()=>Yd,vgU:()=>Zd,Tk_:()=>Qd,e1W:()=>Jw,fQJ:()=>qg,YKo:()=>Uw,syV:()=>Nl,IUW:()=>Ol,jIC:()=>Og,zMO:()=>ja,uB5:()=>Ua,qJs:()=>Wf,j2j:()=>c_,jt4:()=>l_,vdi:()=>i_,Cb2:()=>_c,FuQ:()=>uc,PBg:()=>dc,pK1:()=>Wn,Shx:()=>Cc,SX4:()=>Ac,adp:()=>Ec,Xvs:()=>Mc,l2J:()=>vc,DbD:()=>kc,j7p:()=>wc,XBq:()=>gc,tAq:()=>fc,bFh:()=>bc,PV9:()=>xc,FqW:()=>yc,pw$:()=>aa,R0r:()=>cd,zJu:()=>ld,vlr:()=>id,xJk:()=>od,bKx:()=>rd,d56:()=>ad,VBL:()=>ia,UyU:()=>Vc,y71:()=>$c,UkL:()=>Nc,uFN:()=>ed,okz:()=>Yc,G$U:()=>Zc,GLc:()=>la,pSS:()=>E_,BQD:()=>Xf,Vx1:()=>M_,O5n:()=>$g,kjR:()=>Kd,UDe:()=>Jd,Ed4:()=>Oc,mOb:()=>Bc,Ynb:()=>Lc,Kwv:()=>$n,EVN:()=>Ou,bRn:()=>Bu,xCl:()=>Lu,qQb:()=>dh,vnq:()=>uh,gqe:()=>ch,oO_:()=>lh,OPC:()=>$d,Vvo:()=>Nd,vi3:()=>Od,Yiu:()=>jl,ePJ:()=>Hf,q56:()=>Dl,d7u:()=>Dg,O0q:()=>ty,phI:()=>Kw,G_t:()=>Ff,Vkl:()=>gf,CfF:()=>Ff,I07:()=>sy,GXe:()=>cy,aJl:()=>ey,dYU:()=>pr,cw6:()=>mc,VYv:()=>pc,n3o:()=>hc,WoL:()=>Kf,kn$:()=>ac,_i4:()=>nc,Fex:()=>Ug,tCA:()=>rc,g1K:()=>oc,AEy:()=>Cl,jWM:()=>Ic,X0l:()=>zc,RvM:()=>Sc,Hiq:()=>Yn,K5U:()=>Il,k5w:()=>Ll,c$b:()=>Qf,ehA:()=>zl,fim:()=>$a,VT2:()=>Da,yMg:()=>Va,LqK:()=>$i,Rcj:()=>Ni,tm_:()=>Oi,VT:()=>$_,HT0:()=>N_,bZR:()=>O_,HfH:()=>ua,$ow:()=>Jn,YZs:()=>Ki,UNt:()=>Hi,Pgx:()=>Ji,Mt5:()=>Xi,YR3:()=>Wi,cj6:()=>Hn,QRP:()=>yi,OOL:()=>ki,xfe:()=>xi,zml:()=>bi,C_m:()=>wi,Mjg:()=>gi,IvO:()=>sa,kPE:()=>ji,KcC:()=>Di,wXv:()=>Vi,FmT:()=>B_,W7k:()=>L_,U_I:()=>I_,OFW:()=>fa,Hw7:()=>eg,y1Z:()=>Yf,qph:()=>o_,FDZ:()=>Zf,Hb:()=>r_,T1J:()=>a_,YqH:()=>hf,_MQ:()=>_r,hB$:()=>Mp,mPV:()=>kp,b4i:()=>vp,S37:()=>Rg,PWE:()=>Ma,W0U:()=>$p,sG8:()=>Bp,Oul:()=>Np,YCy:()=>Lp,yZM:()=>Op,erL:()=>Ip,pe4:()=>Xa,z_R:()=>Ha,uA4:()=>Fh,uKS:()=>Th,eQ7:()=>Ch,vZB:()=>pi,NlK:()=>fi,CBj:()=>mi,J_N:()=>hi,t8g:()=>_i,jTN:()=>Ln,V7I:()=>qc,Jfh:()=>Rc,Bz$:()=>Gc,DN9:()=>sg,jgy:()=>ap,M3c:()=>rp,K66:()=>tg,mKg:()=>np,k1H:()=>sp,Uvp:()=>ag,sIn:()=>lp,pDc:()=>cp,Xxh:()=>ng,Bls:()=>ip,TCq:()=>op,jeS:()=>og,F6T:()=>_p,aJ7:()=>hp,Y0u:()=>rg,CJY:()=>up,kYJ:()=>dp,g4F:()=>lg,MHq:()=>fp,rz8:()=>gp,N5j:()=>ig,rbM:()=>mp,ZKw:()=>pp,yiA:()=>dg,qBz:()=>au,LFe:()=>cg,Z9R:()=>nu,pBZ:()=>su,IWp:()=>iu,F75:()=>ou,hNN:()=>ru,lX9:()=>no,_Bh:()=>po,JE9:()=>mo,t68:()=>fo,S5F:()=>ho,wAB:()=>_o,$Tv:()=>Bl,vZ9:()=>uw,s7A:()=>Pl,mKJ:()=>Fl,Ck8:()=>Tl,lmt:()=>yw,jZx:()=>Fd,rZ_:()=>Td,zPm:()=>Cd,vMO:()=>bp,Obh:()=>xp,XW6:()=>ep,jN0:()=>tp,TEh:()=>Yh,lPY:()=>Zh,ORI:()=>da,SPc:()=>Ja,Y8J:()=>qa,Paj:()=>wo,Tc6:()=>go,wfL:()=>ug,EVf:()=>ba,zEN:()=>zd,LGm:()=>Sd,VD9:()=>Pd,Xuy:()=>ry,Fip:()=>Qc,FW1:()=>Kc,FgJ:()=>Jc,ZVw:()=>Hc,vqf:()=>Xc,zgG:()=>Wc,a86:()=>_d,A3P:()=>ud,knH:()=>dd,GZ7:()=>hg,$Mx:()=>du,jCl:()=>_g,jlM:()=>cu,tU7:()=>lu,k1d:()=>xw,oKc:()=>hu,Uys:()=>pg,MYn:()=>_u,WJS:()=>uu,lAn:()=>Vl,ZNn:()=>$l,_XV:()=>Ew,$hY:()=>Pp,e3g:()=>Fp,git:()=>Tp,wcw:()=>Cp,vN5:()=>Ap,nPB:()=>Ep,KzV:()=>vd,izm:()=>kd,Gzn:()=>bd,CR8:()=>Rl,YEl:()=>xg,Ghe:()=>Gl,ZnA:()=>vw,VkI:()=>xd,L1Z:()=>yd,jbx:()=>wd,$Un:()=>$w,Y2A:()=>so,_dY:()=>Sn,Tyd:()=>Ta,aLA:()=>qp,Jlf:()=>yf,pgF:()=>Gd,A0H:()=>bg,U0l:()=>Ud,guh:()=>jd,tjD:()=>_w,XyO:()=>W_,yD1:()=>q_,SJu:()=>R_,NXG:()=>Aw,hf2:()=>pf,DK6:()=>jw,V2z:()=>md,jZD:()=>pd,f7H:()=>hd,XNj:()=>oa,lyK:()=>gd,bHs:()=>kg,d52:()=>fd,mdL:()=>Cw,xIZ:()=>Eu,h6w:()=>vg,zcr:()=>Mu,Tl7:()=>Au,RZG:()=>vu,REm:()=>ow,YOx:()=>lr,MNq:()=>my,vts:()=>py,hKP:()=>Wa,Giz:()=>Vu,d8n:()=>$u,fl$:()=>Nu,sns:()=>bo,eu8:()=>Mo,Xi0:()=>ko,Xsl:()=>vo,Ilk:()=>xo,Ccq:()=>yo,yQp:()=>Dn,bpB:()=>rl,Vnd:()=>ll,MgS:()=>ol,sbd:()=>il,tKX:()=>al,RIx:()=>nl,Bi5:()=>Kn,FlD:()=>Mg,G3L:()=>z_,fX1:()=>S_,Xrw:()=>P_,q85:()=>Tw,DJ0:()=>e_,DVM:()=>t_,rQe:()=>Yu,rgj:()=>Zu,RBo:()=>hw,HLV:()=>Ag,dBN:()=>Rh,YjU:()=>qh,SsB:()=>Eg,U14:()=>Gh,g$7:()=>Uh,dt5:()=>cf,AVh:()=>df,iAJ:()=>Cg,gJd:()=>Zl,UX7:()=>Ql,Z83:()=>Yl,wRc:()=>ma,cR9:()=>ec,MNc:()=>Ul,gbg:()=>Hf,zPu:()=>Dg,QiY:()=>pw,Pqo:()=>kh,fqH:()=>vh,oJL:()=>Mh,FEt:()=>bh,LN6:()=>xh,GqW:()=>Fw,LvX:()=>xa,D$4:()=>Ei,z45:()=>Ci,qvY:()=>Ai,rb:()=>Mi,RWH:()=>vi,T$2:()=>Bn,UaF:()=>Hh,E6D:()=>Xh,I04:()=>Wh,fjb:()=>zh,diq:()=>Sh,nR6:()=>Ph,oZv:()=>dr,EpU:()=>ur,Dlv:()=>yh,vn6:()=>wh,sCu:()=>Rw,S3$:()=>Ga,Kul:()=>Wu,O_r:()=>Tg,c93:()=>qu,qcZ:()=>Ru,crA:()=>Uu,TzE:()=>Gu,TrS:()=>ju,VG4:()=>Du,dAU:()=>Bi,j_7:()=>Li,j6y:()=>Ii,fGD:()=>qn,vf1:()=>Fu,Fzc:()=>Tu,b9b:()=>Pu,xbg:()=>Cu,_0v:()=>Qa,qYS:()=>$e,H6X:()=>Gw,EbS:()=>Vw,AOe:()=>Xw,T1P:()=>yy,psK:()=>ly,iaN:()=>Dw,sKA:()=>_f,hTz:()=>Ps,COx:()=>Ya,HBQ:()=>Za,A4X:()=>Ah,SNK:()=>Eh,OP6:()=>qw,LsV:()=>zp,n_R:()=>Sp,cU1:()=>Pw,GNt:()=>Q_,dp7:()=>Z_,IzE:()=>K_,ct5:()=>J_,bGU:()=>nh,WIq:()=>th,xI8:()=>sh,W5i:()=>eh,UqB:()=>Y_,$gq:()=>jg,VeZ:()=>Jf,wY7:()=>Pg,gxi:()=>Bd,D_:()=>Fg,WFR:()=>qd,w2j:()=>Rd,IMK:()=>Hd,bg1:()=>Xd,xrW:()=>Wd,h_s:()=>Ld,LJl:()=>Id,qLW:()=>Sl,ZGD:()=>tu,eJU:()=>Sg,m1H:()=>eu,GPY:()=>Dd,Y_v:()=>zg,uzq:()=>Vd,KJ:()=>jh,PyP:()=>wf,Ct0:()=>Dh,Kt3:()=>ka,P_g:()=>oh,cl7:()=>ih,x5Z:()=>rh,fGl:()=>ah,OQ0:()=>ga,bAw:()=>mw,ltw:()=>G_,aGV:()=>j_,dMI:()=>U_,i3J:()=>D_,YyD:()=>V_,RT2:()=>Sw,K_R:()=>zw,AyL:()=>gh,Xyp:()=>ph,Eh_:()=>mh,ag_:()=>fh,Pyv:()=>hh,zys:()=>_h,e25:()=>fw,eU0:()=>H_,iYt:()=>X_,VFU:()=>gw,EAC:()=>Al,aHU:()=>El,gSt:()=>Ml,Vf$:()=>Iw,pgB:()=>xy,Fg4:()=>Ra,I_U:()=>_a,d7$:()=>pl,_Dc:()=>_l,cD:()=>hl,v11:()=>dl,Pzh:()=>cl,QJ0:()=>gl,czX:()=>xl,vGK:()=>wl,pJ8:()=>yl,OK_:()=>fl,klo:()=>ml,gN:()=>ta,jN2:()=>Gn,GXK:()=>ul,Z0G:()=>uf,nWJ:()=>Lg,ajg:()=>T_,WLR:()=>Ig,mjH:()=>C_,URg:()=>F_,CbL:()=>A_,vHC:()=>Zw,$3d:()=>Hw,KPo:()=>ay,ZUB:()=>oy,gEG:()=>_e,$qk:()=>Ze,gJr:()=>se,Omf:()=>te,TyF:()=>he,_K2:()=>E,a2Z:()=>at,ck6:()=>rt,dOS:()=>Ca,kvc:()=>Kg,s_v:()=>Jg,GWP:()=>De,vZh:()=>je,vdP:()=>Q,WFC:()=>Ms,l8C:()=>He,vaw:()=>cr,BW4:()=>fy,CMs:()=>ee,VOO:()=>ne,DDf:()=>Ue,T9B:()=>re,i2o:()=>st,X7P:()=>Xe,jV8:()=>de,Brl:()=>tw,jkA:()=>ae,SaS:()=>ot,oCF:()=>it,Ny6:()=>Ve,SXi:()=>Z,TkF:()=>hy,Jaq:()=>ut,_9M:()=>dt,_2u:()=>Xg,z8$:()=>Ge,LIG:()=>ue,dik:()=>We,Vs9:()=>Y,OjR:()=>nw,t$z:()=>Ye,cQR:()=>tt,rfw:()=>Re,E:()=>aw,Ul9:()=>lt,aFj:()=>ct});var r={};n.r(r),n.d(r,{BeitFeatureExtractor:()=>Pf,BitImageProcessor:()=>Sf,CLIPFeatureExtractor:()=>Lf,CLIPImageProcessor:()=>If,ChineseCLIPFeatureExtractor:()=>zf,ConvNextFeatureExtractor:()=>Of,ConvNextImageProcessor:()=>Bf,DPTFeatureExtractor:()=>Rf,DPTImageProcessor:()=>Gf,DeiTFeatureExtractor:()=>$f,DeiTImageProcessor:()=>Nf,DetrFeatureExtractor:()=>Df,DetrImageProcessor:()=>Vf,DonutFeatureExtractor:()=>Uf,DonutImageProcessor:()=>jf,EfficientNetImageProcessor:()=>qf,GLPNFeatureExtractor:()=>Wf,GroundingDinoImageProcessor:()=>Xf,Idefics3ImageProcessor:()=>Hf,JinaCLIPImageProcessor:()=>Kf,LlavaOnevisionImageProcessor:()=>Qf,Mask2FormerImageProcessor:()=>eg,MaskFormerFeatureExtractor:()=>Yf,MaskFormerImageProcessor:()=>Zf,MobileNetV1FeatureExtractor:()=>sg,MobileNetV1ImageProcessor:()=>tg,MobileNetV2FeatureExtractor:()=>ag,MobileNetV2ImageProcessor:()=>ng,MobileNetV3FeatureExtractor:()=>og,MobileNetV3ImageProcessor:()=>rg,MobileNetV4FeatureExtractor:()=>lg,MobileNetV4ImageProcessor:()=>ig,MobileViTFeatureExtractor:()=>dg,MobileViTImageProcessor:()=>cg,NougatImageProcessor:()=>ug,OwlViTFeatureExtractor:()=>hg,OwlViTImageProcessor:()=>_g,Owlv2ImageProcessor:()=>pg,Phi3VImageProcessor:()=>xg,PvtImageProcessor:()=>bg,Qwen2VLImageProcessor:()=>kg,RTDetrImageProcessor:()=>vg,SamImageProcessor:()=>Mg,SegformerFeatureExtractor:()=>Ag,SegformerImageProcessor:()=>Eg,SiglipImageProcessor:()=>Cg,SmolVLMImageProcessor:()=>Hf,Swin2SRImageProcessor:()=>Tg,VLMImageProcessor:()=>Jf,ViTFeatureExtractor:()=>Pg,ViTImageProcessor:()=>Fg,VitMatteImageProcessor:()=>Sg,VitPoseImageProcessor:()=>zg,YolosFeatureExtractor:()=>Lg,YolosImageProcessor:()=>Ig});var o={};n.r(o),n.d(o,{ASTFeatureExtractor:()=>iw,ClapFeatureExtractor:()=>cw,DacFeatureExtractor:()=>dw,EncodecFeatureExtractor:()=>lw,ImageFeatureExtractor:()=>Ff,MoonshineFeatureExtractor:()=>uw,PyAnnoteFeatureExtractor:()=>_w,SeamlessM4TFeatureExtractor:()=>hw,SpeechT5FeatureExtractor:()=>pw,Wav2Vec2FeatureExtractor:()=>mw,WeSpeakerFeatureExtractor:()=>fw,WhisperFeatureExtractor:()=>gw});var i={};n.r(i),n.d(i,{Florence2Processor:()=>Og,GroundingDinoProcessor:()=>$g,Idefics3Processor:()=>Dg,JinaCLIPProcessor:()=>Ug,MgpstrProcessor:()=>Rg,MoonshineProcessor:()=>yw,OwlViTProcessor:()=>xw,PaliGemmaProcessor:()=>Ew,Phi3VProcessor:()=>vw,PyAnnoteProcessor:()=>Aw,Qwen2VLProcessor:()=>Cw,SamProcessor:()=>Tw,SmolVLMProcessor:()=>Dg,SpeechT5Processor:()=>Fw,UltravoxProcessor:()=>Pw,VLChatProcessor:()=>jg,Wav2Vec2Processor:()=>Sw,Wav2Vec2ProcessorWithLM:()=>zw,WhisperProcessor:()=>Iw});var l=n(603),c=n(247),d=n(645);const u="undefined"!=typeof window&&void 0!==window.document,_="undefined"!=typeof self&&"DedicatedWorkerGlobalScope"===self.constructor?.name,h="undefined"!=typeof self&&"caches"in self,p="undefined"!=typeof navigator&&"gpu"in navigator,m="undefined"!=typeof navigator&&"ml"in navigator,f="undefined"!=typeof process,g=f&&"node"===process?.release?.name,w=!A(l),y=!A(c),x=Object.freeze({IS_BROWSER_ENV:u,IS_WEBWORKER_ENV:_,IS_WEB_CACHE_AVAILABLE:h,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:m,IS_PROCESS_AVAILABLE:f,IS_NODE_ENV:g,IS_FS_AVAILABLE:w,IS_PATH_AVAILABLE:y}),b=w&&y;let k="./";if(b){const e=Object(import.meta).url;e?k=c.dirname(c.dirname(d.fileURLToPath(e))):"undefined"!=typeof __dirname&&(k=c.dirname(__dirname))}const v=b?c.join(k,"/.cache/"):null,M="/models/",E={version:"3.4.0",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(u||_),localModelPath:b?c.join(k,M):M,useFS:w,useBrowserCache:h,useFSCache:w,cacheDir:v,useCustomCache:!1,customCache:null};function A(e){return 0===Object.keys(e).length}const C=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}};function T(e,t){e&&e(t)}function F(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function P(e){return null==e||-1===e}function S(e){const t=[];let s=e;for(;Array.isArray(s);)t.push(s.length),s=s[0];return t}function z(...e){return Array.prototype.concat.apply([],e)}function I(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function L(e,t){return Math.abs((e+t)%(2*t)-t)}function B(e,t){const s=URL.createObjectURL(t),n=document.createElement("a");n.href=s,n.download=e,n.click(),n.remove(),URL.revokeObjectURL(s)}function O(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function N(e){let t=0;for(const s of e)++t;return t}function $(e,t){let s=0;for(const n of e)n===t&&++s;return s}var V=n(497),D=n(61);const j=100,U={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class G{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=V.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=V.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();const s=V.createReadStream(e);this.body=new ReadableStream({start(e){s.on("data",(t=>e.enqueue(t))),s.on("end",(()=>e.close())),s.on("error",(t=>e.error(t)))},cancel(){s.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",U[e]??"application/octet-stream")}clone(){let e=new G(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await V.promises.readFile(this.filePath)).buffer}async blob(){const e=await V.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await V.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function R(e,t=null,s=null){let n;try{n=new URL(e)}catch(e){return!1}return!(t&&!t.includes(n.protocol))&&!(s&&!s.includes(n.hostname))}async function q(e){if(E.useFS&&!R(e,["http:","https:","blob:"]))return new G(e.toString());if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,s=E.version,n=new Headers;n.set("User-Agent",`transformers.js/${s}; is_ci/${t};`);if(R(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&n.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:n})}return fetch(e)}const W={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class X{constructor(e){this.path=e}async match(e){let t=D.join(this.path,e),s=new G(t);return s.exists?s:void 0}async put(e,t,s=void 0){let n=D.join(this.path,e);try{const e=t.headers.get("Content-Length"),a=parseInt(e??"0");let r=0;await V.promises.mkdir(D.dirname(n),{recursive:!0});const o=V.createWriteStream(n),i=t.body.getReader();for(;;){const{done:e,value:t}=await i.read();if(e)break;await new Promise(((e,s)=>{o.write(t,(t=>{t?s(t):e()}))})),r+=t.length;const n=a?r/a*100:0;s?.({progress:n,loaded:r,total:a})}o.close()}catch(e){try{await V.promises.unlink(n)}catch{}throw e}}}async function H(e,t,s=!0,n={},a=!1){if(!E.allowLocalModels){if(n.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!E.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let r;if(T(n.progress_callback,{status:"initiate",name:e,file:t}),!r&&E.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{r=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!r&&E.useFSCache&&(r=new X(n.cache_dir??E.cacheDir)),!r&&E.useCustomCache){if(!E.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!E.customCache.match||!E.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");r=E.customCache}const o=n.revision??"main";let i,l,c=K(e,t),d=K(E.localModelPath,c),u=c,_=K(E.remoteHost,E.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(o)),t),h="main"===o?c:K(e,o,t),p=r instanceof X?h:_,m=!1;r&&(l=await async function(e,...t){for(let s of t)try{let t=await e.match(s);if(t)return t}catch(e){continue}}(r,d,p));const f=void 0!==l;if(void 0===l){if(E.allowLocalModels){if(R(c,["http:","https:"])){if(n.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${u}.`);if(!E.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${u}.`)}else try{l=await q(u),i=u}catch(e){console.warn(`Unable to load from local path "${u}": "${e}"`)}}if(void 0===l||404===l.status){if(n.local_files_only||!E.allowRemoteModels){if(s)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${u}".`);return null}if(l=await q(_),200!==l.status)return function(e,t,s){if(!s)return null;const n=W[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${n}: "${t}".`)}(l.status,_,s);i=p}m=r&&"undefined"!=typeof Response&&l instanceof Response&&200===l.status}let g;if(T(n.progress_callback,{status:"download",name:e,file:t}),!x.IS_NODE_ENV||!a){let s;n.progress_callback?f&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(s=new Uint8Array(await l.arrayBuffer()),T(n.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:s.length,total:s.length})):s=await async function(e,t){const s=e.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let n=parseInt(s??"0"),a=new Uint8Array(n),r=0;const o=e.body.getReader();async function i(){const{done:e,value:s}=await o.read();if(e)return;const l=r+s.length;if(l>n){n=l;const e=new Uint8Array(n);e.set(a),a=e}a.set(s,r),r=l;return t({progress:r/n*100,loaded:r,total:n}),i()}return await i(),a}(l,(s=>{T(n.progress_callback,{status:"progress",name:e,file:t,...s})})):s=new Uint8Array(await l.arrayBuffer()),g=s}if(m&&i&&void 0===await r.match(i)&&(g?await r.put(i,new Response(g,{headers:l.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})):await r.put(i,l,n.progress_callback)),T(n.progress_callback,{status:"done",name:e,file:t}),g){if(a)throw new Error("Cannot return path in a browser environment.");return g}if(l instanceof G)return l.filePath;const w=await r.match(i);if(w instanceof G)return w.filePath;throw new Error("Unable to return path for response.")}async function J(e,t,s=!0,n={}){const a=await H(e,t,s,n,!1);if(null===a)return{};const r=new TextDecoder("utf-8").decode(a);return JSON.parse(r)}function K(...e){return(e=e.map(((t,s)=>(s&&(t=t.replace(new RegExp("^/"),"")),s!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}function Q(e,[t,s,n],[a,r],o="bilinear",i=!1){const l=r/n,c=a/s,d=new e.constructor(a*r*t),u=s*n,_=a*r;for(let o=0;o<a;++o)for(let a=0;a<r;++a){const i=o*r+a,h=(a+.5)/l-.5,p=(o+.5)/c-.5;let m=Math.floor(h),f=Math.floor(p);const g=Math.min(m+1,n-1),w=Math.min(f+1,s-1);m=Math.max(m,0),f=Math.max(f,0);const y=h-m,x=p-f,b=(1-y)*(1-x),k=y*(1-x),v=(1-y)*x,M=y*x,E=f*n,A=w*n,C=E+m,T=E+g,F=A+m,P=A+g;for(let s=0;s<t;++s){const t=s*u;d[s*_+i]=b*e[t+C]+k*e[t+T]+v*e[t+F]+M*e[t+P]}}return d}function Z(e,t,s){const n=new Array(s.length),a=new Array(s.length);for(let e=s.length-1,r=1;e>=0;--e)a[e]=r,n[e]=t[s[e]],r*=n[e];const r=s.map(((e,t)=>a[s.indexOf(t)])),o=new e.constructor(e.length);for(let s=0;s<e.length;++s){let n=0;for(let e=t.length-1,a=s;e>=0;--e)n+=a%t[e]*r[e],a=Math.floor(a/t[e]);o[n]=e[s]}return[o,n]}function Y(e){const t=re(e)[0],s=e.map((e=>Math.exp(e-t))),n=s.reduce(((e,t)=>e+t),0);return s.map((e=>e/n))}function ee(e){const t=re(e)[0];let s=0;for(let n=0;n<e.length;++n)s+=Math.exp(e[n]-t);const n=Math.log(s);return e.map((e=>e-t-n))}function te(e,t){let s=0;for(let n=0;n<e.length;++n)s+=e[n]*t[n];return s}function se(e,t){return te(e,t)/(ne(e)*ne(t))}function ne(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function ae(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let n=1;n<e.length;++n)e[n]<t&&(t=e[n],s=n);return[t,s]}function re(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let n=1;n<e.length;++n)e[n]>t&&(t=e[n],s=n);return[t,s]}function oe(e){return e>0&&!(e&e-1)}class ie{constructor(e){if(this.size=0|e,this.size<=1||!oe(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const s=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const s=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)s[t>>>1]=e[t];return s}toComplexArray(e,t){const s=t||this.createComplexArray();for(let t=0;t<s.length;t+=2)s[t]=e[t>>>1],s[t+1]=0;return s}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,s){const n=this._csize;let a,r,o=1<<this._width,i=n/o<<1;const l=this._bitrev;if(4===i)for(a=0,r=0;a<n;a+=i,++r){const s=l[r];this._singleTransform2(t,e,a,s,o)}else for(a=0,r=0;a<n;a+=i,++r){const n=l[r];this._singleTransform4(t,e,a,n,o,s)}const c=this.table;for(o>>=2;o>=2;o>>=2){i=n/o<<1;const t=i>>>2;for(a=0;a<n;a+=i){const n=a+t-1;for(let r=a,i=0;r<n;r+=2,i+=o){const n=r,a=n+t,o=a+t,l=o+t,d=e[n],u=e[n+1],_=e[a],h=e[a+1],p=e[o],m=e[o+1],f=e[l],g=e[l+1],w=c[i],y=s*c[i+1],x=_*w-h*y,b=_*y+h*w,k=c[2*i],v=s*c[2*i+1],M=p*k-m*v,E=p*v+m*k,A=c[3*i],C=s*c[3*i+1],T=f*A-g*C,F=f*C+g*A,P=d+M,S=u+E,z=d-M,I=u-E,L=x+T,B=b+F,O=s*(x-T),N=s*(b-F);e[n]=P+L,e[n+1]=S+B,e[a]=z+N,e[a+1]=I-O,e[o]=P-L,e[o+1]=S-B,e[l]=z-N,e[l+1]=I+O}}}}_singleTransform2(e,t,s,n,a){const r=e[n],o=e[n+1],i=e[n+a],l=e[n+a+1];t[s]=r+i,t[s+1]=o+l,t[s+2]=r-i,t[s+3]=o-l}_singleTransform4(e,t,s,n,a,r){const o=2*a,i=3*a,l=e[n],c=e[n+1],d=e[n+a],u=e[n+a+1],_=e[n+o],h=e[n+o+1],p=e[n+i],m=e[n+i+1],f=l+_,g=c+h,w=l-_,y=c-h,x=d+p,b=u+m,k=r*(d-p),v=r*(u-m);t[s]=f+x,t[s+1]=g+b,t[s+2]=w+v,t[s+3]=y-k,t[s+4]=f-x,t[s+5]=g-b,t[s+6]=w-v,t[s+7]=y+k}_realTransform4(e,t,s){const n=this._csize;let a,r,o=1<<this._width,i=n/o<<1;const l=this._bitrev;if(4===i)for(a=0,r=0;a<n;a+=i,++r){const s=l[r];this._singleRealTransform2(t,e,a,s>>>1,o>>>1)}else for(a=0,r=0;a<n;a+=i,++r){const n=l[r];this._singleRealTransform4(t,e,a,n>>>1,o>>>1,s)}const c=this.table;for(o>>=2;o>=2;o>>=2){i=n/o<<1;const t=i>>>1,r=t>>>1,l=r>>>1;for(a=0;a<n;a+=i)for(let n=0,i=0;n<=l;n+=2,i+=o){const o=a+n,d=o+r,u=d+r,_=u+r,h=e[o],p=e[o+1],m=e[d],f=e[d+1],g=e[u],w=e[u+1],y=e[_],x=e[_+1],b=h,k=p,v=c[i],M=s*c[i+1],E=m*v-f*M,A=m*M+f*v,C=c[2*i],T=s*c[2*i+1],F=g*C-w*T,P=g*T+w*C,S=c[3*i],z=s*c[3*i+1],I=y*S-x*z,L=y*z+x*S,B=b+F,O=k+P,N=b-F,$=k-P,V=E+I,D=A+L,j=s*(E-I),U=s*(A-L);if(e[o]=B+V,e[o+1]=O+D,e[d]=N+U,e[d+1]=$-j,0===n){e[u]=B-V,e[u+1]=O-D;continue}if(n===l)continue;const G=a+r-n,R=a+t-n;e[G]=N-s*U,e[G+1]=-$-s*j,e[R]=B-s*V,e[R+1]=s*D-O}}const d=n>>>1;for(let t=2;t<d;t+=2)e[n-t]=e[t],e[n-t+1]=-e[t+1]}_singleRealTransform2(e,t,s,n,a){const r=e[n],o=e[n+a];t[s]=r+o,t[s+1]=0,t[s+2]=r-o,t[s+3]=0}_singleRealTransform4(e,t,s,n,a,r){const o=2*a,i=3*a,l=e[n],c=e[n+a],d=e[n+o],u=e[n+i],_=l+d,h=l-d,p=c+u,m=r*(c-u);t[s]=_+p,t[s+1]=0,t[s+2]=h,t[s+3]=-m,t[s+4]=_-p,t[s+5]=0,t[s+6]=h,t[s+7]=m}}class le{constructor(e){const t=2*(e-1),s=2*(2*e-1),n=2**Math.ceil(Math.log2(s));this.bufferSize=n,this._a=t;const a=new Float64Array(s),r=new Float64Array(n);this._chirpBuffer=new Float64Array(n),this._buffer1=new Float64Array(n),this._buffer2=new Float64Array(n),this._outBuffer1=new Float64Array(n),this._outBuffer2=new Float64Array(n);const o=-2*Math.PI/e,i=Math.cos(o),l=Math.sin(o);for(let t=0;t<s>>1;++t){const s=(t+1-e)**2/2,n=Math.sqrt(i**2+l**2)**s,o=s*Math.atan2(l,i),c=2*t;a[c]=n*Math.cos(o),a[c+1]=n*Math.sin(o),r[c]=a[c],r[c+1]=-a[c+1]}this._slicedChirpBuffer=a.subarray(t,s),this._f=new ie(n>>1),this._f.transform(this._chirpBuffer,r)}_transform(e,t,s){const n=this._buffer1,a=this._buffer2,r=this._outBuffer1,o=this._outBuffer2,i=this._chirpBuffer,l=this._slicedChirpBuffer,c=this._a;if(s)for(let e=0;e<l.length;e+=2){const s=e+1,a=t[e>>1];n[e]=a*l[e],n[s]=a*l[s]}else for(let e=0;e<l.length;e+=2){const s=e+1;n[e]=t[e]*l[e]-t[s]*l[s],n[s]=t[e]*l[s]+t[s]*l[e]}this._f.transform(r,n);for(let e=0;e<i.length;e+=2){const t=e+1;a[e]=r[e]*i[e]-r[t]*i[t],a[t]=r[e]*i[t]+r[t]*i[e]}this._f.inverseTransform(o,a);for(let t=0;t<o.length;t+=2){const s=o[t+c],n=o[t+c+1],a=l[t],r=l[t+1];e[t]=s*a-n*r,e[t+1]=s*r+n*a}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class ce{constructor(e){this.fft_length=e,this.isPowerOfTwo=oe(e),this.isPowerOfTwo?(this.fft=new ie(e),this.outputBufferSize=2*e):(this.fft=new le(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function de(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const s=new e.constructor(e.length),n=new e.constructor(t),a=Math.floor(t/2);for(let t=0;t<e.length;++t){let r=0;for(let s=-a;s<=a;++s){let a=t+s;a<0?a=Math.abs(a):a>=e.length&&(a=2*(e.length-1)-a),n[r++]=e[a]}n.sort(),s[t]=n[a]}return s}function ue(e,t){const s=Math.pow(10,t);return Math.round(e*s)/s}function _e(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function he(e){const t=e.length,s=e[0].length,n=[t+1,s+1],a=Array.from({length:n[0]},(()=>Array(n[1]).fill(1/0)));a[0][0]=0;const r=Array.from({length:n[0]},(()=>Array(n[1]).fill(-1)));for(let t=1;t<n[1];++t)for(let s=1;s<n[0];++s){const n=a[s-1][t-1],o=a[s-1][t],i=a[s][t-1];let l,c;n<o&&n<i?(l=n,c=0):o<n&&o<i?(l=o,c=1):(l=i,c=2),a[s][t]=e[s-1][t-1]+l,r[s][t]=c}for(let e=0;e<n[1];++e)r[0][e]=2;for(let e=0;e<n[0];++e)r[e][0]=1;let o=t,i=s,l=[],c=[];for(;o>0||i>0;)switch(l.push(o-1),c.push(i-1),r[o][i]){case 0:--o,--i;break;case 1:--o;break;case 2:--i;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${o}, ${i}]. Please file a bug report.`)}return l.reverse(),c.reverse(),[l,c]}const pe=e;new Map;let me="warning";const fe={wasm:{},webgl:{},webgpu:{},versions:{common:"1.20.1"},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);me=e}},get logLevel(){return me}};Object.defineProperty(fe,"logLevel",{enumerable:!0});const ge=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:s,width:n}=t,a=t.norm??{mean:255,bias:0};let r,o;r="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],o="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const i=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",c=s*n,d="RGBA"===l?new Float32Array(4*c):new Float32Array(3*c);let u=4,_=0,h=1,p=2,m=3,f=0,g=c,w=2*c,y=-1;"RGB"===i&&(u=3,_=0,h=1,p=2,m=-1),"RGBA"===l?y=3*c:"RBG"===l?(f=0,w=c,g=2*c):"BGR"===l&&(w=0,g=c,f=2*c);for(let t=0;t<c;t++,_+=u,p+=u,h+=u,m+=u)d[f++]=(e[_]+o[0])/r[0],d[g++]=(e[h]+o[1])/r[1],d[w++]=(e[p]+o[2])/r[2],-1!==y&&-1!==m&&(d[y++]=(e[m]+o[3])/r[3]);return new be("float32",d,"RGBA"===l?[1,4,s,n]:[1,3,s,n])},we=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ye=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let xe=!1;class be{constructor(e,t,s){let n,a;if((()=>{if(!xe){xe=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,s="undefined"!=typeof Float16Array&&Float16Array.from;e&&(we.set("int64",BigInt64Array),ye.set(BigInt64Array,"int64")),t&&(we.set("uint64",BigUint64Array),ye.set(BigUint64Array,"uint64")),s?(we.set("float16",Float16Array),ye.set(Float16Array,"float16")):we.set("float16",Uint16Array)}})(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,n=e.type,a=e.dims,e.location){case"cpu-pinned":{const t=we.get(n);if(!t)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==n)throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==n&&"float16"!==n&&"int32"!==n&&"int64"!==n&&"uint32"!==n&&"uint8"!==n&&"bool"!==n&&"uint4"!==n&&"int4"!==n)throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==n&&"float16"!==n&&"int32"!==n&&"int64"!==n&&"uint32"!==n&&"uint64"!==n&&"int8"!==n&&"uint8"!==n&&"bool"!==n)throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let r,o;if("string"==typeof e)if(n=e,o=s,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");r=t}else{const s=we.get(e);if(void 0===s)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&s===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${s.name} as data.`);r="uint64"===e||"int64"===e?s.from(t,BigInt):s.from(t)}else if(t instanceof s)r=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${n} tensor's data must be type of ${s}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");r=Uint8Array.from(t)}}else if(o=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)n="string",r=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);n="bool",r=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)n="uint8",r=Uint8Array.from(e);else{const t=ye.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=t,r=e}if(void 0===o)o=[r.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");a=o,this.cpuData=r,this.dataLocation="cpu"}const r=(e=>{let t=1;for(let s=0;s<e.length;s++){const n=e[s];if("number"!=typeof n||!Number.isSafeInteger(n))throw new TypeError(`dims[${s}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${s}] must be a non-negative integer, got: ${n}`);t*=n}return t})(a);if(this.cpuData&&r!==this.cpuData.length&&("uint4"!==n&&"int4"!==n||Math.ceil(r/2)!==this.cpuData.length))throw new Error(`Tensor's size(${r}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=a,this.size=r}static async fromImage(e,t){return(async(e,t)=>{const s="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,n="undefined"!=typeof ImageData&&e instanceof ImageData,a="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,r="string"==typeof e;let o,i=t??{};const l=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(s){const s=l();s.width=e.width,s.height=e.height;const n=c(s);if(null==n)throw new Error("Can not access image data");{let s=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(s=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(i=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");i.tensorFormat="RGBA",i.height=s,i.width=a}else i.tensorFormat="RGBA",i.height=s,i.width=a;n.drawImage(e,0,0),o=n.getImageData(0,0,a,s).data}}else{if(!n){if(a){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const s=l();s.width=e.width,s.height=e.height;const n=c(s);if(null!=n){const t=e.height,s=e.width;return n.drawImage(e,0,0,s,t),o=n.getImageData(0,0,s,t).data,i.height=t,i.width=s,ge(o,i)}throw new Error("Can not access image data")}if(r)return new Promise(((t,s)=>{const n=l(),a=c(n);if(!e||!a)return s();const r=new Image;r.crossOrigin="Anonymous",r.src=e,r.onload=()=>{n.width=r.width,n.height=r.height,a.drawImage(r,0,0,n.width,n.height);const e=a.getImageData(0,0,n.width,n.height);i.height=n.height,i.width=n.width,t(ge(e.data,i))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let s,n;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(s=t.resizedHeight,n=t.resizedWidth):(s=e.height,n=e.width),void 0!==t&&(i=t),i.format="RGBA",i.height=s,i.width=n,void 0!==t){const t=l();t.width=n,t.height=s;const a=c(t);if(null==a)throw new Error("Can not access image data");a.putImageData(e,0,0),o=a.getImageData(0,0,n,s).data}else o=e.data}}if(void 0!==o)return ge(o,i);throw new Error("Input data provided is not supported - aborted tensor creation")})(e,t)}static fromTexture(e,t){return((e,t)=>{const{width:s,height:n,download:a,dispose:r}=t;return new be({location:"texture",type:"float32",texture:e,dims:[1,n,s,4],download:a,dispose:r})})(e,t)}static fromGpuBuffer(e,t){return((e,t)=>{const{dataType:s,dims:n,download:a,dispose:r}=t;return new be({location:"gpu-buffer",type:s??"float32",gpuBuffer:e,dims:n,download:a,dispose:r})})(e,t)}static fromMLTensor(e,t){return((e,t)=>{const{dataType:s,dims:n,download:a,dispose:r}=t;return new be({location:"ml-tensor",type:s??"float32",mlTensor:e,dims:n,download:a,dispose:r})})(e,t)}static fromPinnedBuffer(e,t,s){return((e,t,s)=>new be({location:"cpu-pinned",type:e,data:t,dims:s??[t.length]}))(e,t,s)}toDataURL(e){return((e,t)=>{const s="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=e.dims[3],s.height=e.dims[2];const n=s.getContext("2d");if(null!=n){let a,r;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],r=e.dims[3]):(a=e.dims[3],r=e.dims[2]);const o=void 0!==t?.format?t.format:"RGB",i=t?.norm;let l,c;void 0===i||void 0===i.mean?l=[255,255,255,255]:"number"==typeof i.mean?l=[i.mean,i.mean,i.mean,i.mean]:(l=[i.mean[0],i.mean[1],i.mean[2],0],void 0!==i.mean[3]&&(l[3]=i.mean[3])),void 0===i||void 0===i.bias?c=[0,0,0,0]:"number"==typeof i.bias?c=[i.bias,i.bias,i.bias,i.bias]:(c=[i.bias[0],i.bias[1],i.bias[2],0],void 0!==i.bias[3]&&(c[3]=i.bias[3]));const d=r*a;let u=0,_=d,h=2*d,p=-1;"RGBA"===o?(u=0,_=d,h=2*d,p=3*d):"RGB"===o?(u=0,_=d,h=2*d):"RBG"===o&&(u=0,h=d,_=2*d);for(let t=0;t<r;t++)for(let s=0;s<a;s++){const a=(e.data[u++]-c[0])*l[0],r=(e.data[_++]-c[1])*l[1],o=(e.data[h++]-c[2])*l[2],i=-1===p?255:(e.data[p++]-c[3])*l[3];n.fillStyle="rgba("+a+","+r+","+o+","+i+")",n.fillRect(s,t,1,1)}if("toDataURL"in s)return s.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")})(this,e)}toImageData(e){return((e,t)=>{const s="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let n;if(null==s)throw new Error("Can not access image data");{let a,r,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],r=e.dims[1],o=e.dims[3]):(a=e.dims[3],r=e.dims[2],o=e.dims[1]);const i=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let c,d;void 0===l||void 0===l.mean?c=[255,255,255,255]:"number"==typeof l.mean?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(c[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const u=r*a;if(void 0!==t&&(void 0!==t.format&&4===o&&"RGBA"!==t.format||3===o&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const _=4;let h=0,p=1,m=2,f=3,g=0,w=u,y=2*u,x=-1;"RGBA"===i?(g=0,w=u,y=2*u,x=3*u):"RGB"===i?(g=0,w=u,y=2*u):"RBG"===i&&(g=0,y=u,w=2*u),n=s.createImageData(a,r);for(let t=0;t<r*a;h+=_,p+=_,m+=_,f+=_,t++)n.data[h]=(e.data[g++]-d[0])*c[0],n.data[p]=(e.data[w++]-d[1])*c[1],n.data[m]=(e.data[y++]-d[2])*c[2],n.data[f]=-1===x?255:(e.data[x++]-d[3])*c[3]}return n})(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return((e,t)=>{switch(e.location){case"cpu":return new be(e.type,e.data,t);case"cpu-pinned":return new be({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new be({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new be({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new be({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}})(this,e)}}const ke=be;const ve=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),Me=[];let Ee,Ae;const Ce=Symbol.for("onnxruntime");if(Ce in globalThis)Ae=globalThis[Ce];else if(x.IS_NODE_ENV){switch(Ae=null.default??null,process.platform){case"win32":Me.push("dml");break;case"linux":"x64"===process.arch&&Me.push("cuda")}Me.push("cpu"),Ee=["cpu"]}else Ae=pe,x.IS_WEBNN_AVAILABLE&&Me.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),x.IS_WEBGPU_AVAILABLE&&Me.push("webgpu"),Me.push("wasm"),Ee=["wasm"];const Te=Ae.InferenceSession;let Fe=null;async function Pe(e,t,s){Fe&&await Fe;const n=Te.create(e,t);Fe??=n;const a=await n;return a.config=s,a}function Se(e){return e instanceof Ae.Tensor}const ze=Ae?.env;function Ie(){return ze?.wasm?.proxy}ze?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||ze.wasm.wasmPaths||(ze.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${E.version}/dist/`),ze.wasm.proxy=!1),ze?.webgpu&&(ze.webgpu.powerPreference="high-performance"),E.backends.onnx=ze;const Le=x.IS_BROWSER_ENV||x.IS_WEBWORKER_ENV,Be=async(e,t,s)=>{const n=await Pe(new Uint8Array(e),t);let a=Promise.resolve();return async e=>{const t=Ie(),r=Object.fromEntries(Object.entries(e).map((([e,s])=>[e,(t?s.clone():s).ort_tensor]))),o=await(a=Le?a.then((()=>n.run(r))):n.run(r));return Array.isArray(s)?s.map((e=>new $e(o[e]))):new $e(o[s])}};class Oe{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=Be([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=Be([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=Be([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=Be([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=Be([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=Be([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=Be([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=Be([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}const Ne=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class $e{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return Se(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new ke(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let s=Number(t);if(Number.isInteger(s))return e._getitem(s)}return e[t]},set:(e,t,s)=>e[t]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const s=t.reduce(((e,t)=>e*t));for(let n=0;n<e;++n)yield this._subarray(n,s,t)}else yield*this.data}_getitem(e){const[t,...s]=this.dims;if(e=Qe(e,t),s.length>0){const t=s.reduce(((e,t)=>e*t));return this._subarray(e,t,s)}return new $e(this.type,[this.data[e]],s)}indexOf(e){const t=this.data;for(let s=0;s<t.length;++s)if(t[s]==e)return s;return-1}_subarray(e,t,s){const n=e*t,a=(e+1)*t,r="subarray"in this.data?this.data.subarray(n,a):this.data.slice(n,a);return new $e(this.type,r,s)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const s=e.length,n=t.reduce(((e,t)=>e*t));if(s!==n)throw Error(`cannot reshape array of size ${s} into shape (${t})`);let a=e;for(let e=t.length-1;e>=0;e--)a=a.reduce(((s,n)=>{let a=s[s.length-1];return a.length<t[e]?a.push(n):s.push([n]),s}),[[]]);return a[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]=e(t[s],s,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]-=e;return this}clone(){return new $e(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],s=[];for(let n=0;n<this.dims.length;++n){let a=e[n];if(null==a)s.push([0,this.dims[n]]),t.push(this.dims[n]);else if("number"==typeof a)a=Qe(a,this.dims[n],n),s.push([a,a+1]);else{if(!Array.isArray(a)||2!==a.length)throw new Error(`Invalid slice: ${a}`);{let[e,r]=a;if(e=null===e?0:Qe(e,this.dims[n],n,!1),r=null===r?this.dims[n]:Qe(r,this.dims[n],n,!1),e>r)throw new Error(`Invalid slice: ${a}`);const o=[Math.max(e,0),Math.min(r,this.dims[n])];s.push(o),t.push(o[1]-o[0])}}}const n=s.map((([e,t])=>t-e)),a=n.reduce(((e,t)=>e*t)),r=this.data,o=new r.constructor(a),i=this.stride();for(let e=0;e<a;++e){let t=0;for(let a=n.length-1,r=e;a>=0;--a){const e=n[a];t+=(r%e+s[a][0])*i[a],r=Math.floor(r/e)}o[e]=r[t]}return new $e(this.type,o,t)}permute(...e){return Ve(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,s=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const n=this.data,a=(t,s)=>t+s**e;if(null===t){const t=n.reduce(a,0)**(1/e);return new $e(this.type,[t],[])}const[r,o,i]=et(a,this,t,s);if(1!==e)for(let t=0;t<o.length;++t)o[t]=o[t]**(1/e);return new $e(r,o,i)}normalize_(e=2,t=1){t=Qe(t,this.dims.length);const s=this.norm(e,t,!0),n=this.data,a=s.data;for(let e=0;e<n.length;++e){let s=0;for(let n=this.dims.length-1,a=e,r=1;n>=0;--n){const e=this.dims[n];if(n!==t){s+=a%e*r,r*=this.dims[n]}a=Math.floor(a/e)}n[e]/=a[s]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let s=e.length-1,n=1;s>=0;--s)t[s]=n,n*=e[s];return t}(this.dims)}squeeze(e=null){return new $e(this.type,this.data,Je(this.dims,e))}squeeze_(e=null){return this.dims=Je(this.dims,e),this}unsqueeze(e=null){return new $e(this.type,this.data,Ke(this.dims,e))}unsqueeze_(e=null){return this.dims=Ke(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let s=this.dims.slice(0,e),n=this.dims.slice(e,t+1),a=this.dims.slice(t+1);return this.dims=[...s,n.reduce(((e,t)=>e*t),1),...a],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let s=0;s<e.length;++s)if(-1===e[s]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=s}const s=this.data;if(-1!==t){const n=e.reduce(((e,s,n)=>n!==t?e*s:e),1);e[t]=s.length/n}return new $e(this.type,s,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let n=0;n<s.length;++n)t[n]=s[n]>e?1:0;return new $e("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let n=0;n<s.length;++n)t[n]=s[n]<e?1:0;return new $e("bool",t,this.dims)}clamp_(e,t){const s=this.data;for(let n=0;n<s.length;++n)s[n]=Math.min(Math.max(s[n],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return st(this,e,t)}min(e=null,t=!1){if(null===e){const e=ae(this.data)[0];return new $e(this.type,[e],[])}const[s,n,a]=et(((e,t)=>Math.min(e,t)),this,e,t,1/0);return new $e(s,n,a)}max(e=null,t=!1){if(null===e){const e=re(this.data)[0];return new $e(this.type,[e],[])}const[s,n,a]=et(((e,t)=>Math.max(e,t)),this,e,t,-1/0);return new $e(s,n,a)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=ae(this.data)[1];return new $e("int64",[BigInt(s)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=re(this.data)[1];return new $e("int64",[BigInt(s)],[])}to(e){if(this.type===e)return this;if(!Ne.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const s=["int64","uint64"].includes(this.type),n=["int64","uint64"].includes(e);return s&&!n?t=Number:!s&&n&&(t=BigInt),new $e(e,Ne[e].from(this.data,t),this.dims)}}function Ve(e,t){const[s,n]=Z(e.data,e.dims,t);return new $e(e.type,s,n)}function De(e,[t,s],n="bilinear",a=!1){const r=e.dims.at(-3)??1,o=e.dims.at(-2),i=e.dims.at(-1);let l=Q(e.data,[r,o,i],[t,s],n,a);return new $e(e.type,l,[r,t,s])}async function je(e,{size:t=null,mode:s="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let n,a;if(2===t.length)n=[...e.dims.slice(0,2),...t];else if(3===t.length)n=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");n=t}if("nearest"===s)a=await Oe.nearest_interpolate_4d;else if("bilinear"===s)a=await Oe.bilinear_interpolate_4d;else{if("bicubic"!==s)throw new Error(`Unsupported mode: ${s}`);a=await Oe.bicubic_interpolate_4d}const r=new $e("int64",new BigInt64Array(n.map(BigInt)),[n.length]);return await a({x:e,s:r})}async function Ue(e,t){const s=await Oe.matmul;return await s({a:e,b:t})}async function Ge(e,t){const s=await Oe.rfft;return await s({x:e,a:t})}async function Re(e,t){const s=await Oe.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await s({x:e,k:new $e("int64",[BigInt(t)],[1])})}const qe=e=>new $e("int64",e,[e.length]);async function We(e,t,s,n,a){const r=await Oe.slice;return await r({x:e,s:qe(t),e:qe(s),a:qe(n),t:qe(a??new Array(n.length).fill(1))})}function Xe(e,t){const s=e.data,n=t.data,a=[e.dims[0],e.dims[2]],r=new s.constructor(a[0]*a[1]),[o,i,l]=e.dims;let c=0;for(let e=0;e<o;++e){const t=e*l*i;for(let a=0;a<l;++a){let o=0,d=0;const u=e*i,_=t+a;for(let e=0;e<i;++e){const t=Number(n[u+e]);d+=t,o+=s[_+e*l]*t}const h=o/d;r[c++]=h}}return new $e(e.type,r,a)}function He(e,t,{eps:s=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[n,a]=e.dims;if(1!==t.length&&t[0]!==a)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[r,o]=tt(e,1,0,!0),i=r.data,l=o.data,c=e.data,d=new c.constructor(c.length);for(let e=0;e<n;++e){const t=e*a;for(let n=0;n<a;++n){const a=t+n;d[a]=(c[a]-l[e])/(i[e]+s)}}return new $e(e.type,d,e.dims)}function Je(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,s)=>1!==e||!t.includes(s)))),e}function Ke(e,t){return t=Qe(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function Qe(e,t,s=null,n=!0){if(n&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===s?"":" "+s} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function Ze(e,t=0){t=Qe(t,e[0].dims.length);const s=e[0].dims.slice();s[t]=e.reduce(((e,s)=>e+s.dims[t]),0);const n=s.reduce(((e,t)=>e*t),1),a=new e[0].data.constructor(n),r=e[0].type;if(0===t){let t=0;for(const s of e){const e=s.data;a.set(e,t),t+=e.length}}else{let n=0;for(let r=0;r<e.length;++r){const{data:o,dims:i}=e[r];for(let e=0;e<o.length;++e){let r=0;for(let a=i.length-1,o=e,l=1;a>=0;--a){const e=i[a];let c=o%e;a===t&&(c+=n),r+=c*l,l*=s[a],o=Math.floor(o/e)}a[r]=o[e]}n+=i[t]}}return new $e(r,a,s)}function Ye(e,t=0){return Ze(e.map((e=>e.unsqueeze(t))),t)}function et(e,t,s=null,n=!1,a=null){const r=t.data,o=t.dims;s=Qe(s,o.length);const i=o.slice();i[s]=1;const l=new r.constructor(r.length/o[s]);null!==a&&l.fill(a);for(let t=0;t<r.length;++t){let n=0;for(let e=o.length-1,a=t,r=1;e>=0;--e){const t=o[e];if(e!==s){n+=a%t*r,r*=i[e]}a=Math.floor(a/t)}l[n]=e(l[n],r[t],t,n)}return n||i.splice(s,1),[t.type,l,i]}function tt(e,t=null,s=1,n=!1){const a=e.data,r=e.dims;if(null===t){const t=a.reduce(((e,t)=>e+t),0)/a.length,n=Math.sqrt(a.reduce(((e,s)=>e+(s-t)**2),0)/(a.length-s)),r=new $e(e.type,[t],[]);return[new $e(e.type,[n],[]),r]}const o=st(e,t=Qe(t,r.length),n),i=o.data,[l,c,d]=et(((e,t,s,n)=>e+(t-i[n])**2),e,t,n);for(let e=0;e<c.length;++e)c[e]=Math.sqrt(c[e]/(r[t]-s));return[new $e(l,c,d),o]}function st(e,t=null,s=!1){const n=e.dims,a=e.data;if(null===t){const t=a.reduce(((e,t)=>e+t),0);return new $e(e.type,[t/a.length],[])}t=Qe(t,n.length);const[r,o,i]=et(((e,t)=>e+t),e,t,s);if(1!==n[t])for(let e=0;e<o.length;++e)o[e]/=n[t];return new $e(r,o,i)}function nt(e,t,s,n){const a=e.reduce(((e,t)=>e*t),1);return new $e(s,new n(a).fill(t),e)}function at(e,t){let s,n;if("number"==typeof t)s="float32",n=Float32Array;else if("bigint"==typeof t)s="int64",n=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);s="bool",n=Uint8Array}return nt(e,t,s,n)}function rt(e,t){return at(e.dims,t)}function ot(e){return nt(e,1n,"int64",BigInt64Array)}function it(e){return ot(e.dims)}function lt(e){return nt(e,0n,"int64",BigInt64Array)}function ct(e){return lt(e.dims)}function dt(e){const t=e.reduce(((e,t)=>e*t),1);return new $e("float32",Float32Array.from({length:t},(()=>Math.random())),e)}function ut(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const s="binary"===t,n=s?"int8":"uint8",a=s?Int8Array:Uint8Array,r=e.data,o=new a(r.length/8);for(let e=0;e<r.length;++e){const t=r[e]>0?1:0,n=Math.floor(e/8),a=e%8;o[n]|=t<<7-a,s&&0===a&&(o[n]-=128)}return new $e(n,o,[e.dims[0],e.dims[1]/8])}class _t{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const s=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class ht{constructor(){this.root=pt.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const s of e){let e=t.children.get(s);void 0===e&&(e=pt.default(),t.children.set(s,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let s="";for(const n of e){if(s+=n,t=t.children.get(n),void 0===t)return;t.isLeaf&&(yield s)}}}class pt{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new pt(!1,new Map)}}class mt{constructor(e,t,s){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const n=new ft(this.bosTokenId,0,0,0,0),a=new ft(this.eosTokenId,1,this.len,0,0);this.nodes.push(n.clone()),this.nodes.push(a.clone()),this.beginNodes[this.len].push(a),this.endNodes[0].push(n)}insert(e,t,s,n){const a=this.nodes.length,r=new ft(n,a,e,t,s);this.beginNodes[e].push(r),this.endNodes[e+t].push(r),this.nodes.push(r)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let s=0,n=null;for(let a of this.endNodes[t]){const t=a.backtraceScore+e.score;(null===n||t>s)&&(n=a.clone(),s=t)}if(null===n)return[];e.prev=n,e.backtraceScore=s}++t}const s=[],n=this.beginNodes[e][0].prev;if(null===n)return[];let a=n.clone();for(;null!==a.prev;){s.push(a.clone());const e=a.clone();a=e.prev.clone()}return s.reverse(),s}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class ft{constructor(e,t,s,n,a){this.tokenId=e,this.nodeId=t,this.pos=s,this.length=n,this.score=a,this.prev=null,this.backtraceScore=0}clone(){const e=new ft(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var gt=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),wt=Object.freeze({set:gt.Set,for:gt.For,in:gt.In,is:gt.Is,if:gt.If,else:gt.Else,endif:gt.EndIf,elif:gt.ElseIf,endfor:gt.EndFor,and:gt.And,or:gt.Or,not:gt.Not,"not in":gt.NotIn,macro:gt.Macro,endmacro:gt.EndMacro,true:gt.BooleanLiteral,false:gt.BooleanLiteral,none:gt.NullLiteral,True:gt.BooleanLiteral,False:gt.BooleanLiteral,None:gt.NullLiteral}),yt=class{constructor(e,t){this.value=e,this.type=t}};function xt(e){return/\w/.test(e)}function bt(e){return/[0-9]/.test(e)}var kt=[["{%",gt.OpenStatement],["%}",gt.CloseStatement],["{{",gt.OpenExpression],["}}",gt.CloseExpression],["(",gt.OpenParen],[")",gt.CloseParen],["{",gt.OpenCurlyBracket],["}",gt.CloseCurlyBracket],["[",gt.OpenSquareBracket],["]",gt.CloseSquareBracket],[",",gt.Comma],[".",gt.Dot],[":",gt.Colon],["|",gt.Pipe],["<=",gt.ComparisonBinaryOperator],[">=",gt.ComparisonBinaryOperator],["==",gt.ComparisonBinaryOperator],["!=",gt.ComparisonBinaryOperator],["<",gt.ComparisonBinaryOperator],[">",gt.ComparisonBinaryOperator],["+",gt.AdditiveBinaryOperator],["-",gt.AdditiveBinaryOperator],["*",gt.MultiplicativeBinaryOperator],["/",gt.MultiplicativeBinaryOperator],["%",gt.MultiplicativeBinaryOperator],["=",gt.Equals]],vt=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);var Mt=class{type="Statement"},Et=class extends Mt{constructor(e){super(),this.body=e}type="Program"},At=class extends Mt{constructor(e,t,s){super(),this.test=e,this.body=t,this.alternate=s}type="If"},Ct=class extends Mt{constructor(e,t,s,n){super(),this.loopvar=e,this.iterable=t,this.body=s,this.defaultBlock=n}type="For"},Tt=class extends Mt{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},Ft=class extends Mt{constructor(e,t,s){super(),this.name=e,this.args=t,this.body=s}type="Macro"},Pt=class extends Mt{type="Expression"},St=class extends Pt{constructor(e,t,s){super(),this.object=e,this.property=t,this.computed=s}type="MemberExpression"},zt=class extends Pt{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},It=class extends Pt{constructor(e){super(),this.value=e}type="Identifier"},Lt=class extends Pt{constructor(e){super(),this.value=e}type="Literal"},Bt=class extends Lt{type="NumericLiteral"},Ot=class extends Lt{type="StringLiteral"},Nt=class extends Lt{type="BooleanLiteral"},$t=class extends Lt{type="NullLiteral"},Vt=class extends Lt{type="ArrayLiteral"},Dt=class extends Lt{type="TupleLiteral"},jt=class extends Lt{type="ObjectLiteral"},Ut=class extends Pt{constructor(e,t,s){super(),this.operator=e,this.left=t,this.right=s}type="BinaryExpression"},Gt=class extends Pt{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},Rt=class extends Pt{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},qt=class extends Pt{constructor(e,t,s){super(),this.operand=e,this.negate=t,this.test=s}type="TestExpression"},Wt=class extends Pt{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},Xt=class extends Pt{constructor(e=void 0,t=void 0,s=void 0){super(),this.start=e,this.stop=t,this.step=s}type="SliceExpression"},Ht=class extends Pt{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function Jt(e){const t=new Et([]);let s=0;function n(t,n){const a=e[s++];if(!a||a.type!==t)throw new Error(`Parser Error: ${n}. ${a.type} !== ${t}.`);return a}function a(){switch(e[s].type){case gt.Text:return new Ot(n(gt.Text,"Expected text token").value);case gt.OpenStatement:return function(){let t;switch(n(gt.OpenStatement,"Expected opening statement token"),e[s].type){case gt.Set:++s,t=i(),n(gt.CloseStatement,"Expected closing statement token");break;case gt.If:++s,t=l(),n(gt.OpenStatement,"Expected {% token"),n(gt.EndIf,"Expected endif token"),n(gt.CloseStatement,"Expected %} token");break;case gt.Macro:++s,t=function(){const e=b();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=f();n(gt.CloseStatement,"Expected closing statement token");const s=[];for(;r(gt.OpenStatement,gt.EndMacro);)s.push(a());return new Ft(e,t,s)}(),n(gt.OpenStatement,"Expected {% token"),n(gt.EndMacro,"Expected endmacro token"),n(gt.CloseStatement,"Expected %} token");break;case gt.For:++s,t=function(){const e=c(!0);if(!(e instanceof It||e instanceof Dt))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);n(gt.In,"Expected `in` keyword following loop variable");const t=d();n(gt.CloseStatement,"Expected closing statement token");const i=[];for(;r(gt.OpenStatement,gt.EndFor)&&r(gt.OpenStatement,gt.Else);)i.push(a());const l=[];if(o(gt.OpenStatement,gt.Else))for(++s,++s,n(gt.CloseStatement,"Expected closing statement token");r(gt.OpenStatement,gt.EndFor);)l.push(a());return new Ct(e,t,i,l)}(),n(gt.OpenStatement,"Expected {% token"),n(gt.EndFor,"Expected endfor token"),n(gt.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[s].type}`)}return t}();case gt.OpenExpression:return function(){n(gt.OpenExpression,"Expected opening expression token");const e=d();return n(gt.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[s].type}`)}}function r(...t){return s+t.length<=e.length&&t.some(((t,n)=>t!==e[s+n].type))}function o(...t){return s+t.length<=e.length&&t.every(((t,n)=>t===e[s+n].type))}function i(){const e=d();if(o(gt.Equals)){++s;const t=i();return new Tt(e,t)}return e}function l(){const t=d();n(gt.CloseStatement,"Expected closing statement token");const r=[],i=[];for(;e[s]?.type!==gt.OpenStatement||e[s+1]?.type!==gt.ElseIf&&e[s+1]?.type!==gt.Else&&e[s+1]?.type!==gt.EndIf;)r.push(a());if(e[s]?.type===gt.OpenStatement&&e[s+1]?.type!==gt.EndIf)if(++s,o(gt.ElseIf))n(gt.ElseIf,"Expected elseif token"),i.push(l());else for(n(gt.Else,"Expected else token"),n(gt.CloseStatement,"Expected closing statement token");e[s]?.type!==gt.OpenStatement||e[s+1]?.type!==gt.EndIf;)i.push(a());return new At(t,r,i)}function c(e=!1){const t=e?b:d,n=[t()],a=o(gt.Comma);for(;a&&(++s,n.push(t()),o(gt.Comma)););return a?new Dt(n):n[0]}function d(){return function(){const e=u();if(o(gt.If)){++s;const t=u();if(o(gt.Else)){++s;const n=u();return new At(t,[e],[n])}return new Rt(e,t)}return e}()}function u(){let t=_();for(;o(gt.Or);){const n=e[s];++s;const a=_();t=new Ut(n,t,a)}return t}function _(){let t=h();for(;o(gt.And);){const n=e[s];++s;const a=h();t=new Ut(n,t,a)}return t}function h(){let t;for(;o(gt.Not);){const n=e[s];++s;const a=h();t=new Wt(n,a)}return t??function(){let t=p();for(;o(gt.ComparisonBinaryOperator)||o(gt.In)||o(gt.NotIn);){const n=e[s];++s;const a=p();t=new Ut(n,t,a)}return t}()}function p(){let t=y();for(;o(gt.AdditiveBinaryOperator);){const n=e[s];++s;const a=y();t=new Ut(n,t,a)}return t}function m(e){let t=new zt(e,f());return t=w(t),o(gt.OpenParen)&&(t=m(t)),t}function f(){n(gt.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!o(gt.CloseParen);){let t=d();if(o(gt.Equals)){if(++s,!(t instanceof It))throw new SyntaxError("Expected identifier for keyword argument");const e=d();t=new Ht(t,e)}e.push(t),o(gt.Comma)&&++s}return e}();return n(gt.CloseParen,"Expected closing parenthesis for arguments list"),e}function g(){const e=[];let t=!1;for(;!o(gt.CloseSquareBracket);)o(gt.Colon)?(e.push(void 0),++s,t=!0):(e.push(d()),o(gt.Colon)&&(++s,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new Xt(...e)}return e[0]}function w(t){for(;o(gt.Dot)||o(gt.OpenSquareBracket);){const a=e[s];let r;++s;const o=a.type!==gt.Dot;if(o)r=g(),n(gt.CloseSquareBracket,"Expected closing square bracket");else if(r=b(),"Identifier"!==r.type)throw new SyntaxError("Expected identifier following dot operator");t=new St(t,r,o)}return t}function y(){let t=x();for(;o(gt.MultiplicativeBinaryOperator);){const n=e[s];++s;const a=x();t=new Ut(n,t,a)}return t}function x(){let e=function(){let e=function(){const e=w(b());return o(gt.OpenParen)?m(e):e}();for(;o(gt.Pipe);){++s;let t=b();if(!(t instanceof It))throw new SyntaxError("Expected identifier for the filter");o(gt.OpenParen)&&(t=m(t)),e=new Gt(e,t)}return e}();for(;o(gt.Is);){++s;const t=o(gt.Not);t&&++s;let n=b();if(n instanceof Nt?n=new It(n.value.toString()):n instanceof $t&&(n=new It("none")),!(n instanceof It))throw new SyntaxError("Expected identifier for the test");e=new qt(e,t,n)}return e}function b(){const t=e[s];switch(t.type){case gt.NumericLiteral:return++s,new Bt(Number(t.value));case gt.StringLiteral:return++s,new Ot(t.value);case gt.BooleanLiteral:return++s,new Nt("true"===t.value.toLowerCase());case gt.NullLiteral:return++s,new $t(null);case gt.Identifier:return++s,new It(t.value);case gt.OpenParen:{++s;const t=c();if(e[s].type!==gt.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[s].type} instead`);return++s,t}case gt.OpenSquareBracket:{++s;const e=[];for(;!o(gt.CloseSquareBracket);)e.push(d()),o(gt.Comma)&&++s;return++s,new Vt(e)}case gt.OpenCurlyBracket:{++s;const e=new Map;for(;!o(gt.CloseCurlyBracket);){const t=d();n(gt.Colon,"Expected colon between key and value in object literal");const a=d();e.set(t,a),o(gt.Comma)&&++s}return++s,new jt(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;s<e.length;)t.body.push(a());return t}function Kt(e,t,s=1){void 0===t&&(t=e,e=0);const n=[];for(let a=e;a<t;a+=s)n.push(a);return n}function Qt(e,t,s,n=1){const a=Math.sign(n);a>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),s=(s??=e.length)<0?Math.max(e.length+s,0):Math.min(s,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),s=(s??=-1)<-1?Math.max(e.length+s,-1):Math.min(s,e.length-1));const r=[];for(let o=t;a*o<a*s;o+=n)r.push(e[o]);return r}function Zt(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var Yt=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new ss(!!this.value)}},es=class extends Yt{type="NumericValue"},ts=class extends Yt{type="StringValue";builtins=new Map([["upper",new is((()=>new ts(this.value.toUpperCase())))],["lower",new is((()=>new ts(this.value.toLowerCase())))],["strip",new is((()=>new ts(this.value.trim())))],["title",new is((()=>new ts(Zt(this.value))))],["length",new es(this.value.length)],["rstrip",new is((()=>new ts(this.value.trimEnd())))],["lstrip",new is((()=>new ts(this.value.trimStart())))],["split",new is((e=>{const t=e[0]??new ls;if(!(t instanceof ts||t instanceof ls))throw new Error("sep argument must be a string or null");const s=e[1]??new es(-1);if(!(s instanceof es))throw new Error("maxsplit argument must be a number");let n=[];if(t instanceof ls){const e=this.value.trimStart();for(const{0:t,index:a}of e.matchAll(/\S+/g)){if(-1!==s.value&&n.length>=s.value&&void 0!==a){n.push(t+e.slice(a+t.length));break}n.push(t)}}else{if(""===t.value)throw new Error("empty separator");n=this.value.split(t.value),-1!==s.value&&n.length>s.value&&n.push(n.splice(s.value).join(t.value))}return new rs(n.map((e=>new ts(e))))}))]])},ss=class extends Yt{type="BooleanValue"},ns=class extends Yt{type="ObjectValue";__bool__(){return new ss(this.value.size>0)}builtins=new Map([["get",new is((([e,t])=>{if(!(e instanceof ts))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new ls}))],["items",new is((()=>new rs(Array.from(this.value.entries()).map((([e,t])=>new rs([new ts(e),t]))))))]])},as=class extends ns{type="KeywordArgumentsValue"},rs=class extends Yt{type="ArrayValue";builtins=new Map([["length",new es(this.value.length)]]);__bool__(){return new ss(this.value.length>0)}},os=class extends rs{type="TupleValue"},is=class extends Yt{type="FunctionValue"},ls=class extends Yt{type="NullValue"},cs=class extends Yt{type="UndefinedValue"},ds=class{constructor(e){this.parent=e}variables=new Map([["namespace",new is((e=>{if(0===e.length)return new ns(new Map);if(1!==e.length||!(e[0]instanceof ns))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof is],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,_s(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new cs}catch{return new cs}}},us=class{global;constructor(e){this.global=e??new ds}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const s=this.evaluate(e.left,t);switch(e.operator.value){case"and":return s.__bool__().value?this.evaluate(e.right,t):s;case"or":return s.__bool__().value?s:this.evaluate(e.right,t)}const n=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new ss(s.value==n.value);case"!=":return new ss(s.value!=n.value)}if(s instanceof cs||n instanceof cs)throw new Error("Cannot perform operation on undefined values");if(s instanceof ls||n instanceof ls)throw new Error("Cannot perform operation on null values");if(s instanceof es&&n instanceof es)switch(e.operator.value){case"+":return new es(s.value+n.value);case"-":return new es(s.value-n.value);case"*":return new es(s.value*n.value);case"/":return new es(s.value/n.value);case"%":return new es(s.value%n.value);case"<":return new ss(s.value<n.value);case">":return new ss(s.value>n.value);case">=":return new ss(s.value>=n.value);case"<=":return new ss(s.value<=n.value)}else if(s instanceof rs&&n instanceof rs){if("+"===e.operator.value)return new rs(s.value.concat(n.value))}else if(n instanceof rs){const t=void 0!==n.value.find((e=>e.value===s.value));switch(e.operator.value){case"in":return new ss(t);case"not in":return new ss(!t)}}if((s instanceof ts||n instanceof ts)&&"+"===e.operator.value)return new ts(s.value.toString()+n.value.toString());if(s instanceof ts&&n instanceof ts)switch(e.operator.value){case"in":return new ss(n.value.includes(s.value));case"not in":return new ss(!n.value.includes(s.value))}if(s instanceof ts&&n instanceof ns)switch(e.operator.value){case"in":return new ss(n.value.has(s.value));case"not in":return new ss(!n.value.has(s.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${s.type} and ${n.type}`)}evaluateArguments(e,t){const s=[],n=new Map;for(const a of e)if("KeywordArgumentExpression"===a.type){const e=a;n.set(e.key.value,this.evaluate(e.value,t))}else{if(n.size>0)throw new Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(a,t))}return[s,n]}evaluateFilterExpression(e,t){const s=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new ts(hs(s));if(s instanceof rs)switch(t.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new es(s.value.length);case"reverse":return new rs(s.value.reverse());case"sort":return new rs(s.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));case"join":return new ts(s.value.map((e=>e.value)).join(""));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(s instanceof ts)switch(t.value){case"length":return new es(s.value.length);case"upper":return new ts(s.value.toUpperCase());case"lower":return new ts(s.value.toLowerCase());case"title":return new ts(Zt(s.value));case"capitalize":return new ts(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new ts(s.value.trim());case"indent":return new ts(s.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"join":case"string":return s;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(s instanceof es){if("abs"===t.value)return new es(Math.abs(s.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(s instanceof ns)switch(t.value){case"items":return new rs(Array.from(s.value.entries()).map((([e,t])=>new rs([new ts(e),t]))));case"length":return new es(s.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${s.type}`)}if("CallExpression"===e.filter.type){const n=e.filter;if("Identifier"!==n.callee.type)throw new Error(`Unknown filter: ${n.callee.type}`);const a=n.callee.value;if("tojson"===a){const[,e]=this.evaluateArguments(n.args,t),a=e.get("indent")??new ls;if(!(a instanceof es||a instanceof ls))throw new Error("If set, indent must be a number");return new ts(hs(s,a.value))}if("join"===a){let e;if(s instanceof ts)e=Array.from(s.value);else{if(!(s instanceof rs))throw new Error(`Cannot apply filter "${a}" to type: ${s.type}`);e=s.value.map((e=>e.value))}const[r,o]=this.evaluateArguments(n.args,t),i=r.at(0)??o.get("separator")??new ts("");if(!(i instanceof ts))throw new Error("separator must be a string");return new ts(e.join(i.value))}if(s instanceof rs){switch(a){case"selectattr":case"rejectattr":{const e="selectattr"===a;if(s.value.some((e=>!(e instanceof ns))))throw new Error(`\`${a}\` can only be applied to array of objects`);if(n.args.some((e=>"StringLiteral"!==e.type)))throw new Error(`arguments of \`${a}\` must be strings`);const[r,o,i]=n.args.map((e=>this.evaluate(e,t)));let l;if(o){const e=t.tests.get(o.value);if(!e)throw new Error(`Unknown test: ${o.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const c=s.value.filter((t=>{const s=t.value.get(r.value),n=!!s&&l(s,i);return e?n:!n}));return new rs(c)}case"map":{const[,e]=this.evaluateArguments(n.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof ts))throw new Error("attribute must be a string");const n=e.get("default"),a=s.value.map((e=>{if(!(e instanceof ns))throw new Error("items in map must be an object");return e.value.get(t.value)??n??new cs}));return new rs(a)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${a}`)}if(s instanceof ts){if("indent"===a){const[e,a]=this.evaluateArguments(n.args,t),r=e.at(0)??a.get("width")??new es(4);if(!(r instanceof es))throw new Error("width must be a number");const o=e.at(1)??a.get("first")??new ss(!1),i=e.at(2)??a.get("blank")??new ss(!1),l=s.value.split("\n"),c=" ".repeat(r.value),d=l.map(((e,t)=>!o.value&&0===t||!i.value&&0===e.length?e:c+e));return new ts(d.join("\n"))}throw new Error(`Unknown StringValue filter: ${a}`)}throw new Error(`Cannot apply filter "${a}" to type: ${s.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const s=this.evaluate(e.operand,t),n=t.tests.get(e.test.value);if(!n)throw new Error(`Unknown test: ${e.test.value}`);const a=n(s);return new ss(e.negate?!a:a)}evaluateUnaryExpression(e,t){const s=this.evaluate(e.argument,t);if("not"===e.operator.value)return new ss(!s.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let s="";for(const n of e){const e=this.evaluate(n,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(s+=e.value)}return new ts(s)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[s,n]=this.evaluateArguments(e.args,t);n.size>0&&s.push(new as(n));const a=this.evaluate(e.callee,t);if("FunctionValue"!==a.type)throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(s,t)}evaluateSliceExpression(e,t,s){if(!(e instanceof rs||e instanceof ts))throw new Error("Slice object must be an array or string");const n=this.evaluate(t.start,s),a=this.evaluate(t.stop,s),r=this.evaluate(t.step,s);if(!(n instanceof es||n instanceof cs))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof es||a instanceof cs))throw new Error("Slice stop must be numeric or undefined");if(!(r instanceof es||r instanceof cs))throw new Error("Slice step must be numeric or undefined");return e instanceof rs?new rs(Qt(e.value,n.value,a.value,r.value)):new ts(Qt(Array.from(e.value),n.value,a.value,r.value).join(""))}evaluateMemberExpression(e,t){const s=this.evaluate(e.object,t);let n,a;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(s,e.property,t);n=this.evaluate(e.property,t)}else n=new ts(e.property.value);if(s instanceof ns){if(!(n instanceof ts))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=s.value.get(n.value)??s.builtins.get(n.value)}else if(s instanceof rs||s instanceof ts)if(n instanceof es)a=s.value.at(n.value),s instanceof ts&&(a=new ts(s.value.at(n.value)));else{if(!(n instanceof ts))throw new Error(`Cannot access property with non-string/non-number: got ${n.type}`);a=s.builtins.get(n.value)}else{if(!(n instanceof ts))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=s.builtins.get(n.value)}return a instanceof Yt?a:new cs}evaluateSet(e,t){const s=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const n=e.assignee.value;t.setVariable(n,s)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const n=e.assignee,a=this.evaluate(n.object,t);if(!(a instanceof ns))throw new Error("Cannot assign to member of non-object");if("Identifier"!==n.property.type)throw new Error("Cannot assign to member with non-identifier property");a.value.set(n.property.value,s)}}return new ls}evaluateIf(e,t){const s=this.evaluate(e.test,t);return this.evaluateBlock(s.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const s=new ds(t);let n,a;if("SelectExpression"===e.iterable.type){const t=e.iterable;a=this.evaluate(t.iterable,s),n=t.test}else a=this.evaluate(e.iterable,s);if(!(a instanceof rs))throw new Error(`Expected iterable type in for loop: got ${a.type}`);const r=[],o=[];for(let t=0;t<a.value.length;++t){const i=new ds(s),l=a.value[t];let c;if("Identifier"===e.loopvar.type)c=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const s=l;if(t.value.length!==s.value.length)throw new Error(`Too ${t.value.length>s.value.length?"few":"many"} items to unpack`);c=e=>{for(let n=0;n<t.value.length;++n){if("Identifier"!==t.value[n].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[n].type}`);e.setVariable(t.value[n].value,s.value[n])}}}}if(n){c(i);if(!this.evaluate(n,i).__bool__().value)continue}r.push(l),o.push(c)}let i="",l=!0;for(let t=0;t<r.length;++t){const n=new Map([["index",new es(t+1)],["index0",new es(t)],["revindex",new es(r.length-t)],["revindex0",new es(r.length-t-1)],["first",new ss(0===t)],["last",new ss(t===r.length-1)],["length",new es(r.length)],["previtem",t>0?r[t-1]:new cs],["nextitem",t<r.length-1?r[t+1]:new cs]]);s.setVariable("loop",new ns(n)),o[t](s);i+=this.evaluateBlock(e.body,s).value,l=!1}if(l){i+=this.evaluateBlock(e.defaultBlock,s).value}return new ts(i)}evaluateMacro(e,t){return t.setVariable(e.name.value,new is(((t,s)=>{const n=new ds(s);let a;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(a=t.pop());for(let s=0;s<e.args.length;++s){const r=e.args[s],o=t[s];if("Identifier"===r.type){const e=r;if(!o)throw new Error(`Missing positional argument: ${e.value}`);n.setVariable(e.value,o)}else{if("KeywordArgumentExpression"!==r.type)throw new Error(`Unknown argument type: ${r.type}`);{const e=r,t=o??a?.value.get(e.key.value)??this.evaluate(e.value,n);n.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,n)}))),new ls}evaluate(e,t){if(void 0===e)return new cs;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"NumericLiteral":return new es(Number(e.value));case"StringLiteral":return new ts(e.value);case"BooleanLiteral":return new ss(e.value);case"NullLiteral":return new ls(e.value);case"ArrayLiteral":return new rs(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new os(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const s=new Map;for(const[n,a]of e.value){const e=this.evaluate(n,t);if(!(e instanceof ts))throw new Error(`Object keys must be strings: got ${e.type}`);s.set(e.value,this.evaluate(a,t))}return new ns(s)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function _s(e){switch(typeof e){case"number":return new es(e);case"string":return new ts(e);case"boolean":return new ss(e);case"undefined":return new cs;case"object":return null===e?new ls:Array.isArray(e)?new rs(e.map(_s)):new ns(new Map(Object.entries(e).map((([e,t])=>[e,_s(t)]))));case"function":return new is(((t,s)=>_s(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function hs(e,t,s){const n=s??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const s=t?" ".repeat(t):"",a="\n"+s.repeat(n),r=a+s;if("ArrayValue"===e.type){const s=e.value.map((e=>hs(e,t,n+1)));return t?`[${r}${s.join(`,${r}`)}${a}]`:`[${s.join(", ")}]`}{const s=Array.from(e.value.entries()).map((([e,s])=>{const a=`"${e}": ${hs(s,t,n+1)}`;return t?`${r}${a}`:a}));return t?`{${s.join(",")}${a}}`:`{${s.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var ps=class{parsed;constructor(e){const t=function(e,t={}){const s=[],n=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let a=0;const r=e=>{let t="";for(;e(n[a]);)if("\\"!==n[a]){if(t+=n[a++],a>=n.length)throw new SyntaxError("Unexpected end of input")}else{if(++a,a>=n.length)throw new SyntaxError("Unexpected end of input");const e=n[a++],s=vt.get(e);if(void 0===s)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=s}return t};e:for(;a<n.length;){const e=s.at(-1)?.type;if(void 0===e||e===gt.CloseStatement||e===gt.CloseExpression){let e="";for(;a<n.length&&("{"!==n[a]||"%"!==n[a+1]&&"{"!==n[a+1]);)e+=n[a++];if(e.length>0){s.push(new yt(e,gt.Text));continue}}r((e=>/\s/.test(e)));const t=n[a];if("-"===t||"+"===t){const e=s.at(-1)?.type;if(e===gt.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case gt.Identifier:case gt.NumericLiteral:case gt.BooleanLiteral:case gt.NullLiteral:case gt.StringLiteral:case gt.CloseParen:case gt.CloseSquareBracket:break;default:{++a;const e=r(bt);s.push(new yt(`${t}${e}`,e.length>0?gt.NumericLiteral:gt.UnaryOperator));continue}}}for(const[e,t]of kt)if(n.slice(a,a+e.length)===e){s.push(new yt(e,t)),a+=e.length;continue e}if("'"!==t&&'"'!==t)if(bt(t)){const e=r(bt);s.push(new yt(e,gt.NumericLiteral))}else{if(!xt(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=r(xt),t=Object.hasOwn(wt,e)?wt[e]:gt.Identifier;t===gt.In&&s.at(-1)?.type===gt.Not?(s.pop(),s.push(new yt("not in",gt.NotIn))):s.push(new yt(e,t))}}else{++a;const e=r((e=>e!==t));s.push(new yt(e,gt.StringLiteral)),++a}}return s}(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Jt(t)}render(e){const t=new ds;if(t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",Kt),e)for(const[s,n]of Object.entries(e))t.set(s,n);return new us(t).run(this.parsed).value}};const ms=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],fs=new Map(ms),gs=new Map([...ms.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);async function ws(e,t){const s=await Promise.all([J(e,"tokenizer.json",!0,t),J(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(s[1].legacy=t.legacy),s}function ys(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,s]of Ts)t=t.replaceAll(e,s);return new RegExp(t,"gu")}if(void 0!==e.String){const s=F(e.String);return new RegExp(t?s:`(${s})`,"gu")}return console.warn("Unknown pattern type:",e),null}function xs(e){return new Map(Object.entries(e))}function bs(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function ks(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function vs(e){return e.replace(/\p{M}/gu,"")}function Ms(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const Es="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",As=new RegExp(`^[${Es}]+$`,"gu"),Cs=".,!?…。，、।۔،",Ts=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${Cs}])]+`,` ?[^\\s${Cs}]+`]]);class Fs{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class Ps extends C{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new Ss(e);case"Unigram":return new zs(e,...t);case"BPE":return new Os(e);default:if(e.vocab)return Array.isArray(e.vocab)?new zs(e,...t):"object"==typeof e.vocab&&e.continuing_subword_prefix&&e.unk_token?new Ss(e):new Ns(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,s){const n=[];let a=0;for(;a<e.length;)if(n.push(e[a]),(t.get(e[a])??s)===s)for(;++a<e.length&&(t.get(e[a])??s)===s;)t.get(n.at(-1))!==s&&(n[n.length-1]+=e[a]);else++a;return n}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class Ss extends Ps{constructor(e){super(e),this.tokens_to_ids=xs(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const s of e){const e=[...s];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let n=!1,a=0;const r=[];for(;a<e.length;){let t=e.length,s=null;for(;a<t;){let n=e.slice(a,t).join("");if(a>0&&(n=this.config.continuing_subword_prefix+n),this.tokens_to_ids.has(n)){s=n;break}--t}if(null===s){n=!0;break}r.push(s),a=t}n?t.push(this.unk_token):t.push(...r)}return t}}class zs extends Ps{constructor(e,t){super(e);const s=e.vocab.length;this.vocab=new Array(s),this.scores=new Array(s);for(let t=0;t<s;++t)[this.vocab[t],this.scores[t]]=e.vocab[t];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=ae(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new ht,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let s=0;for(;s<t.length;){let n=!1;const a=[],r=t.slice(s).join(""),o=this.trie.commonPrefixSearch(r);for(const t of o){a.push(t);const r=this.tokens_to_ids.get(t),o=this.scores[r],i=N(t);e.insert(s,i,o,r),n||1!==i||(n=!0)}n||e.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(e){const t=new mt(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const s of e){const e=this.tokenize(s);t.push(...e)}return t}}const Is=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let s=0;for(let n=0;n<256;++n)e.includes(n)||(e.push(n),t.push(256+s),s+=1);const n=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,n[t]])))})(),Ls=(Bs=Is,Object.fromEntries(Object.entries(Bs).map((([e,t])=>[t,e]))));var Bs;class Os extends Ps{constructor(e){super(e),this.tokens_to_ids=xs(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const s=Array.from(e);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let n=[];if(s.length>1){const e=new _t(((e,t)=>e.score<t.score));let t={token:s[0],bias:0,prev:null,next:null},a=t;for(let t=1;t<s.length;++t){const n={bias:t/s.length,token:s[t],prev:a,next:null};a.next=n,this._add_node(e,a),a=n}for(;!e.isEmpty();){const s=e.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){const e={...s.prev};s.prev.deleted=!0,s.prev=e,e.prev?e.prev.next=e:t=e}const n={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};n.prev?(n.prev.next=n,this._add_node(e,n.prev)):t=n,n.next&&(n.next.prev=n,this._add_node(e,n))}for(let e=t;null!==e;e=e.next)n.push(e.token)}else n=s;if(this.continuing_subword_suffix)for(let e=0;e<n.length-1;++e)n[e]+=this.continuing_subword_suffix;return this.cache.set(e,n),n}_add_node(e,t){const s=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==s&&(t.score=s+t.bias,e.push(t))}encode(e){const t=[];for(const s of e){if(this.ignore_merges&&this.tokens_to_ids.has(s)){t.push(s);continue}const e=this.bpe(s);for(const s of e)if(this.tokens_to_ids.has(s))t.push(s);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(s)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class Ns extends Ps{constructor(e,t){super(e),this.tokens_to_ids=xs(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class $s extends C{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new Ks(e);case"Precompiled":return new vn(e);case"Sequence":return new Js(e);case"Replace":return new Vs(e);case"NFC":return new js(e);case"NFD":return new Us(e);case"NFKC":return new Gs(e);case"NFKD":return new Rs(e);case"Strip":return new qs(e);case"StripAccents":return new Ws(e);case"Lowercase":return new Xs(e);case"Prepend":return new Hs(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Vs extends $s{normalize(e){const t=ys(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class Ds extends $s{form=void 0;normalize(e){return e=e.normalize(this.form)}}class js extends Ds{form="NFC"}class Us extends Ds{form="NFD"}class Gs extends Ds{form="NFKC"}class Rs extends Ds{form="NFKD"}class qs extends $s{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class Ws extends $s{normalize(e){return e=vs(e)}}class Xs extends $s{normalize(e){return e=e.toLowerCase()}}class Hs extends $s{normalize(e){return e=this.config.prepend+e}}class Js extends $s{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>$s.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class Ks extends $s{_tokenize_chinese_chars(e){const t=[];for(let s=0;s<e.length;++s){const n=e[s];Ms(n.charCodeAt(0))?(t.push(" "),t.push(n),t.push(" ")):t.push(n)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const s of e){const e=s.charCodeAt(0);0===e||65533===e||this._is_control(s)||(/^\s$/.test(s)?t.push(" "):t.push(s))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class Qs extends C{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new Zs(e);case"Sequence":return new Mn(e);case"Whitespace":return new En(e);case"WhitespaceSplit":return new An(e);case"Metaspace":return new bn(e);case"ByteLevel":return new Ys(e);case"Split":return new en(e);case"Punctuation":return new tn(e);case"Digits":return new sn(e);case"Replace":return new Cn(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class Zs extends Qs{constructor(e){super(),this.pattern=new RegExp(`[^\\s${Es}]+|[${Es}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class Ys extends Qs{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Is,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class en extends Qs{constructor(e){super(),this.config=e,this.pattern=ys(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter((e=>e)):function(e,t){const s=[];let n=0;for(const a of e.matchAll(t)){const t=a[0];n<a.index&&s.push(e.slice(n,a.index)),t.length>0&&s.push(t),n=a.index+t.length}return n<e.length&&s.push(e.slice(n)),s}(e,this.pattern)}}class tn extends Qs{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${Es}]+|[${Es}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class sn extends Qs{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class nn extends C{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new on(e);case"ByteLevel":return new ln(e);case"RobertaProcessing":return new rn(e);case"BertProcessing":return new an(e);case"Sequence":return new cn(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class an extends nn{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:s=!0}={}){s&&(e=z([this.cls],e,[this.sep]));let n=new Array(e.length).fill(0);if(null!==t){const a=s&&this instanceof rn?[this.sep]:[],r=s?[this.sep]:[];e=z(e,a,t,r),n=z(n,new Array(t.length+a.length+r.length).fill(1))}return{tokens:e,token_type_ids:n}}}class rn extends an{}class on extends nn{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:s=!0}={}){const n=null===t?this.single:this.pair;let a=[],r=[];for(const o of n)"SpecialToken"in o?s&&(a.push(o.SpecialToken.id),r.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(a=z(a,e),r=z(r,new Array(e.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(a=z(a,t),r=z(r,new Array(t.length).fill(o.Sequence.type_id))));return{tokens:a,token_type_ids:r}}}class ln extends nn{post_process(e,t=null){return t&&(e=z(e,t)),{tokens:e}}}class cn extends nn{constructor(e){super(e),this.processors=e.processors.map((e=>nn.fromConfig(e)))}post_process(e,t=null,s={}){let n;for(const a of this.processors)if(a instanceof ln){if(e=a.post_process(e).tokens,t){t=a.post_process(t).tokens}}else{const r=a.post_process(e,t,s);e=r.tokens,n=r.token_type_ids}return{tokens:e,token_type_ids:n}}}class dn extends C{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new mn(e);case"Metaspace":return new kn(e);case"ByteLevel":return new fn(e);case"Replace":return new un(e);case"ByteFallback":return new _n(e);case"Fuse":return new hn(e);case"Strip":return new pn(e);case"Sequence":return new wn(e);case"CTC":return new gn(e);case"BPEDecoder":return new yn(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class un extends dn{decode_chain(e){const t=ys(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class _n extends dn{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let s=[];for(const n of e){let e=null;if(6===n.length&&n.startsWith("<0x")&&n.endsWith(">")){const t=parseInt(n.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)s.push(e);else{if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}t.push(n)}}if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}return t}}class hn extends dn{decode_chain(e){return[e.join("")]}}class pn extends dn{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let s=0;s<this.start&&e[s]===this.content;++s)t=s+1;let s=e.length;for(let t=0;t<this.stop;++t){const n=e.length-t-1;if(e[n]!==this.content)break;s=n}return e.slice(t,s)}))}}class mn extends dn{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=ks(e)),e)))}}class fn extends dn{constructor(e){super(e),this.byte_decoder=Ls,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),s=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(s)}decode_chain(e){const t=[];let s=[];for(const n of e)void 0!==this.added_tokens.find((e=>e.content===n))?(s.length>0&&(t.push(this.convert_tokens_to_string(s)),s=[]),t.push(n)):s.push(n);return s.length>0&&t.push(this.convert_tokens_to_string(s)),t}}class gn extends dn{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let s=1;s<e.length;++s)e[s]!==t.at(-1)&&t.push(e[s]);let s=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(s=ks(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class wn extends dn{constructor(e){super(e),this.decoders=e.decoders.map((e=>dn.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class yn extends dn{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,s)=>t.replaceAll(this.suffix,s===e.length-1?"":" ")))}}class xn extends dn{decode_chain(e){let t="";for(let s=1;s<e.length;s+=2)t+=e[s];return[t]}}class bn extends Qs{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let s=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(s=this.strRep+s),[s]}}class kn extends dn{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let s=0;s<e.length;++s){let n=e[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&n.startsWith(" ")&&(n=n.substring(1)),t.push(n)}return t}}class vn extends $s{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class Mn extends Qs{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>Qs.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,s)=>s.pre_tokenize(e,t)),[e])}}class En extends Qs{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class An extends Qs{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class Cn extends Qs{constructor(e){super(),this.config=e,this.pattern=ys(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const Tn=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Fn(e,t,s,n){for(const a of Object.keys(e)){const r=t-e[a].length,o=s(a),i=new Array(r).fill(o);e[a]="right"===n?z(e[a],i):z(i,e[a])}}function Pn(e,t){for(const s of Object.keys(e))e[s].length=t}class Sn extends C{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=$s.fromConfig(e.normalizer),this.pre_tokenizer=Qs.fromConfig(e.pre_tokenizer),this.model=Ps.fromConfig(e.model,t),this.post_processor=nn.fromConfig(e.post_processor),this.decoder=dn.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new Fs(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${F(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:s}of this.chat_template){if("string"!=typeof t||"string"!=typeof s)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=s}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:n=null,local_files_only:a=!1,revision:r="main",legacy:o=null}={}){return new this(...await ws(e,{progress_callback:t,config:s,cache_dir:n,local_files_only:a,revision:r,legacy:o}))}_call(e,{text_pair:t=null,add_special_tokens:s=!0,padding:n=!1,truncation:a=null,max_length:r=null,return_tensor:o=!0,return_token_type_ids:i=null}={}){const l=Array.isArray(e);let c;if(l){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");c=e.map(((e,n)=>this._encode_plus(e,{text_pair:t[n],add_special_tokens:s,return_token_type_ids:i})))}else c=e.map((e=>this._encode_plus(e,{add_special_tokens:s,return_token_type_ids:i})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");c=[this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:i})]}if(null===r?r="max_length"===n?this.model_max_length:re(c.map((e=>e.input_ids.length)))[0]:a||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),r=Math.min(r,this.model_max_length??1/0),n||a)for(let e=0;e<c.length;++e)c[e].input_ids.length!==r&&(c[e].input_ids.length>r?a&&Pn(c[e],r):n&&Fn(c[e],r,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const d={};if(o){if((!n||!a)&&c.some((e=>{for(const t of Object.keys(e))if(e[t].length!==c[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[c.length,c[0].input_ids.length];for(const t of Object.keys(c[0]))d[t]=new $e("int64",BigInt64Array.from(c.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(c[0]))d[e]=c.map((t=>t[e]));if(!l)for(const e of Object.keys(d))d[e]=d[e][0]}return d}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return vs(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const s=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(s)}})).flat();return t}_encode_plus(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:n=null}={}){const{tokens:a,token_type_ids:r}=this._tokenize_helper(e,{pair:t,add_special_tokens:s}),o=this.model.convert_tokens_to_ids(a),i={input_ids:o,attention_mask:new Array(o.length).fill(1)};return(n??this.return_token_type_ids)&&r&&(i.token_type_ids=r),i}_tokenize_helper(e,{pair:t=null,add_special_tokens:s=!1}={}){const n=this._encode_text(e),a=this._encode_text(t);return this.post_processor?this.post_processor(n,a,{add_special_tokens:s}):{tokens:z(n??[],a??[])}}tokenize(e,{pair:t=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:s}).tokens}encode(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:n=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:n}).input_ids}batch_decode(e,t={}){return e instanceof $e&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof $e&&(e=bs(e)),!Array.isArray(e)||0===e.length||(s=e[0],!Number.isInteger(s)&&"bigint"!=typeof s))throw Error("token_ids must be a non-empty array of integers.");var s;return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:s=null}){let n=this.model.convert_ids_to_tokens(e);t&&(n=n.filter((e=>!this.special_tokens.includes(e))));let a=this.decoder?this.decoder(n):n.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(a=a.replaceAll(this.decoder.end_of_word_suffix," "),t&&(a=a.trim())),(s??this.clean_up_tokenization_spaces)&&(a=ks(a)),a}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const s=this.chat_template;if(null!==e&&Object.hasOwn(s,e))e=s[e];else if(null===e)if(null!==t&&"tool_use"in s)e=s.tool_use;else{if(!("default"in s))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`);e=s.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:s=null,chat_template:n=null,add_generation_prompt:a=!1,tokenize:r=!0,padding:o=!1,truncation:i=!1,max_length:l=null,return_tensor:c=!0,return_dict:d=!1,tokenizer_kwargs:u={},..._}={}){if("string"!=typeof(n=this.get_chat_template({chat_template:n,tools:t})))throw Error("chat_template must be a string, but got "+typeof n);let h=this._compiled_template_cache.get(n);void 0===h&&(h=new ps(n),this._compiled_template_cache.set(n,h));const p=Object.create(null);for(const e of Tn){const t=this.getToken(e);t&&(p[e]=t)}const m=h.render({messages:e,add_generation_prompt:a,tools:t,documents:s,...p,..._});if(r){const e=this._call(m,{add_special_tokens:!1,padding:o,truncation:i,max_length:l,return_tensor:c,...u});return d?e:e.input_ids}return m}}class zn extends Sn{return_token_type_ids=!0}class In extends Sn{return_token_type_ids=!0}class Ln extends Sn{return_token_type_ids=!0}class Bn extends Sn{return_token_type_ids=!0}class On extends Sn{return_token_type_ids=!0}class Nn extends Sn{return_token_type_ids=!0}class $n extends Sn{return_token_type_ids=!0}class Vn extends Sn{return_token_type_ids=!0}class Dn extends Sn{return_token_type_ids=!0}class jn extends Sn{}class Un extends Sn{}class Gn extends Sn{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Rn extends Sn{return_token_type_ids=!0}class qn extends Sn{}class Wn extends Sn{}class Xn extends Sn{}class Hn extends Sn{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return ca(this,e,t,s)}}class Jn extends Hn{}class Kn extends Sn{}class Qn extends Sn{}const Zn="▁";class Yn extends Sn{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new bn({replacement:Zn,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Zn+e.replaceAll(Zn," "));return t.length>1&&t[0]===Zn&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class ea extends Sn{}class ta extends Sn{}class sa extends Sn{}class na extends Sn{}class aa extends Sn{}class ra extends Sn{}class oa extends Sn{}class ia extends Sn{}class la extends Sn{}function ca(e,t,s,n){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const a=n.src_lang,r=n.tgt_lang;if(!e.language_codes.includes(r))throw new Error(`Target language code "${r}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==a){if(!e.language_codes.includes(a))throw new Error(`Source language code "${a}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(a);break}}return n.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(r)])[0],e._call(t,s)}class da extends Sn{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return ca(this,e,t,s)}}class ua extends Sn{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,s){return ca(this,e,t,s)}}class _a extends Sn{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:s=!1,time_precision:n=null,force_full_sequences:a=!0}={}){if(null===n)throw Error("Must specify time_precision");let r=null;const o="word"===t;function i(){return{language:r,timestamp:[null,null],text:""}}const l=[];let c=i(),d=0;const u=this.timestamp_begin,_=u+1500;let h=[],p=[],m=!1,f=null;const g=new Set(this.all_special_ids);for(const s of e){const e=s.tokens,a=o?s.token_timestamps:null;let w=null,y=u;if("stride"in s){const[t,a,r]=s.stride;if(d-=a,f=t-r,a&&(y=a/n+u),r)for(let t=e.length-1;t>=0;--t){const s=Number(e[t]);if(s>=u){if(null!==w&&(s-u)*n<f)break;w=s}}}let x=[],b=[];for(let s=0;s<e.length;++s){const f=Number(e[s]);if(g.has(f)){const e=this.decode([f]),s=fs.get(e.slice(2,-2));if(void 0!==s){if(null!==r&&s!==r&&!t){h.push(x);const e=this.findLongestCommonSequence(h)[0],t=this.decode(e);c.text=t,l.push(c),h=[],x=[],c=i()}r=c.language=s}}else if(f>=u&&f<=_){const e=ue((f-u)*n+d,2);if(null!==w&&f>=w)m=!0;else if(m||h.length>0&&f<y)m=!1;else if(null===c.timestamp[0])c.timestamp[0]=e;else if(e===c.timestamp[0]);else{c.timestamp[1]=e,h.push(x),o&&p.push(b);const[t,s]=this.findLongestCommonSequence(h,p),n=this.decode(t);c.text=n,o&&(c.words=this.collateWordTimestamps(t,s,r)),l.push(c),h=[],x=[],p=[],b=[],c=i()}}else if(x.push(f),o){let e,t=ue(a[s]+d,2);if(s+1<a.length){e=ue(a[s+1]+d,2);const r=this.decode([f]);As.test(r)&&(e=ue(Math.min(t+n,e),2))}else e=null;b.push([t,e])}}if("stride"in s){const[e,t,n]=s.stride;d+=e-n}x.length>0?(h.push(x),o&&p.push(b)):h.every((e=>0===e.length))&&(c=i(),h=[],x=[],p=[],b=[])}if(h.length>0){if(a&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,s]=this.findLongestCommonSequence(h,p),n=this.decode(e);c.text=n,o&&(c.words=this.collateWordTimestamps(e,s,r)),l.push(c)}let w=Object.create(null);const y=l.map((e=>e.text)).join("");if(t||s){for(let e=0;e<l.length;++e){const n=l[e];t||delete n.timestamp,s||delete n.language}if(o){const e=[];for(const t of l)for(const s of t.words)e.push(s);w={chunks:e}}else w={chunks:l}}return[y,w]}findLongestCommonSequence(e,t=null){let s=e[0],n=s.length,a=[];const r=Array.isArray(t)&&t.length>0;let o=r?[]:null,i=r?t[0]:null;for(let l=1;l<e.length;++l){const c=e[l];let d=0,u=[n,n,0,0];const _=c.length;for(let e=1;e<n+_;++e){const a=Math.max(0,n-e),o=Math.min(n,n+_-e),h=s.slice(a,o),p=Math.max(0,e-n),m=Math.min(_,e),f=c.slice(p,m);if(h.length!==f.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let g;g=r?h.filter(((e,s)=>e===f[s]&&i[a+s]<=t[l][p+s])).length:h.filter(((e,t)=>e===f[t])).length;const w=g/e+e/1e4;g>1&&w>d&&(d=w,u=[a,o,p,m])}const[h,p,m,f]=u,g=Math.floor((p+h)/2),w=Math.floor((f+m)/2);a.push(...s.slice(0,g)),s=c.slice(w),n=s.length,r&&(o.push(...i.slice(0,g)),i=t[l].slice(w))}return a.push(...s),r?(o.push(...i),[a,o]):[a,[]]}collateWordTimestamps(e,t,s){const[n,a,r]=this.combineTokensIntoWords(e,s),o=[];for(let e=0;e<n.length;++e){const s=r[e];o.push({text:n[e],timestamp:[t[s.at(0)][0],t[s.at(-1)][1]]})}return o}combineTokensIntoWords(e,t,s="\"'“¡¿([{-",n="\"'.。,，!！?？:：”)]}、"){let a,r,o;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[a,r,o]=this.splitTokensOnUnicode(e):[a,r,o]=this.splitTokensOnSpaces(e),this.mergePunctuations(a,r,o,s,n)}decode(e,t){let s;return t?.decode_with_timestamps?(e instanceof $e&&(e=bs(e)),s=this.decodeWithTimestamps(e,t)):s=super.decode(e,t),s}decodeWithTimestamps(e,t){const s=t?.time_precision??.02,n=Array.from(this.all_special_ids).at(-1)+1;let a=[[]];for(let t of e)if(t=Number(t),t>=n){const e=((t-n)*s).toFixed(2);a.push(`<|${e}|>`),a.push([])}else a[a.length-1].push(t);return a=a.map((e=>"string"==typeof e?e:super.decode(e,t))),a.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),s=[],n=[],a=[];let r=[],o=[],i=0;for(let l=0;l<e.length;++l){const c=e[l];r.push(c),o.push(l);const d=this.decode(r,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[i+d.indexOf("�")]||(s.push(d),n.push(r),a.push(o),r=[],o=[],i+=d.length)}return[s,n,a]}splitTokensOnSpaces(e){const[t,s,n]=this.splitTokensOnUnicode(e),a=[],r=[],o=[],i=new RegExp(`^[${Es}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],c=s[e],d=n[e],u=c[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),_=l.startsWith(" "),h=l.trim(),p=i.test(h);if(u||_||p||0===a.length)a.push(l),r.push(c),o.push(d);else{const e=a.length-1;a[e]+=l,r[e].push(...c),o[e].push(...d)}}return[a,r,o]}mergePunctuations(e,t,s,n,a){const r=structuredClone(e),o=structuredClone(t),i=structuredClone(s);let l=r.length-2,c=r.length-1;for(;l>=0;)r[l].startsWith(" ")&&n.includes(r[l].trim())?(r[c]=r[l]+r[c],o[c]=z(o[l],o[c]),i[c]=z(i[l],i[c]),r[l]="",o[l]=[],i[l]=[]):c=l,--l;for(l=0,c=1;c<r.length;)!r[l].endsWith(" ")&&a.includes(r[c])?(r[l]+=r[c],o[l]=z(o[l],o[c]),i[l]=z(i[l],i[c]),r[c]="",o[c]=[],i[c]=[]):l=c,++c;return[r.filter((e=>e)),o.filter((e=>e.length>0)),i.filter((e=>e.length>0))]}}class ha extends Sn{}class pa extends Sn{}class ma extends Sn{}class fa extends Sn{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...s]=e.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(t);if(2===s.length){const[e,t]=s;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),z([e],super._encode_text(t))}}}class ga extends Sn{}class wa extends Sn{}class ya extends Sn{}class xa extends Sn{}class ba extends Sn{}class ka extends Sn{constructor(e,t){super(e,t),this.decoder=new xn({})}}class va extends Sn{}class Ma extends Sn{}class Ea{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:qn,DistilBertTokenizer:jn,CamembertTokenizer:Un,DebertaTokenizer:On,DebertaV2Tokenizer:Nn,BertTokenizer:zn,HerbertTokenizer:$n,ConvBertTokenizer:Vn,RoFormerTokenizer:Dn,XLMTokenizer:Gn,ElectraTokenizer:Rn,MobileBertTokenizer:Ln,SqueezeBertTokenizer:Bn,AlbertTokenizer:In,GPT2Tokenizer:Wn,BartTokenizer:Xn,MBartTokenizer:Hn,MBart50Tokenizer:Jn,RobertaTokenizer:Kn,WhisperTokenizer:_a,CodeGenTokenizer:ha,CLIPTokenizer:pa,SiglipTokenizer:ma,MarianTokenizer:fa,BloomTokenizer:Qn,NllbTokenizer:da,M2M100Tokenizer:ua,LlamaTokenizer:Yn,CodeLlamaTokenizer:ea,XLMRobertaTokenizer:ta,MPNetTokenizer:sa,FalconTokenizer:na,GPTNeoXTokenizer:aa,EsmTokenizer:ra,Wav2Vec2CTCTokenizer:ga,BlenderbotTokenizer:wa,BlenderbotSmallTokenizer:ya,SpeechT5Tokenizer:xa,NougatTokenizer:ba,VitsTokenizer:ka,Qwen2Tokenizer:oa,GemmaTokenizer:ia,Grok1Tokenizer:la,CohereTokenizer:va,MgpstrTokenizer:Ma,PreTrainedTokenizer:Sn};static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:n=null,local_files_only:a=!1,revision:r="main",legacy:o=null}={}){const[i,l]=await ws(e,{progress_callback:t,config:s,cache_dir:n,local_files_only:a,revision:r,legacy:o}),c=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[c];return d||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),d=Sn),new d(i,l)}}function Aa(e){const t={};let s={};switch(e.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":s=Aa(e.text_config);break;case"moondream1":s=Aa(e.phi_config);break;case"musicgen":s=Aa(e.decoder);break;case"multi_modality":s=Aa(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const n=Aa(e.decoder),a="num_decoder_layers"in n,r=O(e,["model_type","is_encoder_decoder"]);return a?(r.num_decoder_layers=n.num_decoder_layers,r.num_decoder_heads=n.num_decoder_heads,r.decoder_hidden_size=n.decoder_hidden_size,r.num_encoder_layers=n.num_encoder_layers,r.num_encoder_heads=n.num_encoder_heads,r.encoder_hidden_size=n.encoder_hidden_size):(r.num_layers=n.num_layers,r.num_heads=n.num_heads,r.hidden_size=n.hidden_size),r}const n={...s,...O(e,["model_type","multi_query","is_encoder_decoder"])};for(const s in t)n[s]=e[t[s]];return n}function Ca(e,{prefix:t="past_key_values",batch_size:s=1}={}){const n={},a=e.normalized_config;if(a.is_encoder_decoder&&"num_encoder_heads"in a&&"num_decoder_heads"in a){const e=a.encoder_dim_kv??a.encoder_hidden_size/a.num_encoder_heads,r=a.decoder_dim_kv??a.decoder_hidden_size/a.num_decoder_heads,o=[s,a.num_encoder_heads,0,e],i=[s,a.num_decoder_heads,0,r];for(let e=0;e<a.num_decoder_layers;++e)n[`${t}.${e}.encoder.key`]=o,n[`${t}.${e}.encoder.value`]=o,n[`${t}.${e}.decoder.key`]=i,n[`${t}.${e}.decoder.value`]=i}else{const e=a.num_heads,r=a.num_layers,o=a.dim_kv??a.hidden_size/(a.num_attention_heads??e);if("falcon"===a.model_type){const a=[s*e,0,o];for(let e=0;e<r;++e)n[`${t}.${e}.key`]=a,n[`${t}.${e}.value`]=a}else if(a.multi_query){const a=[s*e,0,2*o];for(let e=0;e<r;++e)n[`${t}.${e}.key_value`]=a}else if("bloom"===a.model_type){const a=[s*e,o,0],i=[s*e,0,o];for(let e=0;e<r;++e)n[`${t}.${e}.key`]=a,n[`${t}.${e}.value`]=i}else if("openelm"===a.model_type)for(let a=0;a<r;++a){const r=[s,e[a],0,o];n[`${t}.${a}.key`]=r,n[`${t}.${a}.value`]=r}else{const a=[s,e,0,o];for(let e=0;e<r;++e)n[`${t}.${e}.key`]=a,n[`${t}.${e}.value`]=a}}return n}class Ta{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=Aa(this)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:n=null,local_files_only:a=!1,revision:r="main"}={}){!s||s instanceof Ta||(s=new Ta(s));const o=s??await async function(e,t){return await J(e,"config.json",!0,t)}(e,{progress_callback:t,config:s,cache_dir:n,local_files_only:a,revision:r});return new this(o)}}class Fa{static async from_pretrained(...e){return Ta.from_pretrained(...e)}}const Pa=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"}),Sa=function(){let e;return async function(){if(void 0===e)if(x.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),za=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Ia=Object.freeze({[Pa.wasm]:za.q8}),La=Object.freeze({[za.fp32]:"",[za.fp16]:"_fp16",[za.int8]:"_int8",[za.uint8]:"_uint8",[za.q8]:"_quantized",[za.q4]:"_q4",[za.q4f16]:"_q4f16",[za.bnb4]:"_bnb4"}),Ba="https://github.com/huggingface/transformers.js/issues/new/choose",Oa="preprocessor_config.json",Na=Oa;class $a extends C{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Va extends C{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Da extends C{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let s=t;for(const t of this.processors)s=t(e,s);return s}[Symbol.iterator](){return this.processors.values()}}class ja extends $a{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let s=0;s<e.length;++s)if(1===e[s].length){const e=t[s].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class Ua extends $a{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.max_length-1){const e=t[s].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class Ga extends $a{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.begin_index){const e=t[s].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class Ra extends $a{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let s=0;s<e.length;++s){const n=t[s].data;if(n[this.no_timestamps_token_id]=-1/0,e[s].length===this.begin_index-1){n.fill(-1/0),n[this.timestamp_begin]=0;continue}const a=e[s].slice(this.begin_index),r=a.length>=1&&a[a.length-1]>=this.timestamp_begin,o=a.length<2||a[a.length-2]>=this.timestamp_begin;if(r&&(o?n.subarray(this.timestamp_begin).fill(-1/0):n.subarray(0,this.eos_token_id).fill(-1/0)),e[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;n.subarray(e+1).fill(-1/0)}const i=ee(n);Math.log(i.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>re(i.subarray(0,this.timestamp_begin))[0]&&n.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class qa extends $a{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,s=[];for(let n=0;n<t+1-this.no_repeat_ngram_size;++n){const t=[];for(let s=0;s<this.no_repeat_ngram_size;++s)t.push(e[n+s]);s.push(t.map(Number))}const n=new Map;for(const e of s){const t=e.slice(0,e.length-1),s=JSON.stringify(t),a=n.get(s)??[];a.push(e[e.length-1]),n.set(s,a)}return n}getGeneratedNgrams(e,t){const s=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let s=0;s<e.length;++s){const n=t[s].data,a=this.calcBannedNgramTokens(e[s]);for(const e of a)n[e]=-1/0}return t}}class Wa extends $a{constructor(e){super(),this.penalty=e}_call(e,t){for(let s=0;s<e.length;++s){const n=t[s].data;for(const t of new Set(e[s])){const e=Number(t);n[e]<0?n[e]*=this.penalty:n[e]/=this.penalty}}return t}}class Xa extends $a{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length<this.min_length){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class Ha extends $a{constructor(e,t,s){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(s)?s:[s]}_call(e,t){for(let s=0;s<e.length;++s){if(e[s].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class Ja extends $a{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s){const n=t[s].data,a=e[s];for(const e of this.bad_words_ids){let t=!0;for(let s=1;s<=e.length-1&&e.length<a.length;++s)if(e.at(-s-1)!=a.at(-s)){t=!1;break}t&&(n[e.at(-1)]=-1/0)}}return t}}class Ka extends $a{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const s=e.length,n=t.slice([0,s],null),a=t.slice([s,t.dims[0]],null);for(let e=0;e<a.data.length;++e)a.data[e]+=(n.data[e]-a.data[e])*this.guidance_scale;return a}}class Qa extends Va{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const s=t.data;for(let e=0;e<s.length;++e)s[e]/=this.temperature;return t}}class Za extends Va{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(s)||s<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=s}}class Ya extends Va{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,s),this.filter_value=t}}class er{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,O(e,Object.getOwnPropertyNames(this)))}}var tr=n(836);let sr,nr,ar;const rr=x.IS_BROWSER_ENV||x.IS_WEBWORKER_ENV;if(rr)sr=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},ar=self.createImageBitmap,nr=self.ImageData;else{if(!tr)throw new Error("Unable to load image processing library.");ar=async e=>{const t=(await e.metadata()).channels,{data:s,info:n}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),a=new lr(new Uint8ClampedArray(s),n.width,n.height,n.channels);return void 0!==t&&t!==n.channels&&a.convert(t),a}}const or={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},ir=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class lr{constructor(e,t,s,n){this.data=e,this.width=t,this.height=s,this.channels=n}get size(){return[this.width,this.height]}static async read(e){if(e instanceof lr)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!rr)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new lr(t,e.width,e.height,4)}static async fromURL(e){const t=await q(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const s=await t.blob();return this.fromBlob(s)}static async fromBlob(e){if(rr){const t=await ar(e),s=sr(t.width,t.height).getContext("2d");return s.drawImage(t,0,0),new this(s.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=tr(await e.arrayBuffer());return await ar(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new lr(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,s=0;t<this.data.length;t+=this.channels){const n=this.data[t],a=this.data[t+1],r=this.data[t+2];e[s++]=Math.round(.2989*n+.587*a+.114*r)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t];break;case 4:for(let t=0,s=0;t<this.data.length;t+=4)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=255;break;case 3:for(let t=0,s=0;t<this.data.length;t+=3)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2],e[s++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,s=e.data,n=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*n);for(let a=0,r=0,o=0;a<n;++a)e[o++]=t[r++],e[o++]=t[r++],e[o++]=t[r++],e[o++]=s[a];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<n;++e)t[4*e+3]=s[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:s=2}={}){if(this.width===e&&this.height===t)return this;let n=or[s]??s;const a=P(e),r=P(t);if(a&&r)return this;if(a?e=t/this.height*this.width:r&&(t=e/this.width*this.height),rr){const s=this.channels,n=this.toCanvas(),a=sr(e,t).getContext("2d");a.drawImage(n,0,0,e,t);return new lr(a.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();switch(n){case"box":case"hamming":"box"!==n&&"hamming"!==n||(console.warn(`Resampling method ${n} is not yet supported. Using bilinear instead.`),n="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([e/this.width,0,0,t/this.height],{interpolator:n});break;case"lanczos":s=s.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${n} is not supported.`)}return await ar(s)}}async pad([e,t,s,n]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.max(s,0),n=Math.max(n,0),0===e&&0===t&&0===s&&0===n)return this;if(rr){const a=this.channels,r=this.toCanvas(),o=this.width+e+t,i=this.height+s+n,l=sr(o,i).getContext("2d");l.drawImage(r,0,0,this.width,this.height,e,s,this.width,this.height);return new lr(l.getImageData(0,0,o,i).data,o,i,4).convert(a)}{const a=this.toSharp().extend({left:e,right:t,top:s,bottom:n});return await ar(a)}}async crop([e,t,s,n]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.min(s,this.width-1),n=Math.min(n,this.height-1),0===e&&0===t&&s===this.width-1&&n===this.height-1)return this;const a=s-e+1,r=n-t+1;if(rr){const s=this.channels,n=this.toCanvas(),o=sr(a,r).getContext("2d");o.drawImage(n,e,t,a,r,0,0,a,r);return new lr(o.getImageData(0,0,a,r).data,a,r,4).convert(s)}{const s=this.toSharp().extract({left:e,top:t,width:a,height:r});return await ar(s)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const s=(this.width-e)/2,n=(this.height-t)/2;if(rr){const a=this.channels,r=this.toCanvas(),o=sr(e,t).getContext("2d");let i=0,l=0,c=0,d=0;s>=0?i=s:c=-s,n>=0?l=n:d=-n,o.drawImage(r,i,l,e,t,c,d,e,t);return new lr(o.getImageData(0,0,e,t).data,e,t,4).convert(a)}{let a=this.toSharp();if(s>=0&&n>=0)a=a.extract({left:Math.floor(s),top:Math.floor(n),width:e,height:t});else if(s<=0&&n<=0){const r=Math.floor(-n),o=Math.floor(-s);a=a.extend({top:r,left:o,right:e-this.width-o,bottom:t-this.height-r})}else{let r=[0,0],o=0;n<0?(r[0]=Math.floor(-n),r[1]=t-this.height-r[0]):o=Math.floor(n);let i=[0,0],l=0;s<0?(i[0]=Math.floor(-s),i[1]=e-this.width-i[0]):l=Math.floor(s),a=a.extend({top:r[0],bottom:r[1],left:i[0],right:i[1]}).extract({left:l,top:o,width:e,height:t})}return await ar(a)}}async toBlob(e="image/png",t=1){if(!rr)throw new Error("toBlob() is only supported in browser environments.");const s=this.toCanvas();return await s.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new $e("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!rr)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=sr(e.width,e.height),s=new nr(e.data,e.width,e.height);return t.getContext("2d").putImageData(s,0,0),t}split(){const{data:e,width:t,height:s,channels:n}=this,a=e.constructor,r=e.length/n,o=Array.from({length:n},(()=>new a(r)));for(let t=0;t<r;++t){const s=n*t;for(let a=0;a<n;++a)o[a][t]=e[s+a]}return o.map((e=>new lr(e,t,s,1)))}_update(e,t,s,n=null){return this.data=e,this.width=t,this.height=s,null!==n&&(this.channels=n),this}clone(){return new lr(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!rr){if(x.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(x.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),s=ir.get(t)??"image/png";B(e,await this.toBlob(s))}}toSharp(){if(rr)throw new Error("toSharp() is only supported in server-side environments.");return tr(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const cr=lr.read.bind(lr);class dr extends C{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class ur extends C{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof ur?e=e.criteria:e instanceof dr&&(e=[e]),this.criteria.push(...e)}_call(e,t){const s=new Array(e.length).fill(!1);for(const n of this.criteria){const a=n(e,t);for(let e=0;e<s.length;++e)s[e]||=a[e]}return s}[Symbol.iterator](){return this.criteria.values()}}class _r extends dr{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class hr extends dr{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class pr extends dr{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}class mr extends C{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let s=e.dims.at(-1),n=e.data;if(-1===t)n=n.slice(-s);else{let e=t*s;n=n.slice(e,e+s)}return n}randomSelect(e){let t=0;for(let s=0;s<e.length;++s)t+=e[s];let s=Math.random()*t;for(let t=0;t<e.length;++t)if(s-=e[t],s<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new gr(e);if(e.num_beams>1)return new wr(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new fr(e)}}class fr extends mr{async sample(e){const t=re(e.data)[1];return[[BigInt(t),0]]}}class gr extends mr{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,n]=await Re(e,t),a=Y(s.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[n.data[e],Math.log(a[e])]}))}}class wr extends mr{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,n]=await Re(e,t),a=Y(s.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[n.data[t],Math.log(a[t])]))}}class yr extends er{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const xr=0,br=1,kr=2,vr=3,Mr=4,Er=5,Ar=6,Cr=7,Tr=8,Fr=9,Pr=10,Sr=11,zr=new Map,Ir=new Map,Lr=new Map;async function Br(e,t,s){const n=s.config?.["transformers.js_config"]??{};let a=s.device??n.device;a&&"string"!=typeof a&&(a.hasOwnProperty(t)?a=a[t]:(console.warn(`device not specified for "${t}". Using the default device.`),a=null));const r=a??(x.IS_NODE_ENV?"cpu":"wasm"),o=function(e=null){if(!e)return Ee;switch(e){case"auto":return Me;case"gpu":return Me.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(Me.includes(e))return[ve[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${Me.join(", ")}.`)}(r);let i=s.dtype??n.dtype;if("string"!=typeof i&&(i&&i.hasOwnProperty(t)?i=i[t]:(i=Ia[r]??za.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${i}) for this device (${r}).`))),i===za.auto){let e=n.dtype;"string"!=typeof e&&(e=e[t]),i=e&&e!==za.auto&&za.hasOwnProperty(e)?e:Ia[r]??za.fp32}const l=i;if(!La.hasOwnProperty(l))throw new Error(`Invalid dtype: ${l}. Should be one of: ${Object.keys(za).join(", ")}`);if(l===za.fp16&&"webgpu"===r&&!await Sa())throw new Error(`The device (${r}) does not support fp16.`);const c=n.kv_cache_dtype?"string"==typeof n.kv_cache_dtype?n.kv_cache_dtype:n.kv_cache_dtype[l]??"float32":void 0;if(c&&!["float32","float16"].includes(c))throw new Error(`Invalid kv_cache_dtype: ${c}. Should be one of: float32, float16`);const d={dtype:l,kv_cache_dtype:c},u=`${t}${La[l]}.onnx`,_=`${s.subfolder??""}/${u}`,h={...s.session_options};h.executionProviders??=o;const p=n.free_dimension_overrides;p?h.freeDimensionOverrides??=p:r.startsWith("webnn")&&!h.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const m=H(e,_,!0,s,x.IS_NODE_ENV),f=s.use_external_data_format??n.use_external_data_format;let g=[];if(f){let n;n="object"==typeof f?f.hasOwnProperty(u)?f[u]:!!f.hasOwnProperty(t)&&f[t]:f;const a=+n;if(a>j)throw new Error(`The number of external data chunks (${a}) exceeds the maximum allowed value (${j}).`);for(let t=0;t<a;++t){const n=`${u}_data${0===t?"":"_"+t}`,a=`${s.subfolder??""}/${n}`;g.push(new Promise((async(t,r)=>{const o=await H(e,a,!0,s,x.IS_NODE_ENV);t(o instanceof Uint8Array?{path:n,data:o}:n)})))}}else void 0!==h.externalData&&(g=h.externalData.map((async t=>{if("string"==typeof t.data){const n=await H(e,t.data,!0,s);return{...t,data:n}}return t})));if(g.length>0){const e=await Promise.all(g);x.IS_NODE_ENV||(h.externalData=e)}if("webgpu"===r){const e=Ca(s.config,{prefix:"present"});if(Object.keys(e).length>0&&!Ie()){const t={};for(const s in e)t[s]="gpu-buffer";h.preferredOutputLocation=t}}return{buffer_or_path:await m,session_options:h,session_config:d}}async function Or(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async n=>{const{buffer_or_path:a,session_options:r,session_config:o}=await Br(e,t[n],s);return[n,await Pe(a,r,o)]}))))}async function Nr(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async n=>[n,await J(e,t[n],!1,s)]))))}async function $r(e,t){const s=function(e,t){const s=Object.create(null),n=[];for(const a of e.inputNames){const e=t[a];e instanceof $e?s[a]=Ie()?e.clone():e:n.push(a)}if(n.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);const a=Object.keys(t).length,r=e.inputNames.length;if(a>r){let s=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${a} > ${r}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(e,t);try{const t=Object.fromEntries(Object.entries(s).map((([e,t])=>[e,t.ort_tensor])));let n=await e.run(t);return n=Vr(n),n}catch(e){const t=Object.fromEntries(Object.entries(s).map((([e,{type:t,dims:s,data:n}])=>[e,{type:t,dims:s,data:n}])));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function Vr(e){for(let t in e)Se(e[t])?e[t]=new $e(e[t]):"object"==typeof e[t]&&Vr(e[t]);return e}function Dr(e){if(e instanceof $e)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new $e("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new $e("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function jr(e){return new $e("bool",[e],[1])}async function Ur(e,t){let{encoder_outputs:s,input_ids:n,decoder_input_ids:a,...r}=t;if(!s){const n=O(t,e.sessions.model.inputNames);s=(await Gr(e,n)).last_hidden_state}r.input_ids=a,r.encoder_hidden_states=s,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(r.encoder_attention_mask=t.attention_mask);return await qr(e,r,!0)}async function Gr(e,t){const s=e.sessions.model,n=O(t,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!n.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");n.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(s.inputNames.includes("token_type_ids")&&!n.token_type_ids){if(!n.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");n.token_type_ids=ct(n.input_ids)}if(s.inputNames.includes("pixel_mask")&&!n.pixel_mask){if(!n.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=n.pixel_values.dims;n.pixel_mask=ot([e[0],e[2],e[3]])}return await $r(s,n)}async function Rr(e,t){const s=await e.encode(t);return await e.decode(s)}async function qr(e,t,s=!1){const n=e.sessions[s?"decoder_model_merged":"model"],{past_key_values:a,...r}=t;if(n.inputNames.includes("use_cache_branch")&&(r.use_cache_branch=jr(!!a)),n.inputNames.includes("position_ids")&&r.attention_mask&&!r.position_ids){const t="paligemma"===e.config.model_type?1:0;r.position_ids=function(e,t=null,s=0){const{input_ids:n,inputs_embeds:a,attention_mask:r}=e,{data:o,dims:i}=Qr(r,s);let l=new $e("int64",o,i);if(t){const e=-(n??a).dims.at(1);l=l.slice(null,[e,null])}return l}(r,a,t)}e.addPastKeyValues(r,a);const o=O(r,n.inputNames);return await $r(n,o)}function Wr({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:n,attention_mask:a}){const r=n.tolist().map((t=>t.reduce(((t,s,n)=>(s==e&&t.push(n),t)),[]))),o=r.reduce(((e,t)=>e+t.length),0),i=s.dims[0];if(o!==i)throw new Error(`Number of tokens and features do not match: tokens: ${o}, features ${i}`);let l=0;for(let e=0;e<r.length;++e){const n=r[e],a=t[e];for(let e=0;e<n.length;++e)a[n[e]].data.set(s[l++].data)}return{inputs_embeds:t,attention_mask:a}}function Xr({image_token_id:e,inputs_embeds:t,image_features:s,input_ids:n,attention_mask:a}){return Wr({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:n,attention_mask:a})}async function Hr(e,{encode_function:t,merge_function:s,modality_input_name:n,modality_output_name:a,input_ids:r=null,attention_mask:o=null,position_ids:i=null,inputs_embeds:l=null,past_key_values:c=null,generation_config:d=null,logits_processor:u=null,..._}){const h=_[n];if(!l)if(l=await e.encode_text({input_ids:r,..._}),h&&1!==r.dims[1]){const e=await t({[n]:h,..._});({inputs_embeds:l,attention_mask:o}=s({[a]:e,inputs_embeds:l,input_ids:r,attention_mask:o}))}else if(c&&h&&1===r.dims[1]){const e=r.dims[1],t=Object.values(c)[0].dims.at(-2);o=Ze([ot([r.dims[0],t]),o.slice(null,[o.dims[1]-e,o.dims[1]])],1)}if(!i&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:t,video_grid_thw:s}=_;[i]=e.get_rope_index(r,t,s,o)}return await qr(e,{inputs_embeds:l,past_key_values:c,attention_mask:o,position_ids:i,generation_config:d,logits_processor:u},!0)}async function Jr(e,t){return await Hr(e,{...t,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:e.encode_audio.bind(e),merge_function:e._merge_input_ids_with_audio_features.bind(e)})}async function Kr(e,t){return await Hr(e,{...t,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:e.encode_image.bind(e),merge_function:e._merge_input_ids_with_image_features.bind(e)})}function Qr(e,t=0){const[s,n]=e.dims,a=e.data,r=new BigInt64Array(a.length);for(let e=0;e<s;++e){const s=e*n;let o=BigInt(t);for(let e=0;e<n;++e){const t=s+e;0n===a[t]?r[t]=BigInt(1):(r[t]=o,o+=a[t])}}return{data:r,dims:e.dims}}function Zr(e,t,s,n){if(s.past_key_values){const t=Object.values(s.past_key_values)[0].dims.at(-2),{input_ids:n,attention_mask:a}=s;if(a&&a.dims[1]>n.dims[1]);else if(t<n.dims[1])s.input_ids=n.slice(null,[t,null]);else if(null!=e.config.image_token_index&&n.data.some((t=>t==e.config.image_token_index))){const a=e.config.num_image_tokens;if(!a)throw new Error("`num_image_tokens` is missing in the model configuration.");const r=n.dims[1]-(t-a);s.input_ids=n.slice(null,[-r,null]),s.attention_mask=ot([1,t+r])}}return s}function Yr(e,t,s,n){return s.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...s,decoder_input_ids:Dr(t)}}function eo(e,...t){return e.config.is_encoder_decoder?Yr(e,...t):Zr(e,...t)}function to(e,t,s,n){const a=!!s.past_key_values;if(null!==n.guidance_scale&&n.guidance_scale>1&&(a?s.input_ids=Ze([s.input_ids,s.input_ids],0):(s.input_ids=Ze([s.input_ids,rt(s.input_ids,BigInt(n.pad_token_id))],0),s.attention_mask=Ze([s.attention_mask,rt(s.attention_mask,0n)],0))),!a&&s.pixel_values||(s.pixel_values=at([0,0,3,384,384],1)),a){const e=0,t=1,n=e>0?1:0,a=1;s.images_seq_mask=new $e("bool",new Array(e+t).fill(!0).fill(!1,0,t),[a,e+t]),s.images_emb_mask=new $e("bool",new Array(e).fill(!!n),[a,1,e])}return s}class so extends C{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,s){super(),this.config=e,this.sessions=t,this.configs=s;const n=Lr.get(this.constructor),a=zr.get(n);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,a){case Mr:this.can_generate=!0,this._forward=qr,this._prepare_inputs_for_generation=Zr;break;case kr:case vr:case Cr:this.can_generate=!0,this._forward=Ur,this._prepare_inputs_for_generation=Yr;break;case br:this._forward=Ur;break;case Ar:this.can_generate=!0,this._forward=Kr,this._prepare_inputs_for_generation=eo;break;case Pr:this.can_generate=!0,this._forward=Jr,this._prepare_inputs_for_generation=eo;break;case Fr:this.can_generate=!0,this._prepare_inputs_for_generation=eo;break;case Tr:this.can_generate=!0,this._prepare_inputs_for_generation=to;break;case Sr:this._forward=Rr;break;default:this._forward=Gr}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:n=null,local_files_only:a=!1,revision:r="main",model_file_name:o=null,subfolder:i="onnx",device:l=null,dtype:c=null,use_external_data_format:d=null,session_options:u={}}={}){let _={progress_callback:t,config:s,cache_dir:n,local_files_only:a,revision:r,model_file_name:o,subfolder:i,device:l,dtype:c,use_external_data_format:d,session_options:u};const h=Lr.get(this),p=zr.get(h);let m;if(s=_.config=await Fa.from_pretrained(e,_),p===Mr)m=await Promise.all([Or(e,{model:_.model_file_name??"model"},_),Nr(e,{generation_config:"generation_config.json"},_)]);else if(p===kr||p===vr)m=await Promise.all([Or(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_),Nr(e,{generation_config:"generation_config.json"},_)]);else if(p===Er)m=await Promise.all([Or(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},_)]);else if(p===br)m=await Promise.all([Or(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_)]);else if(p===Ar){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(t.model="encoder_model"),m=await Promise.all([Or(e,t,_),Nr(e,{generation_config:"generation_config.json"},_)])}else if(p===Pr){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};m=await Promise.all([Or(e,t,_),Nr(e,{generation_config:"generation_config.json"},_)])}else if(p===Cr)m=await Promise.all([Or(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},_),Nr(e,{generation_config:"generation_config.json"},_)]);else if(p===Tr)m=await Promise.all([Or(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},_),Nr(e,{generation_config:"generation_config.json"},_)]);else if(p===Fr)m=await Promise.all([Or(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},_),Nr(e,{generation_config:"generation_config.json"},_)]);else if(p===Sr)m=await Promise.all([Or(e,{encoder_model:"encoder_model",decoder_model:"decoder_model"},_)]);else{if(p!==xr){const e=h??s?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${Ba}.`)}m=await Promise.all([Or(e,{model:_.model_file_name??"model"},_)])}return new this(s,...m)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new Da;return null!==e.temperature&&1!==e.temperature&&t.push(new Qa(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new Ya(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new Za(e.top_p)),t}_get_logits_processor(e,t,s=null){const n=new Da;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&n.push(new Wa(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&n.push(new qa(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&n.push(new Ja(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&n.push(new Xa(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&n.push(new Ha(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&n.push(new ja(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&n.push(new Ua(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const s=t>1||null===e.forced_bos_token_id?t:t+1;n.push(new Ga(e.begin_suppress_tokens,s))}return null!==e.guidance_scale&&e.guidance_scale>1&&n.push(new Ka(e.guidance_scale)),null!==s&&n.extend(s),n}_prepare_generation_config(e,t,s=er){const n={...this.config};for(const e of["decoder","generator","text_config"])e in n&&Object.assign(n,n[e]);const a=new s(n);return Object.assign(a,this.generation_config??{}),e&&Object.assign(a,e),t&&Object.assign(a,O(t,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(e,t=null){const s=new ur;return null!==e.max_length&&s.push(new _r(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&s.push(new hr(e.eos_token_id)),t&&s.extend(t),s}_validate_model_class(){if(!this.can_generate){const e=[sm,om,tm,Kp],t=Lr.get(this.constructor),s=new Set,n=this.config.model_type;for(const t of e){const e=t.get(n);e&&s.add(e[0])}let a=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw s.size>0&&(a+=` Please use the following class instead: ${[...s].join(", ")}`),Error(a)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:s,is_encoder_decoder:n}){return s.past_key_values=this.getPastKeyValues(t,s.past_key_values),s.input_ids=new $e("int64",e.flat(),[e.length,1]),n||(s.attention_mask=Ze([s.attention_mask,ot([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:s}){const n=O(s,this.forward_params),a=this.main_input_name;if(a in n){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else n[a]=e;return{inputs_tensor:n[a],model_inputs:n,model_input_name:a}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:s,generation_config:n}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:s,attention_mask:n,...a}=t;t={...a,...O(await this._prepare_inputs_embeds(t),["inputs_embeds","attention_mask"])}}let{last_hidden_state:a}=await Gr(this,t);if(null!==n.guidance_scale&&n.guidance_scale>1)a=Ze([a,rt(a,0)],0),"attention_mask"in t&&(t.attention_mask=Ze([t.attention_mask,ct(t.attention_mask)],0));else if(t.decoder_input_ids){const e=Dr(t.decoder_input_ids).dims[0];if(e!==a.dims[0]){if(1!==a.dims[0])throw new Error(`The encoder outputs have a different batch size (${a.dims[0]}) than the decoder inputs (${e}).`);a=Ze(Array.from({length:e},(()=>a)),0)}}return t.encoder_outputs=a,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:s,decoder_start_token_id:n,bos_token_id:a,generation_config:r}){let{decoder_input_ids:o,...i}=s;if(!(o instanceof $e)){if(o)Array.isArray(o[0])||(o=Array.from({length:e},(()=>o)));else if(n??=a,"musicgen"===this.config.model_type)o=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[n]));else if(Array.isArray(n)){if(n.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${n.length}`);o=n}else o=Array.from({length:e},(()=>[n]));o=Dr(o)}return s.decoder_attention_mask=it(o),{input_ids:o,model_inputs:i}}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:n=null,streamer:a=null,...r}){this._validate_model_class(),t=this._prepare_generation_config(t,r);let{inputs_tensor:o,model_inputs:i,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:r});const c=this.config.is_encoder_decoder;let d;c&&("encoder_outputs"in i||(i=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:o,model_inputs:i,model_input_name:l,generation_config:t}))),c?({input_ids:d,model_inputs:i}=this._prepare_decoder_input_ids_for_generation({batch_size:i[l].dims.at(0),model_input_name:l,model_kwargs:i,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=i[l];let u=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=u+t.max_new_tokens);const _=this._get_logits_processor(t,u,s),h=this._get_stopping_criteria(t,n),p=i[l].dims.at(0),m=mr.getSampler(t),f=new Array(p).fill(0),g=d.tolist();let w;a&&a.put(g);let y={};for(;;){if(i=this.prepare_inputs_for_generation(g,i,t),w=await this.forward(i),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(w);for(const t in e)t in y||(y[t]=[]),y[t].push(e[t])}const e=_(g,w.logits.slice(null,-1,null)),s=[];for(let t=0;t<e.dims.at(0);++t){const n=e[t],a=await m(n);for(const[e,n]of a){const a=BigInt(e);f[t]+=n,g[t].push(a),s.push([a]);break}}a&&a.put(s);if(h(g).every((e=>e)))break;i=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:w,model_inputs:i,is_encoder_decoder:c})}a&&a.end();const x=this.getPastKeyValues(w,i.past_key_values,!0),b=new $e("int64",g.flat(),[g.length,g[0].length]);if(t.return_dict_in_generate)return{sequences:b,past_key_values:x,...y};for(const e of Object.values(w))"gpu-buffer"===e.location&&e.dispose();return b}getPastKeyValues(e,t,s=!1){const n=Object.create(null);for(const a in e)if(a.startsWith("present")){const r=a.replace("present","past_key_values"),o=a.includes("encoder");if(n[r]=o&&t?t[r]:e[a],t&&(!o||s)){const e=t[r];"gpu-buffer"===e.location&&e.dispose()}}return n}getAttentions(e){const t={};for(const s of["cross_attentions","encoder_attentions","decoder_attentions"])for(const n in e)n.startsWith(s)&&(s in t||(t[s]=[]),t[s].push(e[n]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,s=t?.config?.kv_cache_dtype??"float32",n="float16"===s?new Ne.float16:[],a=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,r=Ca(this.config,{batch_size:a});for(const t in r)e[t]=new $e(s,n,r[t])}}async encode_image({pixel_values:e}){const t=(await $r(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await $r(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}async encode_audio({audio_values:e}){return(await $r(this.sessions.audio_encoder,{audio_values:e})).audio_features}}class no{}class ao extends no{constructor({last_hidden_state:e,hidden_states:t=null,attentions:s=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=s}}class ro extends so{}class oo extends ro{}class io extends ro{async _call(e){return new hf(await super._call(e))}}class lo extends ro{async _call(e){return new df(await super._call(e))}}class co extends ro{async _call(e){return new _f(await super._call(e))}}class uo extends ro{async _call(e){return new pf(await super._call(e))}}class _o extends so{}class ho extends _o{}class po extends _o{async _call(e){return new hf(await super._call(e))}}class mo extends _o{async _call(e){return new df(await super._call(e))}}class fo extends _o{async _call(e){return new _f(await super._call(e))}}class go extends so{}class wo extends go{}class yo extends so{}class xo extends yo{}class bo extends yo{async _call(e){return new hf(await super._call(e))}}class ko extends yo{async _call(e){return new df(await super._call(e))}}class vo extends yo{async _call(e){return new _f(await super._call(e))}}class Mo extends yo{async _call(e){return new pf(await super._call(e))}}class Eo extends so{}class Ao extends Eo{}class Co extends Eo{async _call(e){return new hf(await super._call(e))}}class To extends Eo{async _call(e){return new df(await super._call(e))}}class Fo extends Eo{async _call(e){return new _f(await super._call(e))}}class Po extends Eo{async _call(e){return new pf(await super._call(e))}}class So extends so{}class zo extends So{}class Io extends So{async _call(e){return new hf(await super._call(e))}}class Lo extends So{async _call(e){return new df(await super._call(e))}}class Bo extends So{async _call(e){return new _f(await super._call(e))}}class Oo extends So{async _call(e){return new pf(await super._call(e))}}class No extends so{}class $o extends No{}class Vo extends No{async _call(e){return new hf(await super._call(e))}}class Do extends No{async _call(e){return new df(await super._call(e))}}class jo extends No{async _call(e){return new _f(await super._call(e))}}class Uo extends No{async _call(e){return new pf(await super._call(e))}}class Go extends so{}class Ro extends Go{}class qo extends Go{async _call(e){return new hf(await super._call(e))}}class Wo extends Go{async _call(e){return new df(await super._call(e))}}class Xo extends Go{async _call(e){return new _f(await super._call(e))}}class Ho extends Go{async _call(e){return new pf(await super._call(e))}}class Jo extends so{}class Ko extends Jo{}class Qo extends Jo{async _call(e){return new hf(await super._call(e))}}class Zo extends Jo{async _call(e){return new df(await super._call(e))}}class Yo extends Jo{async _call(e){return new _f(await super._call(e))}}class ei extends Jo{async _call(e){return new pf(await super._call(e))}}class ti extends so{}class si extends ti{}class ni extends ti{async _call(e){return new df(await super._call(e))}}class ai extends ti{async _call(e){return new _f(await super._call(e))}}class ri extends ti{async _call(e){return new pf(await super._call(e))}}class oi extends ti{async _call(e){return new hf(await super._call(e))}}class ii extends so{}class li extends ii{}class ci extends ii{async _call(e){return new hf(await super._call(e))}}class di extends ii{async _call(e){return new df(await super._call(e))}}class ui extends ii{async _call(e){return new _f(await super._call(e))}}class _i extends so{}class hi extends _i{}class pi extends _i{async _call(e){return new hf(await super._call(e))}}class mi extends _i{async _call(e){return new df(await super._call(e))}}class fi extends _i{async _call(e){return new pf(await super._call(e))}}class gi extends so{}class wi extends gi{}class yi extends gi{async _call(e){return new hf(await super._call(e))}}class xi extends gi{async _call(e){return new df(await super._call(e))}}class bi extends gi{async _call(e){return new _f(await super._call(e))}}class ki extends gi{async _call(e){return new pf(await super._call(e))}}class vi extends so{}class Mi extends vi{}class Ei extends vi{async _call(e){return new hf(await super._call(e))}}class Ai extends vi{async _call(e){return new df(await super._call(e))}}class Ci extends vi{async _call(e){return new pf(await super._call(e))}}class Ti extends so{}class Fi extends Ti{}class Pi extends Ti{async _call(e){return new df(await super._call(e))}}class Si extends Ti{async _call(e){return new pf(await super._call(e))}}class zi extends Ti{async _call(e){return new hf(await super._call(e))}}class Ii extends so{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Li extends Ii{}class Bi extends Ii{}class Oi extends so{}class Ni extends Oi{}class $i extends Oi{}class Vi extends so{}class Di extends Vi{}class ji extends Vi{}class Ui extends so{}class Gi extends Ui{}class Ri extends Ui{}class qi extends Ui{async _call(e){return new df(await super._call(e))}}class Wi extends so{}class Xi extends Wi{}class Hi extends Wi{}class Ji extends Wi{async _call(e){return new df(await super._call(e))}}class Ki extends Wi{}class Qi extends so{}class Zi extends Qi{}class Yi extends Qi{}class el extends so{}class tl extends el{}class sl extends el{}class nl extends so{}class al extends nl{}class rl extends nl{async _call(e){return new hf(await super._call(e))}}class ol extends nl{async _call(e){return new df(await super._call(e))}}class il extends nl{async _call(e){return new _f(await super._call(e))}}class ll extends nl{async _call(e){return new pf(await super._call(e))}}class cl extends so{}class dl extends cl{}class ul extends cl{async _call(e){return new hf(await super._call(e))}}class _l extends cl{async _call(e){return new df(await super._call(e))}}class hl extends cl{async _call(e){return new _f(await super._call(e))}}class pl extends cl{async _call(e){return new pf(await super._call(e))}}class ml extends so{}class fl extends ml{}class gl extends ml{async _call(e){return new hf(await super._call(e))}}class wl extends ml{async _call(e){return new df(await super._call(e))}}class yl extends ml{async _call(e){return new _f(await super._call(e))}}class xl extends ml{async _call(e){return new pf(await super._call(e))}}class bl extends so{}class kl extends bl{}class vl extends bl{}class Ml extends so{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class El extends Ml{}class Al extends Ml{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,yr)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let s=e.language;const n=e.task;if(e.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");const a=function(e){e=e.toLowerCase();let t=gs.get(e);if(void 0===t){const s=e.match(/^<\|([a-z]{2})\|>$/);if(s&&(e=s[1]),!fs.has(e)){const t=2===e.length?fs.keys():fs.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(Array.from(t))}`)}t=e}return t}(s),r=`<|${a}|>`;t.push(e.lang_to_id[r]),t.push(e.task_to_id[n??"transcribe"])}else if(s||n)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:n=null,...a}){t=this._prepare_generation_config(t,a);const r=a.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(s??=new Da,s.push(new Ra(t,r))),t.begin_suppress_tokens&&(s??=new Da,s.push(new Ga(t.begin_suppress_tokens,r.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const o=await super.generate({inputs:e,generation_config:t,logits_processor:s,decoder_input_ids:r,...a});return t.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,t.alignment_heads,t.num_frames)),o}_extract_token_timestamps(e,t,s=null,n=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);const r=e.cross_attentions,o=Array.from({length:this.config.decoder_layers},((e,t)=>Ze(r.map((e=>e[t])),2))),i=Ye(t.map((([e,t])=>{if(e>=o.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${o.length}).`);return s?o[e].slice(null,t,null,[0,s]):o[e].slice(null,t)}))).transpose(1,0,2,3),[l,c]=tt(i,-2,0,!0),d=i.clone();for(let e=0;e<d.dims[0];++e){const t=d[e];for(let s=0;s<t.dims[0];++s){const n=t[s],r=l[e][s][0].data,o=c[e][s][0].data;for(let e=0;e<n.dims[0];++e){let t=n[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-o[e])/r[e];t.set(de(t,a))}}}const u=[st(d,1)],_=e.sequences.dims,h=new $e("float32",new Float32Array(_[0]*_[1]),_);for(let e=0;e<_[0];++e){const t=u[e].neg().squeeze_(0),[s,a]=he(t.tolist()),r=z([1],Array.from({length:s.length-1},((e,t)=>s[t+1]-s[t]))).map((e=>!!e)),o=[];for(let e=0;e<r.length;++e)r[e]&&o.push(a[e]*n);h[e].data.set(o,1)}return h}}class Cl extends Al{}class Tl extends so{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class Fl extends Tl{}class Pl extends Tl{}class Sl extends so{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class zl extends so{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Il extends zl{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:s,attention_mask:n}){const a=this.config.image_token_index,r=s.tolist().map((e=>e.findIndex((e=>e==a)))),o=r.every((e=>-1===e)),i=r.every((e=>-1!==e));if(!o&&!i)throw new Error("Every input should contain either 0 or 1 image token.");if(o)return{inputs_embeds:e,attention_mask:n};const l=[],c=[];for(let s=0;s<r.length;++s){const a=r[s],o=e[s],i=t[s],d=n[s];l.push(Ze([o.slice([0,a]),i,o.slice([a+1,o.dims[0]])],0)),c.push(Ze([d.slice([0,a]),ot([i.dims[0]]),d.slice([a+1,d.dims[0]])],0))}return{inputs_embeds:Ye(l,0),attention_mask:Ye(c,0)}}}class Ll extends Il{}class Bl extends Il{}class Ol extends so{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Nl extends Ol{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:s,attention_mask:n}){return{inputs_embeds:Ze([t,e],1),attention_mask:Ze([ot(t.dims.slice(0,2)),n],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:s,attention_mask:n}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let a,r;return e&&(a=await this.encode_text({input_ids:e})),t&&(r=await this.encode_image({pixel_values:t})),a&&r?({inputs_embeds:s,attention_mask:n}=this._merge_input_ids_with_image_features({inputs_embeds:a,image_features:r,input_ids:e,attention_mask:n})):s=a||r,{inputs_embeds:s,attention_mask:n}}async forward({input_ids:e,pixel_values:t,attention_mask:s,decoder_input_ids:n,decoder_attention_mask:a,encoder_outputs:r,past_key_values:o,inputs_embeds:i,decoder_inputs_embeds:l}){if(i||({inputs_embeds:i,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:i,attention_mask:s})),!r){let{last_hidden_state:e}=await Gr(this,{inputs_embeds:i,attention_mask:s});r=e}if(!l){if(!n)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:n})}const c={inputs_embeds:l,attention_mask:a,encoder_attention_mask:s,encoder_hidden_states:r,past_key_values:o};return await qr(this,c,!0)}}class $l extends so{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Vl extends $l{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return Xr({image_token_id:this.config.image_token_index,...e,image_features:s})}}class Dl extends so{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class jl extends Dl{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await $r(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return Xr({image_token_id:this.config.image_token_id,...e,image_features:s})}}class Ul extends jl{}class Gl extends so{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class Rl extends Gl{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:s=null,image_sizes:n=null,position_ids:a=null,inputs_embeds:r=null,past_key_values:o=null,generation_config:i=null,logits_processor:l=null,...c}){if(!r){let t;if(s&&1!==e.dims[1]){if(!n)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await $r(this.sessions.vision_encoder,{pixel_values:s,image_sizes:n}))}else{const e=this.config.normalized_config.hidden_size;t=new $e("float32",[],[0,e])}({inputs_embeds:r}=await $r(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await qr(this,{inputs_embeds:r,past_key_values:o,attention_mask:t,position_ids:a,generation_config:i,logits_processor:l},!1)}}class ql extends so{}class Wl extends ql{}class Xl extends ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Hl extends ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Jl extends ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Kl extends ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Ql extends so{}class Zl extends Ql{}class Yl extends Ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class ec extends ql{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class tc extends so{}class sc extends tc{}class nc extends so{}class ac extends nc{async forward(e){const t=!e.input_ids,s=!e.pixel_values;if(t&&s)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=ot([e.pixel_values.dims[0],1])),s){const{image_size:t}=this.config.vision_config;e.pixel_values=at([0,3,t,t],0)}const{text_embeddings:n,image_embeddings:a,l2norm_text_embeddings:r,l2norm_image_embeddings:o}=await super.forward(e),i={};return t||(i.text_embeddings=n,i.l2norm_text_embeddings=r),s||(i.image_embeddings=a,i.l2norm_image_embeddings=o),i}}class rc extends nc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class oc extends nc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class ic extends so{}class lc extends ic{}class cc extends ic{}class dc extends so{}class uc extends dc{}class _c extends dc{}class hc extends so{}class pc extends hc{}class mc extends hc{}class fc extends so{}class gc extends fc{}class wc extends fc{}class yc extends so{}class xc extends yc{}class bc extends yc{}class kc extends so{}class vc extends kc{}class Mc extends kc{}class Ec extends so{}class Ac extends Ec{}class Cc extends Ec{}class Tc extends so{}class Fc extends Tc{}class Pc extends Tc{}class Sc extends so{}class zc extends Sc{}class Ic extends Sc{}class Lc extends so{}class Bc extends Lc{}class Oc extends Lc{}class Nc extends so{}class $c extends Nc{}class Vc extends Nc{}class Dc extends so{}class jc extends Dc{}class Uc extends Dc{}class Gc extends so{}class Rc extends Gc{}class qc extends Gc{}class Wc extends so{}class Xc extends Wc{}class Hc extends Wc{}class Jc extends so{}class Kc extends Jc{}class Qc extends Jc{}class Zc extends so{}class Yc extends Zc{}class ed extends Zc{}class td extends so{}class sd extends td{}class nd extends td{}class ad extends so{}class rd extends ad{}class od extends ad{}class id extends so{}class ld extends id{}class cd extends id{}class dd extends so{}class ud extends dd{}class _d extends dd{}class hd extends so{}class pd extends hd{}class md extends hd{}class fd extends so{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class gd extends fd{get_rope_index(e,t,s,n){const{vision_config:a,image_token_id:r,video_token_id:o,vision_start_token_id:i}=this.config,l=a.spatial_merge_size??2,c=[];if(t||s){let a=e.tolist();n||(n=it(e));const d=n.tolist(),u=Array.from({length:3},(t=>Array.from({length:e.dims[0]},(t=>Array.from({length:e.dims[1]},(e=>1)))))),_=t?t.tolist():[],h=s?s.tolist():[];let p=0,m=0;for(let e=0;e<a.length;++e){const t=a[e].filter(((t,s)=>1==d[e][s])),s=t.reduce(((e,t,s)=>(t==i&&e.push(s),e)),[]).map((e=>t[e+1])),n=s.filter((e=>e==r)).length,f=s.filter((e=>e==o)).length;let g=[],w=0,y=n,x=f;for(let e=0;e<s.length;++e){const e=t.findIndex(((e,t)=>t>w&&e==r)),s=t.findIndex(((e,t)=>t>w&&e==o)),n=y>0&&-1!==e?e:t.length+1,a=x>0&&-1!==s?s:t.length+1;let i,c,d,u;n<a?([c,d,u]=_[p],++p,--y,i=n):([c,d,u]=h[m],++m,--x,i=a);const[f,b,k]=[Number(c),Math.floor(Number(d)/l),Math.floor(Number(u)/l)],v=i-w,M=g.length>0?re(g.at(-1))[0]+1:0;g.push(Array.from({length:3*v},((e,t)=>M+t%v)));const E=v+M,A=f*b*k,C=Array.from({length:A},((e,t)=>E+Math.floor(t/(b*k)))),T=Array.from({length:A},((e,t)=>E+Math.floor(t/k)%b)),F=Array.from({length:A},((e,t)=>E+t%k));g.push([C,T,F].flat()),w=i+A}if(w<t.length){const e=g.length>0?re(g.at(-1))[0]+1:0,s=t.length-w;g.push(Array.from({length:3*s},((t,n)=>e+n%s)))}const b=g.reduce(((e,t)=>e+t.length),0),k=new Array(b);let v=0;for(let e=0;e<3;++e)for(let t=0;t<g.length;++t){const s=g[t],n=s.length/3;for(let t=e*n;t<(e+1)*n;++t)k[v++]=s[t]}let M=0;const E=d[e];for(let t=0;t<E.length;++t)if(1==E[t]){for(let s=0;s<3;++s)u[s][e][t]=k[s*b/3+M];++M}const A=re(k)[0];c.push(A+1-a[e].length)}return[new $e("int64",u.flat(1/0),[3,e.dims[0],e.dims[1]]),new $e("int64",c,[c.length,1])]}if(n){const{data:e,dims:t}=Qr(n),s=BigInt64Array.from({length:3*e.length},((t,s)=>e[s%e.length])),a=Array.from({length:t[0]},((s,n)=>re(e.subarray(t[1]*n,t[1]*(n+1)))[0]+1n+BigInt(t[1])));return[new $e("int64",s,[3,...t]),new $e("int64",a,[a.length,1])]}{const[t,s]=e.dims,n=BigInt64Array.from({length:3*t*s},((e,n)=>BigInt(Math.floor(n%s/t))));return[new $e("int64",n,[3,...e.dims]),lt([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await $r(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return Xr({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,s){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),s=t.rope_deltas.map((t=>e+t));t.position_ids=Ye([s,s,s],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class wd extends so{}class yd extends wd{}class xd extends wd{}class bd extends so{}class kd extends bd{}class vd extends bd{}class Md extends so{}class Ed extends Md{}class Ad extends Md{}class Cd extends so{}class Td extends Cd{}class Fd extends Cd{}class Pd extends so{}class Sd extends Pd{}class zd extends Pd{}class Id extends so{}class Ld extends Id{}class Bd extends Id{async _call(e){return new df(await super._call(e))}}class Od extends so{}class Nd extends Od{}class $d extends Od{async _call(e){return new df(await super._call(e))}}class Vd extends so{}class Dd extends Vd{}class jd extends so{}class Ud extends jd{}class Gd extends jd{async _call(e){return new df(await super._call(e))}}class Rd extends so{}class qd extends Rd{}class Wd extends so{}class Xd extends Wd{}class Hd extends Wd{async _call(e){return new df(await super._call(e))}}class Jd extends so{}class Kd extends Jd{}class Qd extends so{}class Zd extends Qd{}class Yd extends Qd{async _call(e){return new df(await super._call(e))}}class eu extends so{}class tu extends eu{async _call(e){return new gf(await super._call(e))}}class su extends so{}class nu extends su{}class au extends su{async _call(e){return new df(await super._call(e))}}class ru extends so{}class ou extends ru{}class iu extends ru{async _call(e){return new df(await super._call(e))}}class lu extends so{}class cu extends lu{}class du extends lu{}class uu extends so{}class _u extends uu{}class hu extends uu{}class pu extends so{}class mu extends pu{}class fu extends pu{async _call(e){return new df(await super._call(e))}}class gu extends so{}class wu extends gu{}class yu extends gu{async _call(e){return new bu(await super._call(e))}}class xu extends gu{async _call(e){return new ku(await super._call(e))}}class bu extends no{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ku extends no{constructor({logits:e,pred_boxes:t,pred_masks:s}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=s}}class vu extends so{}class Mu extends vu{}class Eu extends vu{async _call(e){return new Au(await super._call(e))}}class Au extends no{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Cu extends so{}class Tu extends Cu{}class Fu extends Cu{async _call(e){return new Pu(await super._call(e))}}class Pu extends bu{}class Su extends so{}class zu extends Su{}class Iu extends Su{async _call(e){return new df(await super._call(e))}}class Lu extends so{}class Bu extends Lu{}class Ou extends Lu{async _call(e){return new df(await super._call(e))}}class Nu extends so{}class $u extends Nu{}class Vu extends Nu{async _call(e){return new df(await super._call(e))}}class Du extends so{}class ju extends Du{}class Uu extends Du{async _call(e){return new df(await super._call(e))}}class Gu extends Du{}class Ru extends so{}class qu extends Ru{}class Wu extends Ru{}class Xu extends so{}class Hu extends Xu{}class Ju extends Xu{}class Ku extends so{}class Qu extends Ku{}class Zu extends so{}class Yu extends Zu{}class e_ extends Zu{}class t_ extends Zu{}class s_ extends so{}class n_ extends s_{}class a_ extends so{}class r_ extends a_{}class o_ extends a_{}class i_ extends so{}class l_ extends i_{}class c_ extends i_{}class d_ extends so{}class u_ extends d_{}class __ extends so{}class h_ extends __{}class p_ extends __{async _call(e){return new df(await super._call(e))}}class m_ extends so{}class f_ extends m_{}class g_ extends m_{async _call(e){return new df(await super._call(e))}}class w_ extends so{}class y_ extends w_{}class x_ extends w_{async _call(e){return new df(await super._call(e))}}class b_ extends so{}class k_ extends b_{}class v_ extends b_{async _call(e){return new df(await super._call(e))}}class M_ extends so{}class E_ extends M_{}class A_ extends so{}class C_ extends A_{}class T_ extends A_{async _call(e){return new F_(await super._call(e))}}class F_ extends no{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class P_ extends so{}class S_ extends P_{async get_image_embeddings({pixel_values:e}){return await Gr(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),s=t.reduce(((e,t)=>e*t),1);e.input_labels=new $e("int64",new BigInt64Array(s).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await $r(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new z_(await super._call(e))}}class z_ extends no{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class I_ extends so{}class L_ extends I_{}class B_ extends I_{}class O_ extends so{}class N_ extends O_{}class $_ extends O_{}class V_ extends so{}class D_ extends V_{}class j_ extends V_{async _call(e){return new mf(await super._call(e))}}class U_ extends V_{async _call(e){return new df(await super._call(e))}}class G_ extends V_{async _call(e){return new _f(await super._call(e))}}class R_ extends so{}class q_ extends R_{}class W_ extends R_{async _call(e){return new _f(await super._call(e))}}class X_ extends so{}class H_ extends X_{}class J_ extends so{}class K_ extends J_{}class Q_ extends J_{async _call(e){return new mf(await super._call(e))}}class Z_ extends J_{async _call(e){return new df(await super._call(e))}}class Y_ extends so{}class eh extends Y_{}class th extends Y_{async _call(e){return new mf(await super._call(e))}}class sh extends Y_{async _call(e){return new df(await super._call(e))}}class nh extends Y_{async _call(e){return new _f(await super._call(e))}}class ah extends so{}class rh extends ah{}class oh extends ah{async _call(e){return new mf(await super._call(e))}}class ih extends ah{async _call(e){return new df(await super._call(e))}}class lh extends so{}class ch extends V_{}class dh extends V_{async _call(e){return new mf(await super._call(e))}}class uh extends V_{async _call(e){return new df(await super._call(e))}}class _h extends so{}class hh extends _h{}class ph extends _h{async _call(e){return new mf(await super._call(e))}}class mh extends _h{async _call(e){return new df(await super._call(e))}}class fh extends _h{async _call(e){return new uf(await super._call(e))}}class gh extends _h{async _call(e){return new _f(await super._call(e))}}class wh extends so{}class yh extends wh{}class xh extends so{}class bh extends xh{}class kh extends xh{}class vh extends xh{async generate_speech(e,t,{threshold:s=.5,minlenratio:n=0,maxlenratio:a=20,vocoder:r=null}={}){const o={input_ids:e},{encoder_outputs:i,encoder_attention_mask:l}=await Gr(this,o),c=i.dims[1]/this.config.reduction_factor,d=Math.floor(c*a),u=Math.floor(c*n),_=this.config.num_mel_bins;let h=[],p=null,m=null,f=0;for(;;){++f;const e=jr(!!m);let n;n=m?m.output_sequence_out:new $e("float32",new Float32Array(_),[1,1,_]);let a={use_cache_branch:e,output_sequence:n,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:i};this.addPastKeyValues(a,p),m=await $r(this.sessions.decoder_model_merged,a),p=this.getPastKeyValues(m,p);const{prob:r,spectrum:o}=m;if(h.push(o),f>=u&&(Array.from(r.data).filter((e=>e>=s)).length>0||f>=d))break}const g=Ze(h),{waveform:w}=await $r(r.sessions.model,{spectrogram:g});return{spectrogram:g,waveform:w}}}class Mh extends so{main_input_name="spectrogram"}class Eh extends so{}class Ah extends Eh{}class Ch extends so{}class Th extends Ch{}class Fh extends Ch{}class Ph extends so{}class Sh extends Ph{}class zh extends Ph{}class Ih extends so{}class Lh extends Ih{}class Bh extends Ih{}class Oh extends so{}class Nh extends Oh{}class $h extends Oh{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Vh extends Oh{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class Dh extends so{}class jh extends Dh{async _call(e){return new wf(await super._call(e))}}class Uh extends so{}class Gh extends Uh{}class Rh extends Uh{}class qh extends Uh{}class Wh extends so{}class Xh extends Wh{}class Hh extends Wh{}class Jh extends so{}class Kh extends Jh{}class Qh extends Jh{async _call(e){return new df(await super._call(e))}}class Zh extends so{}class Yh extends Zh{}class ep extends Zh{}class tp extends so{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,s]=e.dims,n=this.config.decoder.num_codebooks,a=s-n;let r=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const o=t%s-Math.floor(t/s)%n;o>0&&o<=a&&(e.data[r++]=e.data[t])}const o=Math.floor(t/n),i=r/(o*n);return new $e(e.type,e.data.slice(0,r),[o,n,i])}prepare_inputs_for_generation(e,t,s){let n=structuredClone(e);for(let e=0;e<n.length;++e)for(let t=0;t<n[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(n[e][t]=BigInt(this.config.decoder.pad_token_id));null!==s.guidance_scale&&s.guidance_scale>1&&(n=n.concat(n));return super.prepare_inputs_for_generation(n,t,s)}async generate(e){const t=await super.generate(e),s=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:n}=await $r(this.sessions.encodec_decode,{audio_codes:s});return n}}class sp extends so{}class np extends sp{}class ap extends sp{async _call(e){return new df(await super._call(e))}}class rp extends sp{}class op extends so{}class ip extends op{}class lp extends op{async _call(e){return new df(await super._call(e))}}class cp extends op{}class dp extends so{}class up extends dp{}class _p extends dp{async _call(e){return new df(await super._call(e))}}class hp extends dp{}class pp extends so{}class mp extends pp{}class fp extends pp{async _call(e){return new df(await super._call(e))}}class gp extends pp{}class wp extends so{}class yp extends wp{}class xp extends so{}class bp extends xp{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let s;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,n=O({image_ids:e.input_ids},t.inputNames);s=await $r(t,n)}else{const t=this.sessions.prepare_inputs_embeds,n=O(e,t.inputNames);s=await $r(t,n)}const n={...e,...s},a=await qr(this,n),r=this.sessions["text"===t?"lm_head":"gen_head"];if(!r)throw new Error(`Unable to find "${r}" generation head`);const o=await $r(r,O(a,r.inputNames));return{...s,...a,...o}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],s=(await super.generate(e)).slice(null,[t,null]),n=this.sessions.image_decode,{decoded_image:a}=await $r(n,{generated_tokens:s}),r=a.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),o=[];for(const e of r){const t=lr.fromTensor(e);o.push(t)}return o}}class kp extends no{constructor({char_logits:e,bpe_logits:t,wp_logits:s}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class vp extends so{}class Mp extends vp{async _call(e){return new kp(await super._call(e))}}class Ep extends so{}class Ap extends Ep{}class Cp extends Ep{}class Tp extends so{}class Fp extends Tp{}class Pp extends Tp{}class Sp extends so{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class zp extends Sp{_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),s=e.audio_features.view(-1,t);return function({audio_token_id:e,inputs_embeds:t,audio_features:s,input_ids:n,attention_mask:a}){return Wr({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:n,attention_mask:a})}({audio_token_id:this.config.ignore_index,...e,audio_features:s})}}class Ip extends so{main_input_name="input_values";forward_params=["input_values"]}class Lp extends no{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Bp extends no{constructor({audio_values:e}){super(),this.audio_values=e}}class Op extends Ip{async encode(e){return new Lp(await $r(this.sessions.encoder_model,e))}async decode(e){return new Bp(await $r(this.sessions.decoder_model,e))}}class Np extends Ip{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class $p extends Ip{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Vp extends so{main_input_name="input_values";forward_params=["input_values"]}class Dp extends no{constructor({audio_codes:e}){super(),this.audio_codes=e}}class jp extends no{constructor({audio_values:e}){super(),this.audio_values=e}}class Up extends Vp{async encode(e){return new Dp(await $r(this.sessions.encoder_model,e))}async decode(e){return new jp(await $r(this.sessions.decoder_model,e))}}class Gp extends Vp{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Rp extends Vp{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class qp{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:n=null,local_files_only:a=!1,revision:r="main",model_file_name:o=null,subfolder:i="onnx",device:l=null,dtype:c=null,use_external_data_format:d=null,session_options:u={}}={}){const _={progress_callback:t,config:s,cache_dir:n,local_files_only:a,revision:r,model_file_name:o,subfolder:i,device:l,dtype:c,use_external_data_format:d,session_options:u};if(_.config=await Fa.from_pretrained(e,_),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const h=_.config.model_type;for(const t of this.MODEL_CLASS_MAPPINGS){let s=t.get(h);if(!s){for(const e of t.values())if(e[0]===h){s=e;break}if(!s)continue}return await s[1].from_pretrained(e,_)}if(this.BASE_IF_FAIL)return Pm.has(h)||console.warn(`Unknown model class "${h}", attempting to construct from base class.`),await so.from_pretrained(e,_);throw Error(`Unsupported model type: ${h}`)}}const Wp=new Map([["bert",["BertModel",oo]],["modernbert",["ModernBertModel",ho]],["nomic_bert",["NomicBertModel",wo]],["roformer",["RoFormerModel",xo]],["electra",["ElectraModel",zo]],["esm",["EsmModel",li]],["convbert",["ConvBertModel",Ao]],["camembert",["CamembertModel",$o]],["deberta",["DebertaModel",Ro]],["deberta-v2",["DebertaV2Model",Ko]],["mpnet",["MPNetModel",wi]],["albert",["AlbertModel",Fi]],["distilbert",["DistilBertModel",si]],["roberta",["RobertaModel",al]],["xlm",["XLMModel",dl]],["xlm-roberta",["XLMRobertaModel",fl]],["clap",["ClapModel",Nh]],["clip",["CLIPModel",Wl]],["clipseg",["CLIPSegModel",lc]],["chinese_clip",["ChineseCLIPModel",sc]],["siglip",["SiglipModel",Zl]],["jina_clip",["JinaCLIPModel",ac]],["mobilebert",["MobileBertModel",hi]],["squeezebert",["SqueezeBertModel",Mi]],["wav2vec2",["Wav2Vec2Model",D_]],["wav2vec2-bert",["Wav2Vec2BertModel",rh]],["unispeech",["UniSpeechModel",K_]],["unispeech-sat",["UniSpeechSatModel",eh]],["hubert",["HubertModel",ch]],["wavlm",["WavLMModel",hh]],["audio-spectrogram-transformer",["ASTModel",kl]],["vits",["VitsModel",jh]],["pyannote",["PyAnnoteModel",q_]],["wespeaker-resnet",["WeSpeakerResNetModel",H_]],["detr",["DetrModel",wu]],["rt_detr",["RTDetrModel",Mu]],["table-transformer",["TableTransformerModel",Tu]],["vit",["ViTModel",Ld]],["ijepa",["IJepaModel",Nd]],["pvt",["PvtModel",Ud]],["vit_msn",["ViTMSNModel",Xd]],["vit_mae",["ViTMAEModel",qd]],["groupvit",["GroupViTModel",Kd]],["fastvit",["FastViTModel",Zd]],["mobilevit",["MobileViTModel",nu]],["mobilevitv2",["MobileViTV2Model",ou]],["owlvit",["OwlViTModel",cu]],["owlv2",["Owlv2Model",_u]],["beit",["BeitModel",mu]],["deit",["DeiTModel",zu]],["hiera",["HieraModel",Bu]],["convnext",["ConvNextModel",h_]],["convnextv2",["ConvNextV2Model",f_]],["dinov2",["Dinov2Model",y_]],["dinov2_with_registers",["Dinov2WithRegistersModel",k_]],["resnet",["ResNetModel",$u]],["swin",["SwinModel",ju]],["swin2sr",["Swin2SRModel",qu]],["donut-swin",["DonutSwinModel",u_]],["yolos",["YolosModel",C_]],["dpt",["DPTModel",Hu]],["glpn",["GLPNModel",l_]],["hifigan",["SpeechT5HifiGan",Mh]],["efficientnet",["EfficientNetModel",Kh]],["decision_transformer",["DecisionTransformerModel",yp]],["patchtst",["PatchTSTForPrediction",Ap]],["patchtsmixer",["PatchTSMixerForPrediction",Fp]],["mobilenet_v1",["MobileNetV1Model",np]],["mobilenet_v2",["MobileNetV2Model",ip]],["mobilenet_v3",["MobileNetV3Model",up]],["mobilenet_v4",["MobileNetV4Model",mp]],["maskformer",["MaskFormerModel",r_]],["mgp-str",["MgpstrForSceneTextRecognition",Mp]],["style_text_to_speech_2",["StyleTextToSpeech2Model",yh]]]),Xp=new Map([["t5",["T5Model",Li]],["longt5",["LongT5Model",Ni]],["mt5",["MT5Model",Di]],["bart",["BartModel",Gi]],["mbart",["MBartModel",Xi]],["marian",["MarianModel",L_]],["whisper",["WhisperModel",El]],["m2m_100",["M2M100Model",N_]],["blenderbot",["BlenderbotModel",Zi]],["blenderbot-small",["BlenderbotSmallModel",tl]]]),Hp=new Map([["mimi",["MimiModel",Op]],["dac",["DacModel",Up]]]),Jp=new Map([["bloom",["BloomModel",Ed]],["jais",["JAISModel",pc]],["gpt2",["GPT2Model",uc]],["gptj",["GPTJModel",vc]],["gpt_bigcode",["GPTBigCodeModel",Ac]],["gpt_neo",["GPTNeoModel",gc]],["gpt_neox",["GPTNeoXModel",xc]],["codegen",["CodeGenModel",Fc]],["llama",["LlamaModel",zc]],["exaone",["ExaoneModel",jc]],["olmo",["OlmoModel",Xc]],["olmo2",["Olmo2Model",Kc]],["mobilellm",["MobileLLMModel",Rc]],["granite",["GraniteModel",Yc]],["cohere",["CohereModel",sd]],["gemma",["GemmaModel",rd]],["gemma2",["Gemma2Model",ld]],["helium",["HeliumModel",Bc]],["glm",["GlmModel",$c]],["openelm",["OpenELMModel",ud]],["qwen2",["Qwen2Model",pd]],["phi",["PhiModel",yd]],["phi3",["Phi3Model",kd]],["mpt",["MptModel",Td]],["opt",["OPTModel",Sd]],["mistral",["MistralModel",Th]],["starcoder2",["Starcoder2Model",Sh]],["falcon",["FalconModel",Lh]],["stablelm",["StableLmModel",Xh]]]),Kp=new Map([["speecht5",["SpeechT5ForSpeechToText",kh]],["whisper",["WhisperForConditionalGeneration",Al]],["lite-whisper",["LiteWhisperForConditionalGeneration",Cl]],["moonshine",["MoonshineForConditionalGeneration",Pl]]]),Qp=new Map([["speecht5",["SpeechT5ForTextToSpeech",vh]]]),Zp=new Map([["vits",["VitsModel",jh]],["musicgen",["MusicgenForConditionalGeneration",tp]]]),Yp=new Map([["bert",["BertForSequenceClassification",lo]],["modernbert",["ModernBertForSequenceClassification",mo]],["roformer",["RoFormerForSequenceClassification",ko]],["electra",["ElectraForSequenceClassification",Lo]],["esm",["EsmForSequenceClassification",di]],["convbert",["ConvBertForSequenceClassification",To]],["camembert",["CamembertForSequenceClassification",Do]],["deberta",["DebertaForSequenceClassification",Wo]],["deberta-v2",["DebertaV2ForSequenceClassification",Zo]],["mpnet",["MPNetForSequenceClassification",xi]],["albert",["AlbertForSequenceClassification",Pi]],["distilbert",["DistilBertForSequenceClassification",ni]],["roberta",["RobertaForSequenceClassification",ol]],["xlm",["XLMForSequenceClassification",_l]],["xlm-roberta",["XLMRobertaForSequenceClassification",wl]],["bart",["BartForSequenceClassification",qi]],["mbart",["MBartForSequenceClassification",Ji]],["mobilebert",["MobileBertForSequenceClassification",mi]],["squeezebert",["SqueezeBertForSequenceClassification",Ai]]]),em=new Map([["bert",["BertForTokenClassification",co]],["modernbert",["ModernBertForTokenClassification",fo]],["roformer",["RoFormerForTokenClassification",vo]],["electra",["ElectraForTokenClassification",Bo]],["esm",["EsmForTokenClassification",ui]],["convbert",["ConvBertForTokenClassification",Fo]],["camembert",["CamembertForTokenClassification",jo]],["deberta",["DebertaForTokenClassification",Xo]],["deberta-v2",["DebertaV2ForTokenClassification",Yo]],["mpnet",["MPNetForTokenClassification",bi]],["distilbert",["DistilBertForTokenClassification",ai]],["roberta",["RobertaForTokenClassification",il]],["xlm",["XLMForTokenClassification",hl]],["xlm-roberta",["XLMRobertaForTokenClassification",yl]]]),tm=new Map([["t5",["T5ForConditionalGeneration",Bi]],["longt5",["LongT5ForConditionalGeneration",$i]],["mt5",["MT5ForConditionalGeneration",ji]],["bart",["BartForConditionalGeneration",Ri]],["mbart",["MBartForConditionalGeneration",Hi]],["marian",["MarianMTModel",B_]],["m2m_100",["M2M100ForConditionalGeneration",$_]],["blenderbot",["BlenderbotForConditionalGeneration",Yi]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",sl]]]),sm=new Map([["bloom",["BloomForCausalLM",Ad]],["gpt2",["GPT2LMHeadModel",_c]],["jais",["JAISLMHeadModel",mc]],["gptj",["GPTJForCausalLM",Mc]],["gpt_bigcode",["GPTBigCodeForCausalLM",Cc]],["gpt_neo",["GPTNeoForCausalLM",wc]],["gpt_neox",["GPTNeoXForCausalLM",bc]],["codegen",["CodeGenForCausalLM",Pc]],["llama",["LlamaForCausalLM",Ic]],["exaone",["ExaoneForCausalLM",Uc]],["olmo",["OlmoForCausalLM",Hc]],["olmo2",["Olmo2ForCausalLM",Qc]],["mobilellm",["MobileLLMForCausalLM",qc]],["granite",["GraniteForCausalLM",ed]],["cohere",["CohereForCausalLM",nd]],["gemma",["GemmaForCausalLM",od]],["gemma2",["Gemma2ForCausalLM",cd]],["helium",["HeliumForCausalLM",Oc]],["glm",["GlmForCausalLM",Vc]],["openelm",["OpenELMForCausalLM",_d]],["qwen2",["Qwen2ForCausalLM",md]],["phi",["PhiForCausalLM",xd]],["phi3",["Phi3ForCausalLM",vd]],["mpt",["MptForCausalLM",Fd]],["opt",["OPTForCausalLM",zd]],["mbart",["MBartForCausalLM",Ki]],["mistral",["MistralForCausalLM",Fh]],["starcoder2",["Starcoder2ForCausalLM",zh]],["falcon",["FalconForCausalLM",Bh]],["trocr",["TrOCRForCausalLM",Ah]],["stablelm",["StableLmForCausalLM",Hh]],["phi3_v",["Phi3VForCausalLM",Rl]]]),nm=new Map([["multi_modality",["MultiModalityCausalLM",bp]]]),am=new Map([["bert",["BertForMaskedLM",io]],["modernbert",["ModernBertForMaskedLM",po]],["roformer",["RoFormerForMaskedLM",bo]],["electra",["ElectraForMaskedLM",Io]],["esm",["EsmForMaskedLM",ci]],["convbert",["ConvBertForMaskedLM",Co]],["camembert",["CamembertForMaskedLM",Vo]],["deberta",["DebertaForMaskedLM",qo]],["deberta-v2",["DebertaV2ForMaskedLM",Qo]],["mpnet",["MPNetForMaskedLM",yi]],["albert",["AlbertForMaskedLM",zi]],["distilbert",["DistilBertForMaskedLM",oi]],["roberta",["RobertaForMaskedLM",rl]],["xlm",["XLMWithLMHeadModel",ul]],["xlm-roberta",["XLMRobertaForMaskedLM",gl]],["mobilebert",["MobileBertForMaskedLM",pi]],["squeezebert",["SqueezeBertForMaskedLM",Ei]]]),rm=new Map([["bert",["BertForQuestionAnswering",uo]],["roformer",["RoFormerForQuestionAnswering",Mo]],["electra",["ElectraForQuestionAnswering",Oo]],["convbert",["ConvBertForQuestionAnswering",Po]],["camembert",["CamembertForQuestionAnswering",Uo]],["deberta",["DebertaForQuestionAnswering",Ho]],["deberta-v2",["DebertaV2ForQuestionAnswering",ei]],["mpnet",["MPNetForQuestionAnswering",ki]],["albert",["AlbertForQuestionAnswering",Si]],["distilbert",["DistilBertForQuestionAnswering",ri]],["roberta",["RobertaForQuestionAnswering",ll]],["xlm",["XLMForQuestionAnswering",pl]],["xlm-roberta",["XLMRobertaForQuestionAnswering",xl]],["mobilebert",["MobileBertForQuestionAnswering",fi]],["squeezebert",["SqueezeBertForQuestionAnswering",Ci]]]),om=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Sl]],["idefics3",["Idefics3ForConditionalGeneration",jl]],["smolvlm",["SmolVLMForConditionalGeneration",Ul]]]),im=new Map([["llava",["LlavaForConditionalGeneration",Il]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ll]],["moondream1",["Moondream1ForConditionalGeneration",Bl]],["florence2",["Florence2ForConditionalGeneration",Nl]],["qwen2-vl",["Qwen2VLForConditionalGeneration",gd]],["idefics3",["Idefics3ForConditionalGeneration",jl]],["smolvlm",["SmolVLMForConditionalGeneration",Ul]],["paligemma",["PaliGemmaForConditionalGeneration",Vl]]]),lm=new Map([["ultravox",["UltravoxModel",zp]]]),cm=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Sl]]]),dm=new Map([["vit",["ViTForImageClassification",Bd]],["ijepa",["IJepaForImageClassification",$d]],["pvt",["PvtForImageClassification",Gd]],["vit_msn",["ViTMSNForImageClassification",Hd]],["fastvit",["FastViTForImageClassification",Yd]],["mobilevit",["MobileViTForImageClassification",au]],["mobilevitv2",["MobileViTV2ForImageClassification",iu]],["beit",["BeitForImageClassification",fu]],["deit",["DeiTForImageClassification",Iu]],["hiera",["HieraForImageClassification",Ou]],["convnext",["ConvNextForImageClassification",p_]],["convnextv2",["ConvNextV2ForImageClassification",g_]],["dinov2",["Dinov2ForImageClassification",x_]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",v_]],["resnet",["ResNetForImageClassification",Vu]],["swin",["SwinForImageClassification",Uu]],["segformer",["SegformerForImageClassification",Rh]],["efficientnet",["EfficientNetForImageClassification",Qh]],["mobilenet_v1",["MobileNetV1ForImageClassification",ap]],["mobilenet_v2",["MobileNetV2ForImageClassification",lp]],["mobilenet_v3",["MobileNetV3ForImageClassification",_p]],["mobilenet_v4",["MobileNetV4ForImageClassification",fp]]]),um=new Map([["detr",["DetrForObjectDetection",yu]],["rt_detr",["RTDetrForObjectDetection",Eu]],["table-transformer",["TableTransformerForObjectDetection",Fu]],["yolos",["YolosForObjectDetection",T_]]]),_m=new Map([["owlvit",["OwlViTForObjectDetection",du]],["owlv2",["Owlv2ForObjectDetection",hu]],["grounding-dino",["GroundingDinoForObjectDetection",E_]]]),hm=new Map([["detr",["DetrForSegmentation",xu]],["clipseg",["CLIPSegForImageSegmentation",cc]]]),pm=new Map([["segformer",["SegformerForSemanticSegmentation",qh]],["sapiens",["SapiensForSemanticSegmentation",Yu]],["swin",["SwinForSemanticSegmentation",Gu]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",rp]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",cp]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",hp]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",gp]]]),mm=new Map([["detr",["DetrForSegmentation",xu]],["maskformer",["MaskFormerForInstanceSegmentation",o_]]]),fm=new Map([["sam",["SamModel",S_]]]),gm=new Map([["wav2vec2",["Wav2Vec2ForCTC",j_]],["wav2vec2-bert",["Wav2Vec2BertForCTC",oh]],["unispeech",["UniSpeechForCTC",Q_]],["unispeech-sat",["UniSpeechSatForCTC",th]],["wavlm",["WavLMForCTC",ph]],["hubert",["HubertForCTC",dh]]]),wm=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",U_]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",ih]],["unispeech",["UniSpeechForSequenceClassification",Z_]],["unispeech-sat",["UniSpeechSatForSequenceClassification",sh]],["wavlm",["WavLMForSequenceClassification",mh]],["hubert",["HubertForSequenceClassification",uh]],["audio-spectrogram-transformer",["ASTForAudioClassification",vl]]]),ym=new Map([["wavlm",["WavLMForXVector",fh]]]),xm=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",nh]],["wavlm",["WavLMForAudioFrameClassification",gh]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",G_]],["pyannote",["PyAnnoteForAudioFrameClassification",W_]]]),bm=new Map([["vitmatte",["VitMatteForImageMatting",tu]]]),km=new Map([["patchtst",["PatchTSTForPrediction",Cp]],["patchtsmixer",["PatchTSMixerForPrediction",Pp]]]),vm=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Wu]]]),Mm=new Map([["dpt",["DPTForDepthEstimation",Ju]],["depth_anything",["DepthAnythingForDepthEstimation",Qu]],["glpn",["GLPNForDepthEstimation",c_]],["sapiens",["SapiensForDepthEstimation",e_]],["depth_pro",["DepthProForDepthEstimation",n_]]]),Em=new Map([["sapiens",["SapiensForNormalEstimation",t_]]]),Am=new Map([["vitpose",["VitPoseForPoseEstimation",Dd]]]),Cm=new Map([["clip",["CLIPVisionModelWithProjection",Kl]],["siglip",["SiglipVisionModel",ec]],["jina_clip",["JinaCLIPVisionModel",oc]]]),Tm=[[Wp,xr],[Xp,br],[Jp,Mr],[Hp,Sr],[Yp,xr],[em,xr],[tm,kr],[Kp,kr],[sm,Mr],[nm,Tr],[am,xr],[rm,xr],[om,vr],[im,Ar],[lm,Pr],[dm,xr],[hm,xr],[mm,xr],[pm,xr],[bm,xr],[km,xr],[vm,xr],[Mm,xr],[Em,xr],[Am,xr],[um,xr],[_m,xr],[fm,Er],[gm,xr],[wm,xr],[Qp,kr],[Zp,xr],[ym,xr],[xm,xr],[Cm,xr]];for(const[e,t]of Tm)for(const[s,n]of e.values())zr.set(s,t),Lr.set(n,s),Ir.set(s,n);const Fm=[["MusicgenForConditionalGeneration",tp,Cr],["Phi3VForCausalLM",Rl,Fr],["CLIPTextModelWithProjection",Hl,xr],["SiglipTextModel",Yl,xr],["JinaCLIPTextModel",rc,xr],["ClapTextModelWithProjection",$h,xr],["ClapAudioModelWithProjection",Vh,xr],["DacEncoderModel",Gp,xr],["DacDecoderModel",Rp,xr],["MimiEncoderModel",Np,xr],["MimiDecoderModel",$p,xr]];for(const[e,t,s]of Fm)zr.set(e,s),Lr.set(t,e),Ir.set(e,t);const Pm=new Map([["modnet",hm],["birefnet",hm],["isnet",hm],["ben",hm]]);for(const[e,t]of Pm.entries())t.set(e,["PreTrainedModel",so]),zr.set(e,xr),Lr.set(so,e),Ir.set(e,so);class Sm extends qp{static MODEL_CLASS_MAPPINGS=Tm.map((e=>e[0]));static BASE_IF_FAIL=!0}class zm extends qp{static MODEL_CLASS_MAPPINGS=[Yp]}class Im extends qp{static MODEL_CLASS_MAPPINGS=[em]}class Lm extends qp{static MODEL_CLASS_MAPPINGS=[tm]}class Bm extends qp{static MODEL_CLASS_MAPPINGS=[Kp]}class Om extends qp{static MODEL_CLASS_MAPPINGS=[Qp]}class Nm extends qp{static MODEL_CLASS_MAPPINGS=[Zp]}class $m extends qp{static MODEL_CLASS_MAPPINGS=[sm]}class Vm extends qp{static MODEL_CLASS_MAPPINGS=[am]}class Dm extends qp{static MODEL_CLASS_MAPPINGS=[rm]}class jm extends qp{static MODEL_CLASS_MAPPINGS=[om]}class Um extends qp{static MODEL_CLASS_MAPPINGS=[dm]}class Gm extends qp{static MODEL_CLASS_MAPPINGS=[hm]}class Rm extends qp{static MODEL_CLASS_MAPPINGS=[pm]}class qm extends qp{static MODEL_CLASS_MAPPINGS=[mm]}class Wm extends qp{static MODEL_CLASS_MAPPINGS=[um]}class Xm extends qp{static MODEL_CLASS_MAPPINGS=[_m]}class Hm extends qp{static MODEL_CLASS_MAPPINGS=[fm]}class Jm extends qp{static MODEL_CLASS_MAPPINGS=[gm]}class Km extends qp{static MODEL_CLASS_MAPPINGS=[wm]}class Qm extends qp{static MODEL_CLASS_MAPPINGS=[ym]}class Zm extends qp{static MODEL_CLASS_MAPPINGS=[xm]}class Ym extends qp{static MODEL_CLASS_MAPPINGS=[cm]}class ef extends qp{static MODEL_CLASS_MAPPINGS=[bm]}class tf extends qp{static MODEL_CLASS_MAPPINGS=[vm]}class sf extends qp{static MODEL_CLASS_MAPPINGS=[Mm]}class nf extends qp{static MODEL_CLASS_MAPPINGS=[Em]}class af extends qp{static MODEL_CLASS_MAPPINGS=[Am]}class rf extends qp{static MODEL_CLASS_MAPPINGS=[Cm]}class of extends qp{static MODEL_CLASS_MAPPINGS=[im]}class lf extends qp{static MODEL_CLASS_MAPPINGS=[lm]}class cf extends no{constructor({logits:e,past_key_values:t,encoder_outputs:s,decoder_attentions:n=null,cross_attentions:a=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=s,this.decoder_attentions=n,this.cross_attentions=a}}class df extends no{constructor({logits:e,...t}){super(),this.logits=e;const s=Object.values(t);s.length>0&&(this.attentions=s)}}class uf extends no{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class _f extends no{constructor({logits:e}){super(),this.logits=e}}class hf extends no{constructor({logits:e}){super(),this.logits=e}}class pf extends no{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class mf extends no{constructor({logits:e}){super(),this.logits=e}}class ff extends no{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class gf extends no{constructor({alphas:e}){super(),this.alphas=e}}class wf extends no{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}class yf extends C{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(e,t){super(),this.config=e,this.components=t}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t){const[s,n]=await Promise.all([this.uses_processor_config?J(e,"processor_config.json",!0,t):{},Promise.all(this.classes.filter((e=>e in this)).map((async s=>{const n=await this[s].from_pretrained(e,t);return[s.replace(/_class$/,""),n]}))).then(Object.fromEntries)]);return new this(s,n)}}function xf(e,t,s=0,n=null){const a=e/t;let r=_e(a)*t;return null!==n&&r>n&&(r=Math.floor(a)*t),r<s&&(r=Math.ceil(a)*t),r}function bf([e,t],s){return[Math.max(Math.floor(e/s),1)*s,Math.max(Math.floor(t/s),1)*s]}function kf([e,t,s,n]){return[e-s/2,t-n/2,e+s/2,t+n/2]}function vf(e,t=.5,s=null,n=!1){const a=e.logits,r=e.pred_boxes,[o,i,l]=a.dims;if(null!==s&&s.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let e=0;e<o;++e){let o=null!==s?s[e]:null,d={boxes:[],classes:[],scores:[]},u=a[e],_=r[e];for(let e=0;e<i;++e){let s,a=u[e],r=[];if(n){s=a.sigmoid().data;for(let e=0;e<s.length;++e)s[e]>t&&r.push(e)}else{let e=re(a.data)[1];if(e===l-1)continue;if(s=Y(a.data),s[e]<t)continue;r.push(e)}for(const t of r){let n=_[e].data;n=kf(n),null!==o&&(n=n.map(((e,t)=>e*o[(t+1)%2]))),d.boxes.push(n),d.classes.push(t),d.scores.push(s[t])}}c.push(d)}return c}function Mf(e,t,s,n){const a=[],r=[],o=[];for(let i=0;i<e.dims[0];++i){const l=e[i],c=t[i],d=re(l.data)[1];if(d===n)continue;const u=Y(l.data)[d];u>s&&(a.push(c),r.push(u),o.push(d))}return[a,r,o]}function Ef(e,t,s,n=.5,a=.8){const r=[];let o=0,i=0;const l=t[s].data;for(let t=0;t<e.length;++t)e[t]===s&&(r.push(t),++o),l[t]>=n&&++i;let c=o>0&&i>0;if(c){c=o/i>a}return[c,r]}function Af(e,t,s,n,a,r=null,o=null){const[i,l]=o??e[0].dims,c=new $e("int32",new Int32Array(i*l),[i,l]),d=[];if(null!==o)for(let t=0;t<e.length;++t)e[t]=De(e[t],o,"bilinear",!1);const u=new Int32Array(e[0].data.length),_=new Float32Array(e[0].data.length);for(let s=0;s<e.length;++s){let n=t[s];const a=e[s].data;for(let e=0;e<a.length;++e)a[e]*=n,a[e]>_[e]&&(u[e]=s,_[e]=a[e])}let h=0;const p=c.data;for(let r=0;r<s.length;++r){const o=s[r],[i,l]=Ef(u,e,r,n,a);if(i){++h;for(const e of l)p[e]=h;d.push({id:h,label_id:o,score:t[r]})}}return[c,d]}function Cf(e,t=.5,s=.5,n=.8,a=null,r=null){null===a&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),a=new Set);const o=e.class_queries_logits??e.logits,i=(e.masks_queries_logits??e.pred_masks).sigmoid();let[l,c,d]=o.dims;if(d-=1,null!==r&&r.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let e=0;e<l;++e){let l=null!==r?r[e]:null,c=o[e],_=i[e],[h,p,m]=Mf(c,_,t,d);if(0===m.length){let[e,t]=l??_.dims.slice(-2),s=new $e("int32",new Int32Array(e*t).fill(-1),[e,t]);u.push({segmentation:s,segments_info:[]});continue}let[f,g]=Af(h,p,m,s,n,a,l);u.push({segmentation:f,segments_info:g})}return u}function Tf(e,t=.5,s=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class Ff extends C{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,s=2){const n=e.height,a=e.width,r=t.height,o=t.width;let i=Math.min(n,r),l=Math.min(a,o);return i===n&&l===a?e:(n>a?l=Math.floor(a*i/n):a>n&&(i=Math.floor(n*l/a)),await e.resize(l,i,{resample:s}))}async crop_margin(e,t=200){const s=e.clone().grayscale(),n=ae(s.data)[0],a=re(s.data)[0]-n;if(0===a)return e;const r=t/255;let o=s.width,i=s.height,l=0,c=0;const d=s.data;for(let e=0;e<s.height;++e){const t=e*s.width;for(let u=0;u<s.width;++u)(d[t+u]-n)/a<r&&(o=Math.min(o,u),i=Math.min(i,e),l=Math.max(l,u),c=Math.max(c,e))}return e=await e.crop([o,i,l,c])}pad_image(e,t,s,{mode:n="constant",center:a=!1,constant_values:r=0}={}){const[o,i,l]=t;let c,d;if("number"==typeof s?(c=s,d=s):"square"===s?c=d=Math.max(o,i):(c=s.width,d=s.height),c!==i||d!==o){const s=new Float32Array(c*d*l);if(Array.isArray(r))for(let e=0;e<s.length;++e)s[e]=r[e%l];else 0!==r&&s.fill(r);const[u,_]=a?[Math.floor((c-i)/2),Math.floor((d-o)/2)]:[0,0];for(let t=0;t<o;++t){const n=(t+_)*c,a=t*i;for(let t=0;t<i;++t){const r=(n+t+u)*l,o=(a+t)*l;for(let t=0;t<l;++t)s[r+t]=e[o+t]}}if("symmetric"===n){if(a)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=o-1,n=i-1;for(let a=0;a<d;++a){const r=a*c,d=L(a,t)*i;for(let t=0;t<c;++t){if(a<o&&t<i)continue;const c=(r+t)*l,u=(d+L(t,n))*l;for(let t=0;t<l;++t)s[c+t]=e[u+t]}}}e=s,t=[d,c,l]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[s,n]=e.size;let a,r;if(this.do_thumbnail){const{height:e,width:s}=t;a=Math.min(e,s)}else Number.isInteger(t)?(a=t,r=this.config.max_size??a):void 0!==t&&(a=t.shortest_edge,r=t.longest_edge);if(void 0!==a||void 0!==r){const e=void 0===a?1:Math.max(a/s,a/n),t=s*e,o=n*e,i=void 0===r?1:Math.min(r/t,r/o);let l=Math.floor(Number((t*i).toFixed(2))),c=Math.floor(Number((o*i).toFixed(2)));return void 0!==this.size_divisibility&&([l,c]=bf([l,c],this.size_divisibility)),[l,c]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,a=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=a/n,r=e/s;Math.abs(1-r)<Math.abs(1-t)?t=r:r=t,a=xf(t*n,this.config.ensure_multiple_of),e=xf(r*s,this.config.ensure_multiple_of)}return[e,a]}if(void 0!==this.size_divisibility)return bf([s,n],this.size_divisibility);if(void 0!==t.min_pixels&&void 0!==t.max_pixels){const{min_pixels:e,max_pixels:a}=t;return function(e,t,s=28,n=3136,a=1003520){if(e<s||t<s)throw new Error(`height:${e} or width:${t} must be larger than factor:${s}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let r=Math.round(e/s)*s,o=Math.round(t/s)*s;if(r*o>a){const n=Math.sqrt(e*t/a);r=Math.floor(e/n/s)*s,o=Math.floor(t/n/s)*s}else if(r*o<n){const a=Math.sqrt(n/(e*t));r=Math.ceil(e*a/s)*s,o=Math.ceil(t*a/s)*s}return[r,o]}(n,s,this.config.patch_size*this.config.merge_size,e,a)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,s]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,s,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:s=null,do_convert_rgb:n=null,do_convert_grayscale:a=null,do_flip_channel_order:r=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[o,i]=e.size;if(n??this.do_convert_rgb?e=e.rgb():a&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,s;Number.isInteger(this.crop_size)?(t=this.crop_size,s=this.crop_size):(t=this.crop_size.width,s=this.crop_size.height),e=await e.center_crop(t,s)}const l=[e.height,e.width];let c=Float32Array.from(e.data),d=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(c),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let s=this.image_std;if(Array.isArray(this.image_std)||(s=new Array(e.channels).fill(t)),t.length!==e.channels||s.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${e.channels}).`);for(let n=0;n<c.length;n+=e.channels)for(let a=0;a<e.channels;++a)c[n+a]=(c[n+a]-t[a])/s[a]}if(s??this.do_pad)if(this.pad_size){const t=this.pad_image(c,[e.height,e.width,e.channels],this.pad_size);[c,d]=t}else if(this.size_divisibility){const[e,t]=bf([d[1],d[0]],this.size_divisibility);[c,d]=this.pad_image(c,d,{width:e,height:t})}if(r??this.do_flip_channel_order){if(3!==d[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<c.length;e+=3){const t=c[e];c[e]=c[e+2],c[e+2]=t}}return{original_size:[i,o],reshaped_input_size:l,pixel_values:new $e("float32",c,d).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const s=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:Ye(s.map((e=>e.pixel_values)),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}static async from_pretrained(e,t){return new this(await J(e,Na,!0,t))}}class Pf extends Ff{}class Sf extends Ff{}class zf extends Ff{}class If extends Ff{}class Lf extends If{}class Bf extends Ff{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const s=Math.floor(t/this.crop_pct),[n,a]=this.get_resize_output_image_size(e,{shortest_edge:s});e=await e.resize(n,a,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class Of extends Bf{}class Nf extends Ff{}class $f extends Nf{}class Vf extends Ff{async _call(e){const t=await super._call(e),s=at([t.pixel_values.dims[0],64,64],1n);return{...t,pixel_mask:s}}post_process_object_detection(...e){return vf(...e)}post_process_panoptic_segmentation(...e){return Cf(...e)}post_process_instance_segmentation(...e){return Tf(...e)}}class Df extends Vf{}class jf extends Ff{pad_image(e,t,s,n={}){const[a,r,o]=t;let i=this.image_mean;Array.isArray(this.image_mean)||(i=new Array(o).fill(i));let l=this.image_std;Array.isArray(l)||(l=new Array(o).fill(i));const c=i.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,s,{center:!0,constant_values:c,...n})}}class Uf extends jf{}class Gf extends Ff{}class Rf extends Gf{}class qf extends Ff{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}class Wf extends Ff{}class Xf extends Ff{async _call(e){const t=await super._call(e),s=t.pixel_values.dims,n=ot([s[0],s[2],s[3]]);return{...t,pixel_mask:n}}}class Hf extends Ff{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[s,n]=e.dims.slice(-2);const a=n/s;return n>=s?(n=Math.ceil(n/t)*t,s=Math.floor(n/a),s=Math.ceil(s/t)*t):(s=Math.ceil(s/t)*t,n=Math.floor(s*a),n=Math.ceil(n/t)*t),{height:s,width:n}}async _call(e,{do_image_splitting:t=null,return_row_col_info:s=!1}={}){let n;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");n=Array.isArray(e[0])?e:[e]}else n=[[e]];let a=[],r=[],o=[];const i=[],l=[];for(const e of n){let s=await Promise.all(e.map((e=>this.preprocess(e))));i.push(...s.map((e=>e.original_size))),l.push(...s.map((e=>e.reshaped_input_size))),s.forEach((e=>e.pixel_values.unsqueeze_(0)));const{longest_edge:n}=this.max_image_size;let c;if(t??this.do_image_splitting){let e=new Array(s.length),t=new Array(s.length);c=await Promise.all(s.map((async(s,a)=>{const r=this.get_resize_for_vision_encoder(s.pixel_values,n),o=await je(s.pixel_values,{size:[r.height,r.width]}),{frames:i,num_splits_h:l,num_splits_w:c}=await this.split_image(o,this.max_image_size);return e[a]=l,t[a]=c,Ze(i,0)}))),r.push(e),o.push(t)}else{const e=[n,n];c=await Promise.all(s.map((t=>je(t.pixel_values,{size:e})))),r.push(new Array(s.length).fill(0)),o.push(new Array(s.length).fill(0))}a.push(Ze(c,0))}const c=a.length,[d,u,_,h]=a[0].dims;let p,m;if(1===c)p=a[0].unsqueeze_(0),m=at([c,d,_,h],!0);else{const e=Math.max(...a.map((e=>e.dims.at(0))));m=at([c,e,_,h],!0);const t=m.data,s=e*_*h;for(let n=0;n<c;++n){const r=a[n].dims[0];if(r<e){a[n]=Ze([a[n],at([e-r,u,_,h],0)],0);const o=n*s+r*_*h,i=(n+1)*s;t.fill(!1,o,i)}}p=Ye(a,0)}return{pixel_values:p,pixel_attention_mask:m,original_sizes:i,reshaped_input_sizes:l,...s?{rows:r,cols:o}:{}}}async split_image(e,{longest_edge:t}){const s=t,n=t,a=[],[r,o]=e.dims.slice(-2);let i=0,l=0;if(r>s||o>n){i=Math.ceil(r/s),l=Math.ceil(o/n);const t=Math.ceil(r/i),c=Math.ceil(o/l);for(let s=0;s<i;++s)for(let n=0;n<l;++n){let d,u,_,h;s===i-1?(u=r-t,h=r):(u=s*t,h=(s+1)*t),n===l-1?(d=o-c,_=o):(d=n*c,_=(n+1)*c);const p=[u,d],m=[h,_],f=await We(e,p,m,[2,3]);a.push(f)}const d=s,u=n;r===d&&o===u||(e=await je(e,{size:[d,u]}))}return a.push(e),{frames:a,num_splits_h:i,num_splits_w:l}}}class Jf extends Ff{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map((e=>e*this.rescale_factor))}pad_image(e,t,s,n){return super.pad_image(e,t,s,{constant_values:this.constant_values,center:!0,...n})}}class Kf extends Ff{constructor(e){const{resize_mode:t,fill_color:s,interpolation:n,size:a,...r}=e;super({...r,size:"squash"===t?{width:a,height:a}:"shortest"===t?{shortest_edge:a}:{longest_edge:a},resample:"bicubic"===n?3:2,do_center_crop:!0,crop_size:a,do_normalize:!0})}}class Qf extends Ff{}class Zf extends Ff{post_process_panoptic_segmentation(...e){return Cf(...e)}post_process_instance_segmentation(...e){return Tf(...e)}}class Yf extends Zf{}class eg extends Zf{}class tg extends Ff{}class sg extends tg{}class ng extends Ff{}class ag extends ng{}class rg extends Ff{}class og extends rg{}class ig extends Ff{}class lg extends ig{}class cg extends Ff{}class dg extends cg{}class ug extends jf{}class _g extends Ff{post_process_object_detection(...e){return vf(...e)}}class hg extends _g{}class pg extends _g{}const mg=336,fg=[2,3],{ceil:gg,floor:wg,sqrt:yg}=Math;class xg extends Ff{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:s}=this.config;return wg((wg(t/mg)*wg(e/mg)+1)*s+1+(wg(t/mg)+1)*yg(s))}get_resize_output_image_size(e,t){const s=this._num_crops,[n,a]=e.size;let r=n/a,o=1;for(;o*Math.ceil(o/r)<=s;)o+=1;o-=1;const i=Math.floor(336*o);return[i,Math.floor(i/r)]}pad_image(e,t,s,n={}){const[a,r]=t,o=mg*gg(a/mg),i=mg*gg(r/mg),l=[1,1,1].map(((e,t)=>(e-this.image_mean[t])/this.image_std[t]));return super.pad_image(e,t,{width:i,height:o},{center:!0,constant_values:l,...n})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??=this.config.num_crops,t<4||yg(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const s=e.length,n=await Promise.all(e.map((e=>this.preprocess(e)))),a=n.map((e=>e.original_size)),r=n.map((e=>e.reshaped_input_size)),o=[];for(const{pixel_values:e}of n){e.unsqueeze_(0);const[s,n]=e.dims.slice(-2),a=await je(e,{size:[mg,mg],mode:"bicubic"});if(t>0){const r=[],i=yg(t),l=wg(n/i),c=wg(s/i);for(let t=0;t<i;++t)for(let a=0;a<i;++a){let o,d,u,_;t===i-1?(d=s-c,_=s):(d=t*c,_=(t+1)*c),a===i-1?(o=n-l,u=n):(o=a*l,u=(a+1)*l);const h=[d,o],p=[_,u],m=await We(e,h,p,fg);r.push(m)}const d=await je(Ze(r,0),{size:[mg,mg],mode:"bicubic"});o.push(Ze([a,d],0))}else o.push(a)}const i=Ye(o,0),l=r.map((e=>e.map((e=>mg*gg(e/mg)))));return{pixel_values:i,original_sizes:a,reshaped_input_sizes:r,image_sizes:new $e("int64",l.flat(),[s,2]),num_img_tokens:l.map((([e,t])=>this.calc_num_image_tokens_from_image_size(t,e)))}}}class bg extends Ff{}class kg extends Ff{async _call(e,...t){const{pixel_values:s,original_sizes:n,reshaped_input_sizes:a}=await super._call(e,...t);let r=s;const{temporal_patch_size:o,merge_size:i,patch_size:l}=this.config;1===r.dims[0]&&(r=Ze(Array.from({length:o},(()=>r)),0));const c=r.dims[0]/o,d=r.dims[1],u=Math.floor(r.dims[2]/l),_=Math.floor(r.dims[3]/l);return{pixel_values:r.view(c,o,d,Math.floor(u/i),i,l,Math.floor(_/i),i,l).permute(0,3,6,4,7,2,1,5,8).view(c*u*_,d*o*l*l),image_grid_thw:new $e("int64",[c,u,_],[1,3]),original_sizes:n,reshaped_input_sizes:a}}}class vg extends Ff{post_process_object_detection(...e){return vf(...e)}}class Mg extends Ff{reshape_input_points(e,t,s,n=!1){let a=S(e=structuredClone(e));if(3===a.length)n||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let n=0;n<e.length;++n){let a=t[n],r=s[n],o=[r[0]/a[0],r[1]/a[1]];for(let t=0;t<e[n].length;++t)for(let s=0;s<e[n][t].length;++s)for(let a=0;a<e[n][t][s].length;++a)e[n][t][s][a]*=o[a%2]}return new $e("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let s=S(e);if(2===s.length)s=[1,...s],e=[e];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some(((e,s)=>e!==t.dims[s])))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new $e("int64",e.flat(1/0).map(BigInt),s)}async _call(e,{input_points:t=null,input_labels:s=null,input_boxes:n=null}={}){const a=await super._call(e);if(t&&(a.input_points=this.reshape_input_points(t,a.original_sizes,a.reshaped_input_sizes)),s){if(!a.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");a.input_labels=this.add_input_labels(s,a.input_points)}return n&&(a.input_boxes=this.reshape_input_points(n,a.original_sizes,a.reshaped_input_sizes,!0)),a}async post_process_masks(e,t,s,{mask_threshold:n=0,binarize:a=!0,pad_size:r=null}={}){const o=[],i=[(r=r??this.pad_size).height,r.width];for(let r=0;r<t.length;++r){const l=t[r],c=s[r];let d=await je(e[r],{mode:"bilinear",size:i});if(d=d.slice(null,null,[0,c[0]],[0,c[1]]),d=await je(d,{mode:"bilinear",size:l}),a){const e=d.data,t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)e[s]>n&&(t[s]=1);d=new $e("bool",t,d.dims)}o.push(d)}return o}generate_crop_boxes(e,t,{crop_n_layers:s=0,overlap_ratio:n=512/1500,points_per_crop:a=32,crop_n_points_downscale_factor:r=1}={}){}}class Eg extends Ff{post_process_semantic_segmentation(...e){return function(e,t=null){const s=e.logits,n=s.dims[0];if(null!==t&&t.length!==n)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const a=[];for(let e=0;e<n;++e){const n=null!==t?t[e]:null;let r=s[e];null!==n&&(r=De(r,n,"bilinear",!1));const[o,i]=n??r.dims.slice(-2),l=new $e("int32",new Int32Array(o*i),[o,i]),c=r[0].data,d=l.data;for(let e=1;e<r.dims[0];++e){const t=r[e].data;for(let s=0;s<t.length;++s)t[s]>c[s]&&(c[s]=t[s],d[s]=e)}const u=new Array(r.dims[0]);for(let e=0;e<d.length;++e){const t=d[e];u[t]=t}const _=u.filter((e=>void 0!==e));a.push({segmentation:l,labels:_})}return a}(...e)}}class Ag extends Eg{}class Cg extends Ff{}class Tg extends Ff{pad_image(e,t,s,n={}){const[a,r,o]=t;return super.pad_image(e,t,{width:r+(s-r%s)%s,height:a+(s-a%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...n})}}class Fg extends Ff{}class Pg extends Fg{}class Sg extends Ff{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const s=await Promise.all(e.map((e=>this.preprocess(e)))),n=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:Ye(s.map(((e,t)=>Ze([e.pixel_values,n[t].pixel_values],0))),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}}class zg extends Ff{post_process_pose_estimation(e,t,{threshold:s=null}={}){const n=e.tolist(),[a,r,o,i]=e.dims,l=[];for(let e=0;e<a;++e){const a=n[e],r=t[e],c=[];for(let e=0;e<r.length;++e){const t=r[e],n=[],l=[],d=[],u=t.at(-2)/i,_=t.at(-1)/o;for(let e=0;e<a.length;++e){let[t,r]=[0,0],o=0,i=-1/0;const c=a[e];for(let e=0;e<c.length;++e){const s=c[e];for(let n=0;n<s.length;++n){const a=s[n];o+=a,i=Math.max(i,a),t+=(n+.5)*a,r+=e*a}}if(null!=s&&i<s)continue;const h=[u*t/o,_*r/o];n.push(h),d.push(e),l.push(i)}c.push({bbox:t,scores:l,labels:d,keypoints:n})}l.push(c)}return l}}class Ig extends Ff{post_process_object_detection(...e){return vf(...e)}}class Lg extends Ig{}class Bg{static async from_pretrained(e,t={}){const s=await J(e,Na,!0,t),n=s.image_processor_type??s.feature_extractor_type;let a=r[n];return a||(void 0!==n&&console.warn(`Image processor type '${n}' not found, assuming base ImageProcessor. Please report this at ${Ba}.`),a=Ff),new a(s)}}class Og extends yf{static tokenizer_class=Ea;static image_processor_class=Bg;constructor(e,t){super(e,t);const{tasks_answer_post_processing_type:s,task_prompts_without_inputs:n,task_prompts_with_input:a}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(n??{})),this.task_prompts_with_input=new Map(Object.entries(a??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const s of e)if(this.task_prompts_without_inputs.has(s))t.push(this.task_prompts_without_inputs.get(s));else{for(const[e,n]of this.task_prompts_with_input)if(s.includes(e)){t.push(n.replaceAll("{input}",s).replaceAll(e,""));break}t.length!==e.length&&t.push(s)}return t}post_process_generation(e,t,s){const n=this.tasks_answer_post_processing_type.get(t)??"pure_text";let a;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),n){case"pure_text":a=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const r="ocr"===n?"quad_boxes":"bboxes",o=e.matchAll(this.regexes[r]),i=[],l=[];for(const[e,t,...n]of o)i.push(t?t.trim():i.at(-1)??""),l.push(n.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*s[t%2])));a={labels:i,[r]:l};break;default:throw new Error(`Task "${t}" (of type "${n}") not yet implemented.`)}return{[t]:a}}async _call(e,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,s),...t?this.tokenizer(t,s):{}}}}function Ng(e,t){const s=e.dims.at(-1)-1,n=e.tolist();n.fill(!1,0,1),n.fill(!1,s);const a=t.tolist();return n.map(((e,t)=>e?t:null)).filter((e=>null!==e)).map((e=>a[e]))}class $g extends yf{static tokenizer_class=Ea;static image_processor_class=Bg;async _call(e,t,s={}){const n=e?await this.image_processor(e,s):{};return{...t?this.tokenizer(t,s):{},...n}}post_process_grounded_object_detection(e,t,{box_threshold:s=.25,text_threshold:n=.25,target_sizes:a=null}={}){const{logits:r,pred_boxes:o}=e,i=r.dims[0];if(null!==a&&a.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const l=r.dims.at(1),c=r.sigmoid(),d=c.max(-1).tolist(),u=o.tolist().map((e=>e.map((e=>kf(e))))),_=[];for(let e=0;e<i;++e){const r=null!==a?a[e]:null;null!==r&&(u[e]=u[e].map((e=>e.map(((e,t)=>e*r[(t+1)%2])))));const o=d[e],i=[],h=[],p=[];for(let a=0;a<l;++a){const r=o[a];if(r<=s)continue;const l=u[e][a],d=c[e][a];i.push(r),p.push(l);const _=Ng(d.gt(n),t[e]);h.push(_)}_.push({scores:i,boxes:p,labels:this.batch_decode(h)})}return _}}function Vg(e,t,s,n,a,r){return 0===e&&0===t?function(e,t,s,n){return`${t}${n}`+s.repeat(e)+`${t}`}(s,n,a,r):function(e,t,s,n,a,r){let o="";for(let r=0;r<t;++r){for(let t=0;t<s;++t)o+=n+`<row_${r+1}_col_${t+1}>`+a.repeat(e);o+="\n"}return o+=`\n${n}${r}`+a.repeat(e)+`${n}`,o}(s,e,t,n,a,r)}class Dg extends yf{static image_processor_class=Bg;static tokenizer_class=Ea;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,s={}){let n;s.return_row_col_info??=!0,t&&(n=await this.image_processor(t,s)),Array.isArray(e)||(e=[e]);const a=n.rows??[new Array(e.length).fill(0)],r=n.cols??[new Array(e.length).fill(0)],o=this.config.image_seq_len,i=[],l=[];for(let t=0;t<e.length;++t){const s=e[t],n=a[t],c=r[t];i.push($(s,this.image_token));const d=n.map(((e,t)=>Vg(e,c[t],o,this.fake_image_token,this.image_token,this.global_img_token))),u=s.split(this.image_token);if(0===u.length)throw new Error("The image token should be present in the text.");let _=u[0];for(let e=0;e<d.length;++e)_+=d[e]+u[e+1];l.push(_)}return{...this.tokenizer(l),...n}}}class jg extends yf{static image_processor_class=Bg;static tokenizer_class=Ea;static uses_processor_config=!0;constructor(e,t){super(e,t),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:s="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter((e=>e.images)).flatMap((e=>e.images)).map((e=>lr.read(e))));const n=this.tokenizer,a=e=>n.encode(e,{add_special_tokens:!1}),r=n.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:s}).split(this.image_tag),o=r.length-1;if(t.length!==o)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${o})`);const[i,l,c]=n.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let d=a(r[0]),u=new Array(d.length).fill(!1);for(let e=1;e<r.length;++e){const t=new Array(this.num_image_tokens).fill(i),s=a(r[e]);d=z(d,[l],t,[c],s);u=z(u,[!1],new Array(this.num_image_tokens).fill(!0),[!1],new Array(s.length).fill(!1))}const _=[1,d.length],h={input_ids:new $e("int64",d,_),attention_mask:new $e("int64",new Array(d.length).fill(1),_),images_seq_mask:new $e("bool",u,_),images_emb_mask:new $e("bool",new Array(o*this.num_image_tokens).fill(!0),[1,o,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{...h,...e}}return h}}class Ug extends yf{static tokenizer_class=Ea;static image_processor_class=Bg;async _call(e=null,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,s):{},...t?await this.image_processor(t,s):{}}}}const Gg={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class Rg extends yf{static tokenizer_class=Ea;static image_processor_class=Bg;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!Gg.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[s,n]=Gg[t],a=this[s].bind(this),[r,o]=e.dims,i=[],l=[],c=e.tolist();for(let e=0;e<r;++e){const t=c[e],s=[],a=[];for(let e=1;e<o;++e){const[r,o]=re(Y(t[e]));if(a.push(r),o==n)break;s.push(o)}const r=a.length>0?a.reduce(((e,t)=>e*t),1):0;l.push(s),i.push(r)}return[a(l),i]}char_decode(e){return this.char_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}batch_decode([e,t,s]){const[n,a]=this._decode_helper(e,"char"),[r,o]=this._decode_helper(t,"bpe"),[i,l]=this._decode_helper(s,"wp"),c=[],d=[];for(let e=0;e<n.length;++e){const[t,s]=re([a[e],o[e],l[e]]);c.push([n[e],r[e],i[e]][s]),d.push(t)}return{generated_text:c,scores:d,char_preds:n,bpe_preds:r,wp_preds:i}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),s=await Ea.from_pretrained("Xenova/gpt2"),n=await Ea.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:s,wp_tokenizer:n},t}async _call(e,t=null){const s=await this.image_processor(e);return t&&(s.labels=this.tokenizer(t).input_ids),s}}class qg extends C{constructor(e){super(),this.config=e}static async from_pretrained(e,t){return new this(await J(e,Oa,!0,t))}}function Wg(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}async function Xg(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const s=await(await q(e)).arrayBuffer(),n=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);const a=await n.decodeAudioData(s);let r;if(2===a.numberOfChannels){const e=Math.sqrt(2),t=a.getChannelData(0),s=a.getChannelData(1);r=new Float32Array(t.length);for(let n=0;n<a.length;++n)r[n]=e*(t[n]+s[n])/2}else r=a.getChannelData(0);return r}function Hg(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const s=1-t,n=2*Math.PI/(e-1),a=new Float64Array(e);for(let r=0;r<e;++r)a[r]=t-s*Math.cos(r*n);return a}function Jg(e){return Hg(e,.5)}function Kg(e){return Hg(e,.54)}const Qg={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,s=15,n=27/Math.log(6.4))=>e>=t?s+Math.log(e/t)*n:3*e/200};function Zg(e,t="htk"){const s=Qg[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}const Yg={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,s=15,n=Math.log(6.4)/27)=>e>=s?t*Math.exp(n*(e-s)):200*e/3};function ew(e,t,s){const n=(t-e)/(s-1);return Float64Array.from({length:s},((t,s)=>e+n*s))}function tw(e,t,s,n,a,r=null,o="htk",i=!1){if(null!==r&&"slaney"!==r)throw new Error('norm must be one of null or "slaney"');const l=ew(Zg(s,o),Zg(n,o),t+2);let c,d=function(e,t="htk"){const s=Yg[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}(l,o);if(i){const t=a/(2*e);c=Zg(Float64Array.from({length:e},((e,s)=>s*t)),o),d=l}else c=ew(0,Math.floor(a/2),e);const u=function(e,t){const s=Float64Array.from({length:t.length-1},((e,s)=>t[s+1]-t[s])),n=Array.from({length:e.length},(()=>new Array(t.length)));for(let s=0;s<e.length;++s){const a=n[s];for(let n=0;n<t.length;++n)a[n]=t[n]-e[s]}const a=t.length-2,r=Array.from({length:a},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=n[t];for(let n=0;n<a;++n){const a=-e[n]/s[n],o=e[n+2]/s[n+1];r[n][t]=Math.max(0,Math.min(a,o))}}return r}(c,d);if(null!==r&&"slaney"===r)for(let s=0;s<t;++s){const t=u[s],n=2/(d[s+2]-d[s]);for(let s=0;s<e;++s)t[s]*=n}return u}function sw(e,t,s,n,a){if(s<=0)throw new Error("reference must be greater than zero");if(n<=0)throw new Error("min_value must be greater than zero");s=Math.max(n,s);const r=Math.log10(s);for(let s=0;s<e.length;++s)e[s]=t*Math.log10(Math.max(n,e[s])-r);if(null!==a){if(a<=0)throw new Error("db_range must be greater than zero");const t=re(e)[0]-a;for(let s=0;s<e.length;++s)e[s]=Math.max(e[s],t)}return e}async function nw(e,t,s,n,{fft_length:a=null,power:r=1,center:o=!0,pad_mode:i="reflect",onesided:l=!0,preemphasis:c=null,mel_filters:d=null,mel_floor:u=1e-10,log_mel:_=null,reference:h=1,min_value:p=1e-10,db_range:m=null,remove_dc_offset:f=null,min_num_frames:g=null,max_num_frames:w=null,do_pad:y=!0,transpose:x=!1}={}){const b=t.length;if(null===a&&(a=s),s>a)throw Error(`frame_length (${s}) may not be larger than fft_length (${a})`);if(b!==s)throw new Error(`Length of the window (${b}) must equal frame_length (${s})`);if(n<=0)throw new Error("hop_length must be greater than zero");if(null===r&&null!==d)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(o){if("reflect"!==i)throw new Error(`pad_mode="${i}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,s){const n=new e.constructor(e.length+t+s),a=e.length-1;for(let s=0;s<e.length;++s)n[t+s]=e[s];for(let s=1;s<=t;++s)n[t-s]=e[L(s,a)];for(let r=1;r<=s;++r)n[a+t+r]=e[L(a-r,a)];return n}(e,t,t)}let k=Math.floor(1+Math.floor((e.length-s)/n));null!==g&&k<g&&(k=g);const v=l?Math.floor(a/2)+1:a;let M=k,E=k;null!==w&&(w>k?y&&(E=w):E=M=w);const A=new ce(a),C=new Float64Array(a),T=new Float64Array(A.outputBufferSize),F=new Float32Array(v*E);for(let a=0;a<M;++a){const r=a*n,o=Math.min(e.length-r,s);o!==s&&C.fill(0,0,s);for(let t=0;t<o;++t)C[t]=e[r+t];if(f){let e=0;for(let t=0;t<o;++t)e+=C[t];const t=e/o;for(let e=0;e<o;++e)C[e]-=t}if(null!==c){for(let e=o-1;e>=1;--e)C[e]-=c*C[e-1];C[0]*=1-c}for(let e=0;e<t.length;++e)C[e]*=t[e];A.realTransform(T,C);for(let e=0;e<v;++e){const t=e<<1;F[e*E+a]=T[t]**2+T[t+1]**2}}if(null!==r&&2!==r){const e=2/r;for(let t=0;t<F.length;++t)F[t]**=e}const P=d.length;let S=await Ue(new $e("float32",d.flat(),[P,v]),new $e("float32",F,[v,E]));x&&(S=S.transpose(1,0));const z=S.data;for(let e=0;e<z.length;++e)z[e]=Math.max(u,z[e]);if(null!==r&&null!==_){const e=Math.min(z.length,M*P);switch(_){case"log":for(let t=0;t<e;++t)z[t]=Math.log(z[t]);break;case"log10":for(let t=0;t<e;++t)z[t]=Math.log10(z[t]);break;case"dB":if(1===r)!function(e,t=1,s=1e-5,n=null){sw(e,20,t,s,n)}(z,h,p,m);else{if(2!==r)throw new Error(`Cannot use log_mel option '${_}' with power ${r}`);!function(e,t=1,s=1e-10,n=null){sw(e,10,t,s,n)}(z,h,p,m)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return S}function aw(e,t,{periodic:s=!0,frame_length:n=null,center:a=!0}={}){const r=s?e+1:e;let o;switch(t){case"boxcar":o=new Float64Array(r).fill(1);break;case"hann":case"hann_window":o=Jg(r);break;case"hamming":o=Kg(r);break;case"povey":o=Jg(r).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(s&&(o=o.subarray(0,e)),null===n)return o;if(e>n)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${n})`);return o}function rw(e,t,s){for(let n=0;n<s.length;++n)e.setUint8(t+n,s.charCodeAt(n))}class ow{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let s=44;const n=new ArrayBuffer(s+4*e.length),a=new DataView(n);rw(a,0,"RIFF"),a.setUint32(4,36+4*e.length,!0),rw(a,8,"WAVE"),rw(a,12,"fmt "),a.setUint32(16,16,!0),a.setUint16(20,3,!0),a.setUint16(22,1,!0),a.setUint32(24,t,!0),a.setUint32(28,4*t,!0),a.setUint16(32,4,!0),a.setUint16(34,32,!0),rw(a,36,"data"),a.setUint32(40,4*e.length,!0);for(let t=0;t<e.length;++t,s+=4)a.setFloat32(s,e[t],!0);return n}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(x.IS_BROWSER_ENV){if(x.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=B}else{if(!x.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let s=await t.arrayBuffer();V.writeFileSync(e,Buffer.from(s))}}await t(e,this.toBlob())}}class iw extends qg{constructor(e){super(e);const t=this.config.sampling_rate,s=tw(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=aw(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return nw(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){Wg(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,s=t.data;for(let t=0;t<s.length;++t)s[t]=(s[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}class lw extends qg{async _call(e){Wg(e,"EncodecFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=this.config.feature_size;if(e.length%t!=0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${t}).`);const s=[1,t,e.length/t];return{input_values:new $e("float32",e,s)}}}class cw extends qg{constructor(e){super(e),this.mel_filters=tw(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=tw(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=aw(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,s,n){let a,r=!1;const o=e.length-t;if(o>0){if("rand_trunc"!==s)throw new Error(`Truncation strategy "${s}" not implemented`);{r=!0;const s=Math.floor(Math.random()*(o+1));e=e.subarray(s,s+t),a=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(o<0){let s=new Float64Array(t);if(s.set(e),"repeat"===n)for(let n=e.length;n<t;n+=e.length)s.set(e.subarray(0,Math.min(e.length,t-n)),n);else if("repeatpad"===n)for(let t=e.length;t<-o;t+=e.length)s.set(e,t);e=s}if("fusion"===s)throw new Error(`Truncation strategy "${s}" not implemented`);a=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return a.unsqueeze_(0)}async _extract_fbank_features(e,t,s=null){return nw(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){Wg(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class dw extends lw{}class uw extends qg{async _call(e){Wg(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new $e("float32",e,t)}}}class _w extends qg{async _call(e){Wg(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new $e("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const s=t/this.samples_to_frames(t)/this.config.sampling_rate,n=[];for(const t of e.tolist()){const e=[];let a=-1;for(let s=0;s<t.length;++s){const n=Y(t[s]),[r,o]=re(n),[i,l]=[s,s+1];o!==a?(a=o,e.push({id:o,start:i,end:l,score:r})):(e.at(-1).end=l,e.at(-1).score+=r)}n.push(e.map((({id:e,start:t,end:n,score:a})=>({id:e,start:t*s,end:n*s,confidence:a/(n-t)}))))}return n}}class hw extends qg{constructor(e){super(e);const t=this.config.sampling_rate,s=tw(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=aw(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return nw(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:n=!0,return_attention_mask:a=!0}={}){Wg(e,"SeamlessM4TFeatureExtractor");let r,o=await this._extract_fbank_features(e,this.config.max_length);if(n){const[e,t]=o.dims,s=o.data;for(let n=0;n<t;++n){let a=0;for(let r=0;r<e;++r)a+=s[r*t+n];const r=a/e;let o=0;for(let a=0;a<e;++a)o+=(s[a*t+n]-r)**2;o/=e-1;const i=Math.sqrt(o+1e-7);for(let a=0;a<e;++a){const e=a*t+n;s[e]=(s[e]-r)/i}}}if(t){const[e,t]=o.dims,n=o.data,i=e%s;if(i>0){const s=new Float32Array(t*(e+i));s.set(n),s.fill(this.config.padding_value,n.length);const l=e+i;o=new $e(o.type,s,[l,t]),a&&(r=new $e("int64",new BigInt64Array(l),[1,l]),r.data.fill(1n,0,e))}}const[i,l]=o.dims,c=this.config.stride;if(0!==i%c)throw new Error(`The number of frames (${i}) must be a multiple of the stride (${c}).`);const d=o.view(1,Math.floor(i/c),l*c),u={input_features:d};if(a){const e=d.dims[1],t=new BigInt64Array(e);if(r){const e=r.data;for(let s=1,n=0;s<i;s+=c,++n)t[n]=e[s]}else t.fill(1n);u.attention_mask=new $e("int64",t,[1,e])}return u}}class pw extends qg{}class mw extends qg{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,s=e.reduce(((e,s)=>e+(s-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(s+1e-7)))}async _call(e){Wg(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const s=[1,t.length];return{input_values:new $e("float32",t,s),attention_mask:new $e("int64",new BigInt64Array(t.length).fill(1n),s)}}}class fw extends qg{constructor(e){super(e);const t=this.config.sampling_rate,s=tw(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=aw(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return nw(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){Wg(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,s=t.data,[n,a,r]=t.dims;for(let t=0;t<n;++t){const n=t*a*r,o=t*r;for(let t=0;t<a;++t){const a=n+t*r;for(let t=0;t<r;++t)s[a+t]-=e[o+t]}}}return{input_features:t}}}class gw extends qg{constructor(e){super(e),this.config.mel_filters??=tw(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=aw(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await nw(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(e.length/this.config.hop_length),this.config.nb_max_frames)}),s=t.data,n=re(s)[0];for(let e=0;e<s.length;++e)s[e]=(Math.max(s[e],n-8)+4)/4;return t}async _call(e,{max_length:t=null}={}){let s;Wg(e,"WhisperFeatureExtractor");const n=t??this.config.n_samples;e.length>n?(e.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),s=e.slice(0,n)):(s=new Float32Array(n),s.set(e));return{input_features:(await this._extract_fbank_features(s)).unsqueeze_(0)}}}class ww{static async from_pretrained(e,t={}){const s=await J(e,Oa,!0,t),n=s.feature_extractor_type,a=o[n];if(!a)throw new Error(`Unknown feature_extractor_type: '${n}'. Please report this at ${Ba}.`);return new a(s)}}class yw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;async _call(e){return await this.feature_extractor(e)}}class xw extends yf{static tokenizer_class=Ea;static image_processor_class=Bg}const bw="<|image|>",kw=/<\|image_\d+\|>/g;class vw extends yf{static image_processor_class=Bg;static tokenizer_class=Ea;async _call(e,t=null,{padding:s=!0,truncation:n=!0,num_crops:a=null}={}){let r,o;if(Array.isArray(e)||(e=[e]),t){o=await this.image_processor(t,{num_crops:a});const{num_img_tokens:i}=o,l=e.map(((e,t)=>e.split(kw).join(bw.repeat(i[t]))));r=this.tokenizer(l,{padding:s,truncation:n});const c=this.tokenizer.model.convert_tokens_to_ids([bw])[0];r.input_ids.map_((e=>e==c?-e:e))}else r=this.tokenizer(e);return{...r,...o}}}const Mw="<image>";class Ew extends yf{static tokenizer_class=Ea;static image_processor_class=Bg;static uses_processor_config=!1;async _call(e,t=null,s={}){t||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=this.tokenizer.bos_token,a=this.image_processor.config.image_seq_length;let r;t.some((e=>e.includes(Mw)))?r=t.map((e=>{const t=e.replaceAll(Mw,Mw.repeat(a)),s=t.lastIndexOf(Mw),r=-1===s?0:s+7;return t.slice(0,r)+n+t.slice(r)+"\n"})):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),r=t.map((t=>function(e,t,s,n,a){return`${n.repeat(s*a)}${t}${e}\n`}(t,n,a,Mw,e.length))));const o=this.tokenizer(r,s);return{...await this.image_processor(e,s),...o}}}class Aw extends yf{static feature_extractor_class=_w;async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}class Cw extends yf{static image_processor_class=Bg;static tokenizer_class=Ea;async _call(e,t=null,...s){let n,a;if(Array.isArray(e)||(e=[e]),t&&(n=await this.image_processor(t),a=n.image_grid_thw),a){let t=this.image_processor.config.merge_size**2,s=0;const n=a.tolist();e=e.map((e=>{for(;e.includes("<|image_pad|>");){const a=Number(n[s++].reduce(((e,t)=>e*t),1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(a/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")}))}return{...this.tokenizer(e),...n}}}class Tw extends yf{static image_processor_class=Bg;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}class Fw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;async _call(e){return await this.feature_extractor(e)}}class Pw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;static uses_processor_config=!0;async _call(e,t=null,s={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");let n={};if(t){const a=t.length,{input_features:r}=await this.feature_extractor(t,{...s,max_length:a}),o=Math.round(a/this.config.encoder_ds_factor+1e-4),i=1+Math.ceil(o/this.config.stack_factor);n.audio_token_len=[i],n.audio_values=r;const l=this.config.audio_placeholder;if(!e.includes(l))throw new Error(`The input text does not contain the image token ${l}.`);e=e.replaceAll(l,l.repeat(i))}return{...this.tokenizer(e,{add_special_tokens:!1,...s}),...n}}}class Sw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;async _call(e){return await this.feature_extractor(e)}}class zw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;async _call(e){return await this.feature_extractor(e)}}class Iw extends yf{static tokenizer_class=Ea;static feature_extractor_class=ww;async _call(e){return await this.feature_extractor(e)}}class Lw{static async from_pretrained(e,t={}){const s=await J(e,Na,!0,t),{image_processor_type:n,feature_extractor_type:a,processor_class:l}=s;if(l&&i[l])return i[l].from_pretrained(e,t);if(!n&&!a)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const c={};if(n){const e=r[n];if(!e)throw new Error(`Unknown image_processor_type: '${n}'.`);c.image_processor=new e(s)}if(a){const e=r[a];if(e)c.image_processor=new e(s);else{const e=o[a];if(!e)throw new Error(`Unknown feature_extractor_type: '${a}'.`);c.feature_extractor=new e(s)}}return new yf({},c)}}async function Bw(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>lr.read(e))))}async function Ow(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?Xg(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function Nw(e,t){t&&(e=e.map((e=>0|e)));const[s,n,a,r]=e;return{xmin:s,ymin:n,xmax:a,ymax:r}}class $w extends C{constructor({task:e,model:t,tokenizer:s=null,processor:n=null}){super(),this.task=e,this.model=t,this.tokenizer=s,this.processor=n}async dispose(){await this.model.dispose()}}class Vw extends $w{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),n=await this.model(s),a="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new $e("float32",Y(e.data),e.dims),r=this.model.config.id2label,o=[];for(const e of n.logits){const s=a(e),n=await Re(s,t),i=n[0].tolist(),l=n[1].tolist().map(((e,t)=>({label:r?r[e]:`LABEL_${e}`,score:i[t]})));1===t?o.push(...l):o.push(l)}return Array.isArray(e)||1===t?o:o[0]}}class Dw extends $w{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const s=Array.isArray(e),n=this.tokenizer(s?e:[e],{padding:!0,truncation:!0}),a=(await this.model(n)).logits,r=this.model.config.id2label,o=[];for(let e=0;e<a.dims[0];++e){const s=n.input_ids[e],i=a[e],l=[];for(let e=0;e<i.dims[0];++e){const n=i[e],a=re(n.data)[1],o=r?r[a]:`LABEL_${a}`;if(t.includes(o))continue;const c=this.tokenizer.decode([s[e].item()],{skip_special_tokens:!0});if(""===c)continue;const d=Y(n.data);l.push({entity:o,score:d[a],index:e,word:c})}o.push(l)}return s?o:o[0]}}class jw extends $w{constructor(e){super(e)}async _call(e,t,{top_k:s=1}={}){const n=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:a,end_logits:r}=await this.model(n),o=n.input_ids.tolist(),i=n.attention_mask.tolist(),l=this.tokenizer.all_special_ids,c=[];for(let e=0;e<a.dims[0];++e){const t=o[e],n=t.findIndex((e=>e==this.tokenizer.sep_token_id)),d=(i[e].map(((e,s)=>1==e&&(0===s||s>n&&-1===l.findIndex((e=>e==t[s]))))),a[e].tolist()),u=r[e].tolist();for(let s=1;s<d.length;++s)(0==i[e]||s<=n||-1!==l.findIndex((e=>e==t[s])))&&(d[s]=-1/0,u[s]=-1/0);const _=Y(d).map(((e,t)=>[e,t])),h=Y(u).map(((e,t)=>[e,t]));_[0][0]=0,h[0][0]=0;const p=I(_,h).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(p.length,s);++e){const[s,n,a]=p[e],r=t.slice(s,n+1),o=this.tokenizer.decode(r,{skip_special_tokens:!0});c.push({answer:o,score:a})}}return 1===s?c[0]:c}}class Uw extends $w{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:n}=await this.model(s),a=[],r=s.input_ids.tolist();for(let e=0;e<r.length;++e){const s=r[e],o=s.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===o)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const i=n[e][o],l=await Re(new $e("float32",Y(i.data),i.dims),t),c=l[0].tolist(),d=l[1].tolist();a.push(d.map(((e,t)=>{const n=s.slice();return n[o]=e,{score:c[t],token:Number(e),token_str:this.tokenizer.decode([e]),sequence:this.tokenizer.decode(n,{skip_special_tokens:!0})}})))}return Array.isArray(e)?a:a[0]}}class Gw extends $w{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const s=this.model.config.task_specific_params;s&&s[this.task]&&s[this.task].prefix&&(e=e.map((e=>s[this.task].prefix+e)));const n=this.tokenizer,a={padding:!0,truncation:!0};let r;r=this instanceof qw&&"_build_translation_inputs"in n?n._build_translation_inputs(e,a,t):n(e,a);const o=await this.model.generate({...r,...t});return n.batch_decode(o,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class Rw extends Gw{_key="summary_text";constructor(e){super(e)}}class qw extends Gw{_key="translation_text";constructor(e){super(e)}}function Ww(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class Xw extends $w{constructor(e){super(e)}async _call(e,t={}){let s,n=!1,a=!1;if("string"==typeof e)s=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))n=!0,s=e;else{if(Ww(e))e=[e];else{if(!Array.isArray(e)||!e.every(Ww))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");n=!0}a=!0,s=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const r=t.add_special_tokens??!1,o=!a&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const i=this.tokenizer(s,{add_special_tokens:r,padding:!0,truncation:!0}),l=await this.model.generate({...i,...t}),c=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!o&&i.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(i.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const u=Array.from({length:e.length},(e=>[]));for(let t=0;t<c.length;++t){const s=Math.floor(t/l.dims[0]*e.length);d&&(c[t]=c[t].slice(d[s])),u[s].push({generated_text:a?[...e[s],{role:"assistant",content:c[t]}]:c[t]})}return n||1!==u.length?u:u[0]}}class Hw extends $w{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:s="This example is {}.",multi_label:n=!1}={}){const a=Array.isArray(e);a||(e=[e]),Array.isArray(t)||(t=[t]);const r=t.map((e=>s.replace("{}",e))),o=n||1===t.length,i=[];for(const s of e){const e=[];for(const t of r){const n=this.tokenizer(s,{text_pair:t,padding:!0,truncation:!0}),a=await this.model(n);o?e.push([a.logits.data[this.contradiction_id],a.logits.data[this.entailment_id]]):e.push(a.logits.data[this.entailment_id])}const n=(o?e.map((e=>Y(e)[1])):Y(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));i.push({sequence:s,labels:n.map((e=>t[e[1]])),scores:n.map((e=>e[0]))})}return a?i:i[0]}}class Jw extends $w{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:s=!1,quantize:n=!1,precision:a="binary"}={}){const r=this.tokenizer(e,{padding:!0,truncation:!0}),o=await this.model(r);let i=o.last_hidden_state??o.logits??o.token_embeddings;if("none"===t);else if("mean"===t)i=Xe(i,r.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);i=i.slice(null,0)}return s&&(i=i.normalize(2,-1)),n&&(i=ut(i,a)),i}}class Kw extends $w{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const s=await Bw(e),{pixel_values:n}=await this.processor(s),a=await this.model({pixel_values:n});let r;if(t){if(!("pooler_output"in a))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");r=a.pooler_output}else r=a.last_hidden_state??a.logits??a.image_embeds;return r}}class Qw extends $w{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.processor.feature_extractor.config.sampling_rate,n=await Ow(e,s),a=this.model.config.id2label,r=[];for(const e of n){const s=await this.processor(e),n=(await this.model(s)).logits[0],o=await Re(new $e("float32",Y(n.data),n.dims),t),i=o[0].tolist(),l=o[1].tolist().map(((e,t)=>({label:a?a[e]:`LABEL_${e}`,score:i[t]})));r.push(l)}return Array.isArray(e)?r:r[0]}}class Zw extends $w{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a sound of {}."}={}){const n=!Array.isArray(e);n&&(e=[e]);const a=t.map((e=>s.replace("{}",e))),r=this.tokenizer(a,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,i=await Ow(e,o),l=[];for(const e of i){const s=await this.processor(e),n=Y((await this.model({...r,...s})).logits_per_audio.data);l.push([...n].map(((e,s)=>({score:e,label:t[s]}))))}return n?l[0]:l}}class Yw extends $w{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const s=!Array.isArray(e);s&&(e=[e]);const n=this.processor.feature_extractor.config.sampling_rate,a=await Ow(e,n),r=[];for(const e of a){const t=await this.processor(e),s=(await this.model(t)).logits[0],n=[];for(const e of s)n.push(re(e.data)[1]);const a=this.tokenizer.decode(n);r.push({text:a})}return s?r[0]:r}async _call_whisper(e,t){const s=t.return_timestamps??!1,n=t.chunk_length_s??0,a=t.force_full_sequences??!1;let r=t.stride_length_s??null;const o={...t};"word"===s&&(o.return_token_timestamps=!0,o.return_timestamps=!1);const i=!Array.isArray(e);i&&(e=[e]);const l=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,c=this.processor.feature_extractor.config.hop_length,d=this.processor.feature_extractor.config.sampling_rate,u=await Ow(e,d),_=[];for(const e of u){let t=[];if(n>0){if(null===r)r=n/6;else if(n<=r)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const s=d*n,a=d*r,o=s-2*a;let i=0;for(;;){const n=i+s,r=e.subarray(i,n),l=await this.processor(r),c=0===i,d=n>=e.length;if(t.push({stride:[r.length,c?0:a,d?0:a],input_features:l.input_features,is_last:d}),d)break;i+=o}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){o.num_frames=Math.floor(e.stride[0]/c);const t=await this.model.generate({inputs:e.input_features,...o});"word"===s?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>ue(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/d))}const[i,u]=this.tokenizer._decode_asr(t,{time_precision:l,return_timestamps:s,force_full_sequences:a});_.push({text:i,...u})}return i?_[0]:_}async _call_moonshine(e,t){const s=!Array.isArray(e);s&&(e=[e]);const n=this.processor.feature_extractor.config.sampling_rate,a=await Ow(e,n),r=[];for(const e of a){const s=await this.processor(e),a=6*Math.floor(e.length/n),o=await this.model.generate({max_new_tokens:a,...t,...s}),i=this.processor.batch_decode(o,{skip_special_tokens:!0})[0];r.push({text:i})}return s?r[0]:r}}class ey extends $w{constructor(e){super(e)}async _call(e,t={}){const s=Array.isArray(e),n=await Bw(e),{pixel_values:a}=await this.processor(n),r=[];for(const e of a){e.dims=[1,...e.dims];const s=await this.model.generate({inputs:e,...t}),n=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));r.push(n)}return s?r:r[0]}}class ty extends $w{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=await Bw(e),{pixel_values:n}=await this.processor(s),a=await this.model({pixel_values:n}),r=this.model.config.id2label,o=[];for(const e of a.logits){const s=await Re(new $e("float32",Y(e.data),e.dims),t),n=s[0].tolist(),a=s[1].tolist().map(((e,t)=>({label:r?r[e]:`LABEL_${e}`,score:n[t]})));o.push(a)}return Array.isArray(e)?o:o[0]}}class sy extends $w{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:s=.5,overlap_mask_area_threshold:n=.8,label_ids_to_fuse:a=null,target_sizes:r=null,subtask:o=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const i=await Bw(e),l=i.map((e=>[e.height,e.width])),c=await this.processor(i),{inputNames:d,outputNames:u}=this.model.sessions.model;if(!d.includes("pixel_values")){if(1!==d.length)throw Error(`Expected a single input name, but got ${d.length} inputs: ${d}.`);const e=d[0];if(e in c)throw Error(`Input name ${e} already exists in the inputs.`);c[e]=c.pixel_values}const _=await this.model(c);let h=null;if(null!==o)h=this.subtasks_mapping[o];else if(this.processor.image_processor)for(const[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){h=this.processor.image_processor[t].bind(this.processor.image_processor),o=e;break}const p=this.model.config.id2label,m=[];if(o)if("panoptic"===o||"instance"===o){const e=h(_,t,s,n,a,r??l)[0],o=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(o.data.length);for(let s=0;s<o.data.length;++s)o.data[s]===t.id&&(e[s]=255);const s=new lr(e,o.dims[1],o.dims[0],1);m.push({score:t.score,label:p[t.label_id],mask:s})}}else{if("semantic"!==o)throw Error(`Subtask ${o} not supported.`);{const{segmentation:e,labels:t}=h(_,r??l)[0];for(const s of t){const t=new Uint8ClampedArray(e.data.length);for(let n=0;n<e.data.length;++n)e.data[n]===s&&(t[n]=255);const n=new lr(t,e.dims[1],e.dims[0],1);m.push({score:null,label:p[s],mask:n})}}}else{const e=_[u[0]];for(let t=0;t<l.length;++t){const s=l[t],n=e[t];n.data.some((e=>e<0||e>1))&&n.sigmoid_();const a=await lr.fromTensor(n.mul_(255).to("uint8")).resize(s[1],s[0]);m.push({label:null,score:null,mask:a})}}return m}}class ny extends sy{constructor(e){super(e)}async _call(e,t={}){if(Array.isArray(e)&&1!==e.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");const s=await Bw(e),n=await super._call(e,t);return s.map(((e,t)=>{const s=e.clone();return s.putAlpha(n[t].mask),s}))}}class ay extends $w{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a photo of {}"}={}){const n=Array.isArray(e),a=await Bw(e),r=t.map((e=>s.replace("{}",e))),o=this.tokenizer(r,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:i}=await this.processor(a),l=await this.model({...o,pixel_values:i}),c="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>Y(e.data),d=[];for(const e of l.logits_per_image){const s=[...c(e)].map(((e,s)=>({score:e,label:t[s]})));s.sort(((e,t)=>t.score-e.score)),d.push(s)}return n?d:d[0]}}class ry extends $w{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:s=!1}={}){const n=Array.isArray(e);if(n&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const a=await Bw(e),r=s?null:a.map((e=>[e.height,e.width])),{pixel_values:o,pixel_mask:i}=await this.processor(a),l=await this.model({pixel_values:o,pixel_mask:i}),c=this.processor.image_processor.post_process_object_detection(l,t,r),d=this.model.config.id2label,u=c.map((e=>e.boxes.map(((t,n)=>({score:e.scores[n],label:d[e.classes[n]],box:Nw(t,!s)})))));return n?u:u[0]}}class oy extends $w{constructor(e){super(e)}async _call(e,t,{threshold:s=.1,top_k:n=null,percentage:a=!1}={}){const r=Array.isArray(e),o=await Bw(e),i=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(o),c=[];for(let e=0;e<o.length;++e){const r=o[e],d=a?null:[[r.height,r.width]],u=l.pixel_values[e].unsqueeze_(0),_=await this.model({...i,pixel_values:u});let h;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(_,i.input_ids,{box_threshold:s,text_threshold:s,target_sizes:d})[0];h=e.boxes.map(((t,s)=>({score:e.scores[s],label:e.labels[s],box:Nw(t,!a)})))}else{const e=this.processor.image_processor.post_process_object_detection(_,s,d,!0)[0];h=e.boxes.map(((s,n)=>({score:e.scores[n],label:t[e.classes[n]],box:Nw(s,!a)})))}h.sort(((e,t)=>t.score-e.score)),null!==n&&(h=h.slice(0,n)),c.push(h)}return r?c:c[0]}}class iy extends $w{constructor(e){super(e)}async _call(e,t,s={}){const n=(await Bw(e))[0],{pixel_values:a}=await this.processor(n),r=`<s_docvqa><s_question>${t}</s_question><s_answer>`,o=this.tokenizer(r,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,i=await this.model.generate({inputs:a,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:o,...s}),l=this.tokenizer.batch_decode(i)[0].match(/<s_answer>(.*?)<\/s_answer>/);let c=null;return l&&l.length>=2&&(c=l[1].trim()),[{answer:c}]}}class ly extends $w{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:s}=await this.model(t),n=this.model.config.sampling_rate;return new ow(s.data,n)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await Sm.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new $e("float32",t,[1,t.length]);else if(!(t instanceof $e))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:s}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model.generate_speech(s,t,{vocoder:this.vocoder}),a=this.processor.feature_extractor.config.sampling_rate;return new ow(n.data,a)}}class cy extends $w{constructor(e){super(e)}async _call(e){const t=await Bw(e),s=await this.processor(t),n=await this.model(s),a=[];for(const e of n.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");a.push(lr.fromTensor(t))}return a.length>1?a:a[0]}}class dy extends $w{constructor(e){super(e)}async _call(e){const t=await Bw(e),s=await this.processor(t),{predicted_depth:n}=await this.model(s),a=[];for(let e=0;e<t.length;++e){const s=n[e],[r,o]=s.dims.slice(-2),[i,l]=t[e].size,c=(await je(s.view(1,1,r,o),{size:[l,i],mode:"bilinear"})).view(l,i),d=c.min().item(),u=c.max().item(),_=c.sub(d).div_(u-d).mul_(255).to("uint8").unsqueeze(0),h=lr.fromTensor(_);a.push({predicted_depth:c,depth:h})}return a.length>1?a:a[0]}}const uy=Object.freeze({"text-classification":{tokenizer:Ea,pipeline:Vw,model:zm,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:Ea,pipeline:Dw,model:Im,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:Ea,pipeline:jw,model:Dm,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:Ea,pipeline:Uw,model:Vm,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:Ea,pipeline:Rw,model:Lm,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:Ea,pipeline:qw,model:Lm,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:Ea,pipeline:Gw,model:Lm,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:Ea,pipeline:Xw,model:$m,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:Ea,pipeline:Hw,model:zm,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Qw,model:Km,processor:Lw,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:Ea,pipeline:Zw,model:Sm,processor:Lw,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:Ea,pipeline:Yw,model:[Bm,Jm],processor:Lw,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:Ea,pipeline:ly,model:[Nm,Om],processor:[Lw,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:Ea,pipeline:ey,model:jm,processor:Lw,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ty,model:Um,processor:Lw,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:sy,model:[Gm,Rm,qm],processor:Lw,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ny,model:[Gm,Rm,qm],processor:Lw,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:Ea,pipeline:ay,model:Sm,processor:Lw,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ry,model:Wm,processor:Lw,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:Ea,pipeline:oy,model:Xm,processor:Lw,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:Ea,pipeline:iy,model:Ym,processor:Lw,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:cy,model:tf,processor:Lw,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:dy,model:sf,processor:Lw,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:Ea,pipeline:Jw,model:Sm,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:Lw,pipeline:Kw,model:[rf,Sm],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),_y=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function hy(e,t=null,{progress_callback:s=null,config:n=null,cache_dir:a=null,local_files_only:r=!1,revision:o="main",device:i=null,dtype:l=null,subfolder:c="onnx",use_external_data_format:d=null,model_file_name:u=null,session_options:_={}}={}){e=_y[e]??e;const h=uy[e.split("_",1)[0]];if(!h)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(uy)}]`);t||(t=h.default.model,console.log(`No model specified. Using default model: "${t}".`));const p={progress_callback:s,config:n,cache_dir:a,local_files_only:r,revision:o,device:i,dtype:l,subfolder:c,use_external_data_format:d,model_file_name:u,session_options:_},m=new Map([["tokenizer",h.tokenizer],["model",h.model],["processor",h.processor]]),f=await async function(e,t,s){const n=Object.create(null),a=[];for(const[r,o]of e.entries()){if(!o)continue;let e;e=Array.isArray(o)?new Promise((async(e,n)=>{let a;for(const r of o){if(null===r)return void e(null);try{return void e(await r.from_pretrained(t,s))}catch(e){if(e.message?.includes("Unsupported model type"))a=e;else{if(!e.message?.includes("Could not locate file"))return void n(e);a=e}}}n(a)})):o.from_pretrained(t,s),n[r]=e,a.push(e)}await Promise.all(a);for(const[e,t]of Object.entries(n))n[e]=await t;return n}(m,t,p);f.task=e,T(s,{status:"ready",task:e,model:t});return new(0,h.pipeline)(f)}class py{constructor(e,t){this.image=e,this.timestamp=t}}class my{constructor(e,t){e.length>0&&e[0]instanceof lr&&(e=e.map(((s,n)=>new py(s,(n+1)/(e.length+1)*t)))),this.frames=e,this.duration=t}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function fy(e,{num_frames:t=null,fps:s=null}={}){if(!x.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(null==t&&null==s)throw new Error("Either num_frames or fps must be provided.");const n=[],a=document.createElement("video");if(a.crossOrigin="anonymous",a.muted=!0,"string"==typeof e)a.src=e;else if(e instanceof Blob)a.src=URL.createObjectURL(e);else{if(!(e instanceof HTMLVideoElement))throw new Error("Invalid URL or video element provided.");a.src=e.src}if(await new Promise((e=>a.onloadedmetadata=e)),a.seekable.start(0)===a.seekable.end(0)){const e=await fetch(a.src),t=await e.blob();a.src=URL.createObjectURL(t),await new Promise((e=>a.onloadedmetadata=e))}const r=a.duration;let o,i;null!=t?(o=t,i=1===t?0:r/(t-1)):(i=1/s,o=Math.floor(r/i));let l=[];for(let e=0;e<o;++e)l.push(1===t?r/2:e*i);const c=document.createElement("canvas");c.width=a.videoWidth,c.height=a.videoHeight;const d=c.getContext("2d",{willReadFrequently:!0});for(const e of l){a.currentTime=e,await new Promise((e=>{a.onseeked=e})),d.drawImage(a,0,0,c.width,c.height);const t=d.getImageData(0,0,c.width,c.height),s=new lr(t.data,c.width,c.height,4),r=new py(s,e);n.push(r)}return a.remove(),new my(n,r)}class gy{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const wy=x.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class yy extends gy{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:n=null,skip_special_tokens:a=!0,decode_kwargs:r={},...o}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=s??wy,this.token_callback_function=n,this.decode_kwargs={skip_special_tokens:a,...r,...o},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const t=this.next_tokens_are_prompt;if(t&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const s=e[0];this.token_callback_function?.(s),this.token_cache=z(this.token_cache,s);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;t||n.endsWith("\n")?(a=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&Ms(n.charCodeAt(n.length-1))?(a=n.slice(this.print_len),this.print_len+=a.length):(a=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===wy&&x.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class xy extends yy{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:n=null,on_chunk_start:a=null,on_chunk_end:r=null,on_finalize:o=null,time_precision:i=.02,skip_special_tokens:l=!0,decode_kwargs:c={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:s,token_callback_function:n,decode_kwargs:c}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=a,this.on_chunk_end=r,this.on_finalize=o,this.time_precision=i,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const s=Number(t[0])-this.timestamp_begin;if(s>=0){const t=s*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(t):this.on_chunk_start?.(t),this.waiting_for_timestamp=!this.waiting_for_timestamp,e=[[]]}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}var by=a.Bup,ky=a.O0k,vy=a.MRG,My=a.o57,Ey=a.iKv,Ay=a.ELH,Cy=a.Hi6,Ty=a.G2X,Fy=a.crd,Py=a.UH6,Sy=a.ptb,zy=a.EJs,Iy=a.CMU,Ly=a.fZ7,By=a.rKH,Oy=a.m68,Ny=a.Plw,$y=a.$z$,Vy=a._TZ,Dy=a.W6E,jy=a.QNG,Uy=a.nuw,Gy=a.JP3,Ry=a.w0O,qy=a.HMe,Wy=a.vTA,Xy=a.mvA,Hy=a.FJW,Jy=a.qCM,Ky=a.wju,Qy=a.S9w,Zy=a.Yd3,Yy=a.UVV,ex=a.yGT,tx=a.wrZ,sx=a.BRf,nx=a.jQR,ax=a.MOY,rx=a.ZIt,ox=a.V9g,ix=a.TUv,lx=a.xIA,cx=a.db0,dx=a.$TP,ux=a.gqD,_x=a.oye,hx=a.v6I,px=a.TWC,mx=a.Xh$,fx=a.F05,gx=a.MH$,wx=a.vqx,yx=a.hbt,xx=a.hbT,bx=a.E9I,kx=a.V11,vx=a.foZ,Mx=a.Dji,Ex=a.EKW,Ax=a.oaf,Cx=a.bmk,Tx=a.VoY,Fx=a.MRX,Px=a.o2t,Sx=a.rSR,zx=a.DIv,Ix=a.Ft_,Lx=a.bQt,Bx=a.tDL,Ox=a.JGb,Nx=a.Hvf,$x=a.IrO,Vx=a.wZy,Dx=a.Sm3,jx=a.eUP,Ux=a.ZiE,Gx=a.P3b,Rx=a.$P2,qx=a.dg9,Wx=a.jld,Xx=a.fv3,Hx=a.GEs,Jx=a.yaC,Kx=a.GEu,Qx=a.E_G,Zx=a.tUF,Yx=a.FIB,eb=a.nD4,tb=a.CAk,sb=a.u2M,nb=a.CCt,ab=a.N2L,rb=a.S7g,ob=a.wc1,ib=a.h0m,lb=a.LdY,cb=a.Aib,db=a.S9m,ub=a.kOS,_b=a.qtL,hb=a.mp$,pb=a.SQp,mb=a.XWm,fb=a.lHM,gb=a.PRX,wb=a.$r3,yb=a.qWZ,xb=a.IVZ,bb=a.oZ3,kb=a.ioA,vb=a.hFk,Mb=a.riX,Eb=a.bOZ,Ab=a.F$M,Cb=a.gGu,Tb=a.uRS,Fb=a.q7U,Pb=a.wYL,Sb=a.qt5,zb=a.z1x,Ib=a.Vx0,Lb=a.y5s,Bb=a.y_I,Ob=a.FSH,Nb=a.jJ4,$b=a.fRb,Vb=a.uku,Db=a.aN4,jb=a.Llt,Ub=a.lf8,Gb=a.NJd,Rb=a.OBR,qb=a.nII,Wb=a.$o$,Xb=a.xCN,Hb=a.YHO,Jb=a.ALp,Kb=a.c$o,Qb=a.C2_,Zb=a.ooI,Yb=a.Ex8,ek=a.A_V,tk=a.Efq,sk=a.b5h,nk=a.EX5,ak=a.Weu,rk=a.xUX,ok=a.XfN,ik=a.xNh,lk=a.w4W,ck=a._yz,dk=a.L3d,uk=a.Zip,_k=a.pGQ,hk=a.Nmr,pk=a.lr8,mk=a.Qs9,fk=a.Ilc,gk=a.pW7,wk=a.vTy,yk=a.$Vt,xk=a.$MY,bk=a.jWB,kk=a.twb,vk=a.Bl1,Mk=a.oB7,Ek=a.EPI,Ak=a.cXP,Ck=a.Dki,Tk=a.FoX,Fk=a.bEM,Pk=a.IgO,Sk=a.A0R,zk=a.w4p,Ik=a.Fbv,Lk=a.j9c,Bk=a.fen,Ok=a.ZM0,Nk=a.JFO,$k=a.DDe,Vk=a.HaQ,Dk=a.LlQ,jk=a.IeB,Uk=a.s8j,Gk=a.jzC,Rk=a.gQI,qk=a.SXK,Wk=a.YVy,Xk=a.uwI,Hk=a.NDb,Jk=a.xpG,Kk=a.yuQ,Qk=a.cpF,Zk=a.i8h,Yk=a.Oaj,ev=a.TNE,tv=a.KI$,sv=a.pHg,nv=a.fCQ,av=a.X6D,rv=a.KkK,ov=a.muz,iv=a.SIh,lv=a.CF0,cv=a.gEj,dv=a.Nyc,uv=a.vh2,_v=a.SzV,hv=a.SPn,pv=a._vb,mv=a.QSM,fv=a.qjJ,gv=a.nDC,wv=a.QGw,yv=a.iGD,xv=a.nD1,bv=a.pSU,kv=a.fzV,vv=a.q9s,Mv=a.Uc1,Ev=a.cep,Av=a.rGP,Cv=a.Hff,Tv=a.$ph,Fv=a.$Ld,Pv=a.nJ5,Sv=a.mvc,zv=a.vgU,Iv=a.Tk_,Lv=a.e1W,Bv=a.fQJ,Ov=a.YKo,Nv=a.syV,$v=a.IUW,Vv=a.jIC,Dv=a.zMO,jv=a.uB5,Uv=a.qJs,Gv=a.j2j,Rv=a.jt4,qv=a.vdi,Wv=a.Cb2,Xv=a.FuQ,Hv=a.PBg,Jv=a.pK1,Kv=a.Shx,Qv=a.SX4,Zv=a.adp,Yv=a.Xvs,eM=a.l2J,tM=a.DbD,sM=a.j7p,nM=a.XBq,aM=a.tAq,rM=a.bFh,oM=a.PV9,iM=a.FqW,lM=a.pw$,cM=a.R0r,dM=a.zJu,uM=a.vlr,_M=a.xJk,hM=a.bKx,pM=a.d56,mM=a.VBL,fM=a.UyU,gM=a.y71,wM=a.UkL,yM=a.uFN,xM=a.okz,bM=a.G$U,kM=a.GLc,vM=a.pSS,MM=a.BQD,EM=a.Vx1,AM=a.O5n,CM=a.kjR,TM=a.UDe,FM=a.Ed4,PM=a.mOb,SM=a.Ynb,zM=a.Kwv,IM=a.EVN,LM=a.bRn,BM=a.xCl,OM=a.qQb,NM=a.vnq,$M=a.gqe,VM=a.oO_,DM=a.OPC,jM=a.Vvo,UM=a.vi3,GM=a.Yiu,RM=a.ePJ,qM=a.q56,WM=a.d7u,XM=a.O0q,HM=a.phI,JM=a.G_t,KM=a.Vkl,QM=a.CfF,ZM=a.I07,YM=a.GXe,eE=a.aJl,tE=a.dYU,sE=a.cw6,nE=a.VYv,aE=a.n3o,rE=a.WoL,oE=a.kn$,iE=a._i4,lE=a.Fex,cE=a.tCA,dE=a.g1K,uE=a.AEy,_E=a.jWM,hE=a.X0l,pE=a.RvM,mE=a.Hiq,fE=a.K5U,gE=a.k5w,wE=a.c$b,yE=a.ehA,xE=a.fim,bE=a.VT2,kE=a.yMg,vE=a.LqK,ME=a.Rcj,EE=a.tm_,AE=a.VT,CE=a.HT0,TE=a.bZR,FE=a.HfH,PE=a.$ow,SE=a.YZs,zE=a.UNt,IE=a.Pgx,LE=a.Mt5,BE=a.YR3,OE=a.cj6,NE=a.QRP,$E=a.OOL,VE=a.xfe,DE=a.zml,jE=a.C_m,UE=a.Mjg,GE=a.IvO,RE=a.kPE,qE=a.KcC,WE=a.wXv,XE=a.FmT,HE=a.W7k,JE=a.U_I,KE=a.OFW,QE=a.Hw7,ZE=a.y1Z,YE=a.qph,eA=a.FDZ,tA=a.Hb,sA=a.T1J,nA=a.YqH,aA=a._MQ,rA=a.hB$,oA=a.mPV,iA=a.b4i,lA=a.S37,cA=a.PWE,dA=a.W0U,uA=a.sG8,_A=a.Oul,hA=a.YCy,pA=a.yZM,mA=a.erL,fA=a.pe4,gA=a.z_R,wA=a.uA4,yA=a.uKS,xA=a.eQ7,bA=a.vZB,kA=a.NlK,vA=a.CBj,MA=a.J_N,EA=a.t8g,AA=a.jTN,CA=a.V7I,TA=a.Jfh,FA=a.Bz$,PA=a.DN9,SA=a.jgy,zA=a.M3c,IA=a.K66,LA=a.mKg,BA=a.k1H,OA=a.Uvp,NA=a.sIn,$A=a.pDc,VA=a.Xxh,DA=a.Bls,jA=a.TCq,UA=a.jeS,GA=a.F6T,RA=a.aJ7,qA=a.Y0u,WA=a.CJY,XA=a.kYJ,HA=a.g4F,JA=a.MHq,KA=a.rz8,QA=a.N5j,ZA=a.rbM,YA=a.ZKw,eC=a.yiA,tC=a.qBz,sC=a.LFe,nC=a.Z9R,aC=a.pBZ,rC=a.IWp,oC=a.F75,iC=a.hNN,lC=a.lX9,cC=a._Bh,dC=a.JE9,uC=a.t68,_C=a.S5F,hC=a.wAB,pC=a.$Tv,mC=a.vZ9,fC=a.s7A,gC=a.mKJ,wC=a.Ck8,yC=a.lmt,xC=a.jZx,bC=a.rZ_,kC=a.zPm,vC=a.vMO,MC=a.Obh,EC=a.XW6,AC=a.jN0,CC=a.TEh,TC=a.lPY,FC=a.ORI,PC=a.SPc,SC=a.Y8J,zC=a.Paj,IC=a.Tc6,LC=a.wfL,BC=a.EVf,OC=a.zEN,NC=a.LGm,$C=a.VD9,VC=a.Xuy,DC=a.Fip,jC=a.FW1,UC=a.FgJ,GC=a.ZVw,RC=a.vqf,qC=a.zgG,WC=a.a86,XC=a.A3P,HC=a.knH,JC=a.GZ7,KC=a.$Mx,QC=a.jCl,ZC=a.jlM,YC=a.tU7,eT=a.k1d,tT=a.oKc,sT=a.Uys,nT=a.MYn,aT=a.WJS,rT=a.lAn,oT=a.ZNn,iT=a._XV,lT=a.$hY,cT=a.e3g,dT=a.git,uT=a.wcw,_T=a.vN5,hT=a.nPB,pT=a.KzV,mT=a.izm,fT=a.Gzn,gT=a.CR8,wT=a.YEl,yT=a.Ghe,xT=a.ZnA,bT=a.VkI,kT=a.L1Z,vT=a.jbx,MT=a.$Un,ET=a.Y2A,AT=a._dY,CT=a.Tyd,TT=a.aLA,FT=a.Jlf,PT=a.pgF,ST=a.A0H,zT=a.U0l,IT=a.guh,LT=a.tjD,BT=a.XyO,OT=a.yD1,NT=a.SJu,$T=a.NXG,VT=a.hf2,DT=a.DK6,jT=a.V2z,UT=a.jZD,GT=a.f7H,RT=a.XNj,qT=a.lyK,WT=a.bHs,XT=a.d52,HT=a.mdL,JT=a.xIZ,KT=a.h6w,QT=a.zcr,ZT=a.Tl7,YT=a.RZG,eF=a.REm,tF=a.YOx,sF=a.MNq,nF=a.vts,aF=a.hKP,rF=a.Giz,oF=a.d8n,iF=a.fl$,lF=a.sns,cF=a.eu8,dF=a.Xi0,uF=a.Xsl,_F=a.Ilk,hF=a.Ccq,pF=a.yQp,mF=a.bpB,fF=a.Vnd,gF=a.MgS,wF=a.sbd,yF=a.tKX,xF=a.RIx,bF=a.Bi5,kF=a.FlD,vF=a.G3L,MF=a.fX1,EF=a.Xrw,AF=a.q85,CF=a.DJ0,TF=a.DVM,FF=a.rQe,PF=a.rgj,SF=a.RBo,zF=a.HLV,IF=a.dBN,LF=a.YjU,BF=a.SsB,OF=a.U14,NF=a.g$7,$F=a.dt5,VF=a.AVh,DF=a.iAJ,jF=a.gJd,UF=a.UX7,GF=a.Z83,RF=a.wRc,qF=a.cR9,WF=a.MNc,XF=a.gbg,HF=a.zPu,JF=a.QiY,KF=a.Pqo,QF=a.fqH,ZF=a.oJL,YF=a.FEt,eP=a.LN6,tP=a.GqW,sP=a.LvX,nP=a.D$4,aP=a.z45,rP=a.qvY,oP=a.rb,iP=a.RWH,lP=a.T$2,cP=a.UaF,dP=a.E6D,uP=a.I04,_P=a.fjb,hP=a.diq,pP=a.nR6,mP=a.oZv,fP=a.EpU,gP=a.Dlv,wP=a.vn6,yP=a.sCu,xP=a.S3$,bP=a.Kul,kP=a.O_r,vP=a.c93,MP=a.qcZ,EP=a.crA,AP=a.TzE,CP=a.TrS,TP=a.VG4,FP=a.dAU,PP=a.j_7,SP=a.j6y,zP=a.fGD,IP=a.vf1,LP=a.Fzc,BP=a.b9b,OP=a.xbg,NP=a._0v,$P=a.qYS,VP=a.H6X,DP=a.EbS,jP=a.AOe,UP=a.T1P,GP=a.psK,RP=a.iaN,qP=a.sKA,WP=a.hTz,XP=a.COx,HP=a.HBQ,JP=a.A4X,KP=a.SNK,QP=a.OP6,ZP=a.LsV,YP=a.n_R,eS=a.cU1,tS=a.GNt,sS=a.dp7,nS=a.IzE,aS=a.ct5,rS=a.bGU,oS=a.WIq,iS=a.xI8,lS=a.W5i,cS=a.UqB,dS=a.$gq,uS=a.VeZ,_S=a.wY7,hS=a.gxi,pS=a.D_,mS=a.WFR,fS=a.w2j,gS=a.IMK,wS=a.bg1,yS=a.xrW,xS=a.h_s,bS=a.LJl,kS=a.qLW,vS=a.ZGD,MS=a.eJU,ES=a.m1H,AS=a.GPY,CS=a.Y_v,TS=a.uzq,FS=a.KJ,PS=a.PyP,SS=a.Ct0,zS=a.Kt3,IS=a.P_g,LS=a.cl7,BS=a.x5Z,OS=a.fGl,NS=a.OQ0,$S=a.bAw,VS=a.ltw,DS=a.aGV,jS=a.dMI,US=a.i3J,GS=a.YyD,RS=a.RT2,qS=a.K_R,WS=a.AyL,XS=a.Xyp,HS=a.Eh_,JS=a.ag_,KS=a.Pyv,QS=a.zys,ZS=a.e25,YS=a.eU0,ez=a.iYt,tz=a.VFU,sz=a.EAC,nz=a.aHU,az=a.gSt,rz=a.Vf$,oz=a.pgB,iz=a.Fg4,lz=a.I_U,cz=a.d7$,dz=a._Dc,uz=a.cD,_z=a.v11,hz=a.Pzh,pz=a.QJ0,mz=a.czX,fz=a.vGK,gz=a.pJ8,wz=a.OK_,yz=a.klo,xz=a.gN,bz=a.jN2,kz=a.GXK,vz=a.Z0G,Mz=a.nWJ,Ez=a.ajg,Az=a.WLR,Cz=a.mjH,Tz=a.URg,Fz=a.CbL,Pz=a.vHC,Sz=a.$3d,zz=a.KPo,Iz=a.ZUB,Lz=a.gEG,Bz=a.$qk,Oz=a.gJr,Nz=a.Omf,$z=a.TyF,Vz=a._K2,Dz=a.a2Z,jz=a.ck6,Uz=a.dOS,Gz=a.kvc,Rz=a.s_v,qz=a.GWP,Wz=a.vZh,Xz=a.vdP,Hz=a.WFC,Jz=a.l8C,Kz=a.vaw,Qz=a.BW4,Zz=a.CMs,Yz=a.VOO,eI=a.DDf,tI=a.T9B,sI=a.i2o,nI=a.X7P,aI=a.jV8,rI=a.Brl,oI=a.jkA,iI=a.SaS,lI=a.oCF,cI=a.Ny6,dI=a.SXi,uI=a.TkF,_I=a.Jaq,hI=a._9M,pI=a._2u,mI=a.z8$,fI=a.LIG,gI=a.dik,wI=a.Vs9,yI=a.OjR,xI=a.t$z,bI=a.cQR,kI=a.rfw,vI=a.E,MI=a.Ul9,EI=a.aFj;export{by as ASTFeatureExtractor,ky as ASTForAudioClassification,vy as ASTModel,My as ASTPreTrainedModel,Ey as AlbertForMaskedLM,Ay as AlbertForQuestionAnswering,Cy as AlbertForSequenceClassification,Ty as AlbertModel,Fy as AlbertPreTrainedModel,Py as AlbertTokenizer,Sy as AudioClassificationPipeline,zy as AutoConfig,Iy as AutoFeatureExtractor,Ly as AutoImageProcessor,By as AutoModel,Oy as AutoModelForAudioClassification,Ny as AutoModelForAudioFrameClassification,$y as AutoModelForAudioTextToText,Vy as AutoModelForCTC,Dy as AutoModelForCausalLM,jy as AutoModelForDepthEstimation,Uy as AutoModelForDocumentQuestionAnswering,Gy as AutoModelForImageClassification,Ry as AutoModelForImageFeatureExtraction,qy as AutoModelForImageMatting,Wy as AutoModelForImageSegmentation,Xy as AutoModelForImageTextToText,Hy as AutoModelForImageToImage,Jy as AutoModelForMaskGeneration,Ky as AutoModelForMaskedLM,Qy as AutoModelForNormalEstimation,Zy as AutoModelForObjectDetection,Yy as AutoModelForPoseEstimation,ex as AutoModelForQuestionAnswering,tx as AutoModelForSemanticSegmentation,sx as AutoModelForSeq2SeqLM,nx as AutoModelForSequenceClassification,ax as AutoModelForSpeechSeq2Seq,rx as AutoModelForTextToSpectrogram,ox as AutoModelForTextToWaveform,ix as AutoModelForTokenClassification,lx as AutoModelForUniversalSegmentation,cx as AutoModelForVision2Seq,dx as AutoModelForXVector,ux as AutoModelForZeroShotObjectDetection,_x as AutoProcessor,hx as AutoTokenizer,px as AutomaticSpeechRecognitionPipeline,mx as BackgroundRemovalPipeline,fx as BartForConditionalGeneration,gx as BartForSequenceClassification,wx as BartModel,yx as BartPretrainedModel,xx as BartTokenizer,bx as BaseModelOutput,kx as BaseStreamer,vx as BeitFeatureExtractor,Mx as BeitForImageClassification,Ex as BeitModel,Ax as BeitPreTrainedModel,Cx as BertForMaskedLM,Tx as BertForQuestionAnswering,Fx as BertForSequenceClassification,Px as BertForTokenClassification,Sx as BertModel,zx as BertPreTrainedModel,Ix as BertTokenizer,Lx as BitImageProcessor,Bx as BlenderbotForConditionalGeneration,Ox as BlenderbotModel,Nx as BlenderbotPreTrainedModel,$x as BlenderbotSmallForConditionalGeneration,Vx as BlenderbotSmallModel,Dx as BlenderbotSmallPreTrainedModel,jx as BlenderbotSmallTokenizer,Ux as BlenderbotTokenizer,Gx as BloomForCausalLM,Rx as BloomModel,qx as BloomPreTrainedModel,Wx as BloomTokenizer,Xx as CLIPFeatureExtractor,Hx as CLIPImageProcessor,Jx as CLIPModel,Kx as CLIPPreTrainedModel,Qx as CLIPSegForImageSegmentation,Zx as CLIPSegModel,Yx as CLIPSegPreTrainedModel,eb as CLIPTextModel,tb as CLIPTextModelWithProjection,sb as CLIPTokenizer,nb as CLIPVisionModel,ab as CLIPVisionModelWithProjection,rb as CamembertForMaskedLM,ob as CamembertForQuestionAnswering,ib as CamembertForSequenceClassification,lb as CamembertForTokenClassification,cb as CamembertModel,db as CamembertPreTrainedModel,ub as CamembertTokenizer,_b as CausalLMOutput,hb as CausalLMOutputWithPast,pb as ChineseCLIPFeatureExtractor,mb as ChineseCLIPModel,fb as ChineseCLIPPreTrainedModel,gb as ClapAudioModelWithProjection,wb as ClapFeatureExtractor,yb as ClapModel,xb as ClapPreTrainedModel,bb as ClapTextModelWithProjection,kb as ClassifierFreeGuidanceLogitsProcessor,vb as CodeGenForCausalLM,Mb as CodeGenModel,Eb as CodeGenPreTrainedModel,Ab as CodeGenTokenizer,Cb as CodeLlamaTokenizer,Tb as CohereForCausalLM,Fb as CohereModel,Pb as CoherePreTrainedModel,Sb as CohereTokenizer,zb as ConvBertForMaskedLM,Ib as ConvBertForQuestionAnswering,Lb as ConvBertForSequenceClassification,Bb as ConvBertForTokenClassification,Ob as ConvBertModel,Nb as ConvBertPreTrainedModel,$b as ConvBertTokenizer,Vb as ConvNextFeatureExtractor,Db as ConvNextForImageClassification,jb as ConvNextImageProcessor,Ub as ConvNextModel,Gb as ConvNextPreTrainedModel,Rb as ConvNextV2ForImageClassification,qb as ConvNextV2Model,Wb as ConvNextV2PreTrainedModel,Xb as DPTFeatureExtractor,Hb as DPTForDepthEstimation,Jb as DPTImageProcessor,Kb as DPTModel,Qb as DPTPreTrainedModel,Zb as DacDecoderModel,Yb as DacDecoderOutput,ek as DacEncoderModel,tk as DacEncoderOutput,sk as DacFeatureExtractor,nk as DacModel,ak as DacPreTrainedModel,rk as DataTypeMap,ok as DebertaForMaskedLM,ik as DebertaForQuestionAnswering,lk as DebertaForSequenceClassification,ck as DebertaForTokenClassification,dk as DebertaModel,uk as DebertaPreTrainedModel,_k as DebertaTokenizer,hk as DebertaV2ForMaskedLM,pk as DebertaV2ForQuestionAnswering,mk as DebertaV2ForSequenceClassification,fk as DebertaV2ForTokenClassification,gk as DebertaV2Model,wk as DebertaV2PreTrainedModel,yk as DebertaV2Tokenizer,xk as DecisionTransformerModel,bk as DecisionTransformerPreTrainedModel,kk as DeiTFeatureExtractor,vk as DeiTForImageClassification,Mk as DeiTImageProcessor,Ek as DeiTModel,Ak as DeiTPreTrainedModel,Ck as DepthAnythingForDepthEstimation,Tk as DepthAnythingPreTrainedModel,Fk as DepthEstimationPipeline,Pk as DepthProForDepthEstimation,Sk as DepthProPreTrainedModel,zk as DetrFeatureExtractor,Ik as DetrForObjectDetection,Lk as DetrForSegmentation,Bk as DetrImageProcessor,Ok as DetrModel,Nk as DetrObjectDetectionOutput,$k as DetrPreTrainedModel,Vk as DetrSegmentationOutput,Dk as Dinov2ForImageClassification,jk as Dinov2Model,Uk as Dinov2PreTrainedModel,Gk as Dinov2WithRegistersForImageClassification,Rk as Dinov2WithRegistersModel,qk as Dinov2WithRegistersPreTrainedModel,Wk as DistilBertForMaskedLM,Xk as DistilBertForQuestionAnswering,Hk as DistilBertForSequenceClassification,Jk as DistilBertForTokenClassification,Kk as DistilBertModel,Qk as DistilBertPreTrainedModel,Zk as DistilBertTokenizer,Yk as DocumentQuestionAnsweringPipeline,ev as DonutFeatureExtractor,tv as DonutImageProcessor,sv as DonutSwinModel,nv as DonutSwinPreTrainedModel,av as EfficientNetForImageClassification,rv as EfficientNetImageProcessor,ov as EfficientNetModel,iv as EfficientNetPreTrainedModel,lv as ElectraForMaskedLM,cv as ElectraForQuestionAnswering,dv as ElectraForSequenceClassification,uv as ElectraForTokenClassification,_v as ElectraModel,hv as ElectraPreTrainedModel,pv as ElectraTokenizer,mv as EncodecFeatureExtractor,fv as EosTokenCriteria,gv as EsmForMaskedLM,wv as EsmForSequenceClassification,yv as EsmForTokenClassification,xv as EsmModel,bv as EsmPreTrainedModel,kv as EsmTokenizer,vv as ExaoneForCausalLM,Mv as ExaoneModel,Ev as ExaonePreTrainedModel,Av as FFT,Cv as FalconForCausalLM,Tv as FalconModel,Fv as FalconPreTrainedModel,Pv as FalconTokenizer,Sv as FastViTForImageClassification,zv as FastViTModel,Iv as FastViTPreTrainedModel,Lv as FeatureExtractionPipeline,Bv as FeatureExtractor,Ov as FillMaskPipeline,Nv as Florence2ForConditionalGeneration,$v as Florence2PreTrainedModel,Vv as Florence2Processor,Dv as ForcedBOSTokenLogitsProcessor,jv as ForcedEOSTokenLogitsProcessor,Uv as GLPNFeatureExtractor,Gv as GLPNForDepthEstimation,Rv as GLPNModel,qv as GLPNPreTrainedModel,Wv as GPT2LMHeadModel,Xv as GPT2Model,Hv as GPT2PreTrainedModel,Jv as GPT2Tokenizer,Kv as GPTBigCodeForCausalLM,Qv as GPTBigCodeModel,Zv as GPTBigCodePreTrainedModel,Yv as GPTJForCausalLM,eM as GPTJModel,tM as GPTJPreTrainedModel,sM as GPTNeoForCausalLM,nM as GPTNeoModel,aM as GPTNeoPreTrainedModel,rM as GPTNeoXForCausalLM,oM as GPTNeoXModel,iM as GPTNeoXPreTrainedModel,lM as GPTNeoXTokenizer,cM as Gemma2ForCausalLM,dM as Gemma2Model,uM as Gemma2PreTrainedModel,_M as GemmaForCausalLM,hM as GemmaModel,pM as GemmaPreTrainedModel,mM as GemmaTokenizer,fM as GlmForCausalLM,gM as GlmModel,wM as GlmPreTrainedModel,yM as GraniteForCausalLM,xM as GraniteModel,bM as GranitePreTrainedModel,kM as Grok1Tokenizer,vM as GroundingDinoForObjectDetection,MM as GroundingDinoImageProcessor,EM as GroundingDinoPreTrainedModel,AM as GroundingDinoProcessor,CM as GroupViTModel,TM as GroupViTPreTrainedModel,FM as HeliumForCausalLM,PM as HeliumModel,SM as HeliumPreTrainedModel,zM as HerbertTokenizer,IM as HieraForImageClassification,LM as HieraModel,BM as HieraPreTrainedModel,OM as HubertForCTC,NM as HubertForSequenceClassification,$M as HubertModel,VM as HubertPreTrainedModel,DM as IJepaForImageClassification,jM as IJepaModel,UM as IJepaPreTrainedModel,GM as Idefics3ForConditionalGeneration,RM as Idefics3ImageProcessor,qM as Idefics3PreTrainedModel,WM as Idefics3Processor,XM as ImageClassificationPipeline,HM as ImageFeatureExtractionPipeline,JM as ImageFeatureExtractor,KM as ImageMattingOutput,QM as ImageProcessor,ZM as ImageSegmentationPipeline,YM as ImageToImagePipeline,eE as ImageToTextPipeline,tE as InterruptableStoppingCriteria,sE as JAISLMHeadModel,nE as JAISModel,aE as JAISPreTrainedModel,rE as JinaCLIPImageProcessor,oE as JinaCLIPModel,iE as JinaCLIPPreTrainedModel,lE as JinaCLIPProcessor,cE as JinaCLIPTextModel,dE as JinaCLIPVisionModel,uE as LiteWhisperForConditionalGeneration,_E as LlamaForCausalLM,hE as LlamaModel,pE as LlamaPreTrainedModel,mE as LlamaTokenizer,fE as LlavaForConditionalGeneration,gE as LlavaOnevisionForConditionalGeneration,wE as LlavaOnevisionImageProcessor,yE as LlavaPreTrainedModel,xE as LogitsProcessor,bE as LogitsProcessorList,kE as LogitsWarper,vE as LongT5ForConditionalGeneration,ME as LongT5Model,EE as LongT5PreTrainedModel,AE as M2M100ForConditionalGeneration,CE as M2M100Model,TE as M2M100PreTrainedModel,FE as M2M100Tokenizer,PE as MBart50Tokenizer,SE as MBartForCausalLM,zE as MBartForConditionalGeneration,IE as MBartForSequenceClassification,LE as MBartModel,BE as MBartPreTrainedModel,OE as MBartTokenizer,NE as MPNetForMaskedLM,$E as MPNetForQuestionAnswering,VE as MPNetForSequenceClassification,DE as MPNetForTokenClassification,jE as MPNetModel,UE as MPNetPreTrainedModel,GE as MPNetTokenizer,RE as MT5ForConditionalGeneration,qE as MT5Model,WE as MT5PreTrainedModel,XE as MarianMTModel,HE as MarianModel,JE as MarianPreTrainedModel,KE as MarianTokenizer,QE as Mask2FormerImageProcessor,ZE as MaskFormerFeatureExtractor,YE as MaskFormerForInstanceSegmentation,eA as MaskFormerImageProcessor,tA as MaskFormerModel,sA as MaskFormerPreTrainedModel,nA as MaskedLMOutput,aA as MaxLengthCriteria,rA as MgpstrForSceneTextRecognition,oA as MgpstrModelOutput,iA as MgpstrPreTrainedModel,lA as MgpstrProcessor,cA as MgpstrTokenizer,dA as MimiDecoderModel,uA as MimiDecoderOutput,_A as MimiEncoderModel,hA as MimiEncoderOutput,pA as MimiModel,mA as MimiPreTrainedModel,fA as MinLengthLogitsProcessor,gA as MinNewTokensLengthLogitsProcessor,wA as MistralForCausalLM,yA as MistralModel,xA as MistralPreTrainedModel,bA as MobileBertForMaskedLM,kA as MobileBertForQuestionAnswering,vA as MobileBertForSequenceClassification,MA as MobileBertModel,EA as MobileBertPreTrainedModel,AA as MobileBertTokenizer,CA as MobileLLMForCausalLM,TA as MobileLLMModel,FA as MobileLLMPreTrainedModel,PA as MobileNetV1FeatureExtractor,SA as MobileNetV1ForImageClassification,zA as MobileNetV1ForSemanticSegmentation,IA as MobileNetV1ImageProcessor,LA as MobileNetV1Model,BA as MobileNetV1PreTrainedModel,OA as MobileNetV2FeatureExtractor,NA as MobileNetV2ForImageClassification,$A as MobileNetV2ForSemanticSegmentation,VA as MobileNetV2ImageProcessor,DA as MobileNetV2Model,jA as MobileNetV2PreTrainedModel,UA as MobileNetV3FeatureExtractor,GA as MobileNetV3ForImageClassification,RA as MobileNetV3ForSemanticSegmentation,qA as MobileNetV3ImageProcessor,WA as MobileNetV3Model,XA as MobileNetV3PreTrainedModel,HA as MobileNetV4FeatureExtractor,JA as MobileNetV4ForImageClassification,KA as MobileNetV4ForSemanticSegmentation,QA as MobileNetV4ImageProcessor,ZA as MobileNetV4Model,YA as MobileNetV4PreTrainedModel,eC as MobileViTFeatureExtractor,tC as MobileViTForImageClassification,sC as MobileViTImageProcessor,nC as MobileViTModel,aC as MobileViTPreTrainedModel,rC as MobileViTV2ForImageClassification,oC as MobileViTV2Model,iC as MobileViTV2PreTrainedModel,lC as ModelOutput,cC as ModernBertForMaskedLM,dC as ModernBertForSequenceClassification,uC as ModernBertForTokenClassification,_C as ModernBertModel,hC as ModernBertPreTrainedModel,pC as Moondream1ForConditionalGeneration,mC as MoonshineFeatureExtractor,fC as MoonshineForConditionalGeneration,gC as MoonshineModel,wC as MoonshinePreTrainedModel,yC as MoonshineProcessor,xC as MptForCausalLM,bC as MptModel,kC as MptPreTrainedModel,vC as MultiModalityCausalLM,MC as MultiModalityPreTrainedModel,EC as MusicgenForCausalLM,AC as MusicgenForConditionalGeneration,CC as MusicgenModel,TC as MusicgenPreTrainedModel,FC as NllbTokenizer,PC as NoBadWordsLogitsProcessor,SC as NoRepeatNGramLogitsProcessor,zC as NomicBertModel,IC as NomicBertPreTrainedModel,LC as NougatImageProcessor,BC as NougatTokenizer,OC as OPTForCausalLM,NC as OPTModel,$C as OPTPreTrainedModel,VC as ObjectDetectionPipeline,DC as Olmo2ForCausalLM,jC as Olmo2Model,UC as Olmo2PreTrainedModel,GC as OlmoForCausalLM,RC as OlmoModel,qC as OlmoPreTrainedModel,WC as OpenELMForCausalLM,XC as OpenELMModel,HC as OpenELMPreTrainedModel,JC as OwlViTFeatureExtractor,KC as OwlViTForObjectDetection,QC as OwlViTImageProcessor,ZC as OwlViTModel,YC as OwlViTPreTrainedModel,eT as OwlViTProcessor,tT as Owlv2ForObjectDetection,sT as Owlv2ImageProcessor,nT as Owlv2Model,aT as Owlv2PreTrainedModel,rT as PaliGemmaForConditionalGeneration,oT as PaliGemmaPreTrainedModel,iT as PaliGemmaProcessor,lT as PatchTSMixerForPrediction,cT as PatchTSMixerModel,dT as PatchTSMixerPreTrainedModel,uT as PatchTSTForPrediction,_T as PatchTSTModel,hT as PatchTSTPreTrainedModel,pT as Phi3ForCausalLM,mT as Phi3Model,fT as Phi3PreTrainedModel,gT as Phi3VForCausalLM,wT as Phi3VImageProcessor,yT as Phi3VPreTrainedModel,xT as Phi3VProcessor,bT as PhiForCausalLM,kT as PhiModel,vT as PhiPreTrainedModel,MT as Pipeline,ET as PreTrainedModel,AT as PreTrainedTokenizer,CT as PretrainedConfig,TT as PretrainedMixin,FT as Processor,PT as PvtForImageClassification,ST as PvtImageProcessor,zT as PvtModel,IT as PvtPreTrainedModel,LT as PyAnnoteFeatureExtractor,BT as PyAnnoteForAudioFrameClassification,OT as PyAnnoteModel,NT as PyAnnotePreTrainedModel,$T as PyAnnoteProcessor,VT as QuestionAnsweringModelOutput,DT as QuestionAnsweringPipeline,jT as Qwen2ForCausalLM,UT as Qwen2Model,GT as Qwen2PreTrainedModel,RT as Qwen2Tokenizer,qT as Qwen2VLForConditionalGeneration,WT as Qwen2VLImageProcessor,XT as Qwen2VLPreTrainedModel,HT as Qwen2VLProcessor,JT as RTDetrForObjectDetection,KT as RTDetrImageProcessor,QT as RTDetrModel,ZT as RTDetrObjectDetectionOutput,YT as RTDetrPreTrainedModel,eF as RawAudio,tF as RawImage,sF as RawVideo,nF as RawVideoFrame,aF as RepetitionPenaltyLogitsProcessor,rF as ResNetForImageClassification,oF as ResNetModel,iF as ResNetPreTrainedModel,lF as RoFormerForMaskedLM,cF as RoFormerForQuestionAnswering,dF as RoFormerForSequenceClassification,uF as RoFormerForTokenClassification,_F as RoFormerModel,hF as RoFormerPreTrainedModel,pF as RoFormerTokenizer,mF as RobertaForMaskedLM,fF as RobertaForQuestionAnswering,gF as RobertaForSequenceClassification,wF as RobertaForTokenClassification,yF as RobertaModel,xF as RobertaPreTrainedModel,bF as RobertaTokenizer,kF as SamImageProcessor,vF as SamImageSegmentationOutput,MF as SamModel,EF as SamPreTrainedModel,AF as SamProcessor,CF as SapiensForDepthEstimation,TF as SapiensForNormalEstimation,FF as SapiensForSemanticSegmentation,PF as SapiensPreTrainedModel,SF as SeamlessM4TFeatureExtractor,zF as SegformerFeatureExtractor,IF as SegformerForImageClassification,LF as SegformerForSemanticSegmentation,BF as SegformerImageProcessor,OF as SegformerModel,NF as SegformerPreTrainedModel,$F as Seq2SeqLMOutput,VF as SequenceClassifierOutput,DF as SiglipImageProcessor,jF as SiglipModel,UF as SiglipPreTrainedModel,GF as SiglipTextModel,RF as SiglipTokenizer,qF as SiglipVisionModel,WF as SmolVLMForConditionalGeneration,XF as SmolVLMImageProcessor,HF as SmolVLMProcessor,JF as SpeechT5FeatureExtractor,KF as SpeechT5ForSpeechToText,QF as SpeechT5ForTextToSpeech,ZF as SpeechT5HifiGan,YF as SpeechT5Model,eP as SpeechT5PreTrainedModel,tP as SpeechT5Processor,sP as SpeechT5Tokenizer,nP as SqueezeBertForMaskedLM,aP as SqueezeBertForQuestionAnswering,rP as SqueezeBertForSequenceClassification,oP as SqueezeBertModel,iP as SqueezeBertPreTrainedModel,lP as SqueezeBertTokenizer,cP as StableLmForCausalLM,dP as StableLmModel,uP as StableLmPreTrainedModel,_P as Starcoder2ForCausalLM,hP as Starcoder2Model,pP as Starcoder2PreTrainedModel,mP as StoppingCriteria,fP as StoppingCriteriaList,gP as StyleTextToSpeech2Model,wP as StyleTextToSpeech2PreTrainedModel,yP as SummarizationPipeline,xP as SuppressTokensAtBeginLogitsProcessor,bP as Swin2SRForImageSuperResolution,kP as Swin2SRImageProcessor,vP as Swin2SRModel,MP as Swin2SRPreTrainedModel,EP as SwinForImageClassification,AP as SwinForSemanticSegmentation,CP as SwinModel,TP as SwinPreTrainedModel,FP as T5ForConditionalGeneration,PP as T5Model,SP as T5PreTrainedModel,zP as T5Tokenizer,IP as TableTransformerForObjectDetection,LP as TableTransformerModel,BP as TableTransformerObjectDetectionOutput,OP as TableTransformerPreTrainedModel,NP as TemperatureLogitsWarper,$P as Tensor,VP as Text2TextGenerationPipeline,DP as TextClassificationPipeline,jP as TextGenerationPipeline,UP as TextStreamer,GP as TextToAudioPipeline,RP as TokenClassificationPipeline,qP as TokenClassifierOutput,WP as TokenizerModel,XP as TopKLogitsWarper,HP as TopPLogitsWarper,JP as TrOCRForCausalLM,KP as TrOCRPreTrainedModel,QP as TranslationPipeline,ZP as UltravoxModel,YP as UltravoxPreTrainedModel,eS as UltravoxProcessor,tS as UniSpeechForCTC,sS as UniSpeechForSequenceClassification,nS as UniSpeechModel,aS as UniSpeechPreTrainedModel,rS as UniSpeechSatForAudioFrameClassification,oS as UniSpeechSatForCTC,iS as UniSpeechSatForSequenceClassification,lS as UniSpeechSatModel,cS as UniSpeechSatPreTrainedModel,dS as VLChatProcessor,uS as VLMImageProcessor,_S as ViTFeatureExtractor,hS as ViTForImageClassification,pS as ViTImageProcessor,mS as ViTMAEModel,fS as ViTMAEPreTrainedModel,gS as ViTMSNForImageClassification,wS as ViTMSNModel,yS as ViTMSNPreTrainedModel,xS as ViTModel,bS as ViTPreTrainedModel,kS as VisionEncoderDecoderModel,vS as VitMatteForImageMatting,MS as VitMatteImageProcessor,ES as VitMattePreTrainedModel,AS as VitPoseForPoseEstimation,CS as VitPoseImageProcessor,TS as VitPosePreTrainedModel,FS as VitsModel,PS as VitsModelOutput,SS as VitsPreTrainedModel,zS as VitsTokenizer,IS as Wav2Vec2BertForCTC,LS as Wav2Vec2BertForSequenceClassification,BS as Wav2Vec2BertModel,OS as Wav2Vec2BertPreTrainedModel,NS as Wav2Vec2CTCTokenizer,$S as Wav2Vec2FeatureExtractor,VS as Wav2Vec2ForAudioFrameClassification,DS as Wav2Vec2ForCTC,jS as Wav2Vec2ForSequenceClassification,US as Wav2Vec2Model,GS as Wav2Vec2PreTrainedModel,RS as Wav2Vec2Processor,qS as Wav2Vec2ProcessorWithLM,WS as WavLMForAudioFrameClassification,XS as WavLMForCTC,HS as WavLMForSequenceClassification,JS as WavLMForXVector,KS as WavLMModel,QS as WavLMPreTrainedModel,ZS as WeSpeakerFeatureExtractor,YS as WeSpeakerResNetModel,ez as WeSpeakerResNetPreTrainedModel,tz as WhisperFeatureExtractor,sz as WhisperForConditionalGeneration,nz as WhisperModel,az as WhisperPreTrainedModel,rz as WhisperProcessor,oz as WhisperTextStreamer,iz as WhisperTimeStampLogitsProcessor,lz as WhisperTokenizer,cz as XLMForQuestionAnswering,dz as XLMForSequenceClassification,uz as XLMForTokenClassification,_z as XLMModel,hz as XLMPreTrainedModel,pz as XLMRobertaForMaskedLM,mz as XLMRobertaForQuestionAnswering,fz as XLMRobertaForSequenceClassification,gz as XLMRobertaForTokenClassification,wz as XLMRobertaModel,yz as XLMRobertaPreTrainedModel,xz as XLMRobertaTokenizer,bz as XLMTokenizer,kz as XLMWithLMHeadModel,vz as XVectorOutput,Mz as YolosFeatureExtractor,Ez as YolosForObjectDetection,Az as YolosImageProcessor,Cz as YolosModel,Tz as YolosObjectDetectionOutput,Fz as YolosPreTrainedModel,Pz as ZeroShotAudioClassificationPipeline,Sz as ZeroShotClassificationPipeline,zz as ZeroShotImageClassificationPipeline,Iz as ZeroShotObjectDetectionPipeline,Lz as bankers_round,Bz as cat,Oz as cos_sim,Nz as dot,$z as dynamic_time_warping,Vz as env,Dz as full,jz as full_like,Uz as getKeyValueShapes,Gz as hamming,Rz as hanning,qz as interpolate,Wz as interpolate_4d,Xz as interpolate_data,Hz as is_chinese_char,Jz as layer_norm,Kz as load_image,Qz as load_video,Zz as log_softmax,Yz as magnitude,eI as matmul,tI as max,sI as mean,nI as mean_pooling,aI as medianFilter,rI as mel_filter_bank,oI as min,iI as ones,lI as ones_like,cI as permute,dI as permute_data,uI as pipeline,_I as quantize_embeddings,hI as rand,pI as read_audio,mI as rfft,fI as round,gI as slice,wI as softmax,yI as spectrogram,xI as stack,bI as std_mean,kI as topk,vI as window_function,MI as zeros,EI as zeros_like};